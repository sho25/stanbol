begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|autotagging
operator|.
name|jena
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLDecoder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|NotImplementedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|CorruptIndexException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
operator|.
name|MaxFieldLength
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|FSDirectory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|LockObtainFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|QuerySolution
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Literal
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|ModelFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Statement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|StmtIterator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|tdb
operator|.
name|TDBFactory
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|autotagging
operator|.
name|Autotagger
import|;
end_import

begin_comment
comment|/**  * Build a Lucene index out of a Jena model  *  * @author ogrisel  *  */
end_comment

begin_class
specifier|public
class|class
name|ModelIndexer
implements|implements
name|Closeable
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ModelIndexer
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|URI_FIELD
init|=
literal|"uri"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_DBPEDIA_SAMPLE
init|=
literal|"dbpedia/dbpedia-sample-10000.nt"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POPULARITY_SCORE_PROPERTY
init|=
literal|"http://www.iksproject.eu/ns/popularity-score"
decl_stmt|;
specifier|private
specifier|final
name|IndexWriter
name|iwriter
decl_stmt|;
specifier|private
specifier|final
name|Model
name|model
decl_stmt|;
comment|// reduce GC load by reusing Document and Fields instances
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Field
argument_list|>
name|literalFields
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Field
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Field
argument_list|>
argument_list|>
name|uriFields
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Field
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Float
argument_list|>
name|boostedFields
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Float
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|String
name|scorePropertyUri
init|=
name|POPULARITY_SCORE_PROPERTY
decl_stmt|;
specifier|private
name|Field
name|getField
parameter_list|(
name|String
name|property
parameter_list|,
name|String
name|value
parameter_list|,
name|boolean
name|isLiteral
parameter_list|)
block|{
comment|// make the cache key
if|if
condition|(
name|isLiteral
condition|)
block|{
name|Field
name|cachedField
init|=
name|literalFields
operator|.
name|get
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|cachedField
operator|==
literal|null
condition|)
block|{
name|cachedField
operator|=
operator|new
name|Field
argument_list|(
name|property
argument_list|,
name|value
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|,
name|Field
operator|.
name|Index
operator|.
name|ANALYZED
argument_list|)
expr_stmt|;
name|literalFields
operator|.
name|put
argument_list|(
name|property
argument_list|,
name|cachedField
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachedField
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|cachedField
return|;
block|}
else|else
block|{
comment|// TODO: make sure that the multivalued URI properties take value in
comment|// a limit size controlled vocabulary which is the case for types,
comment|// but not for relations between entities
name|Map
argument_list|<
name|String
argument_list|,
name|Field
argument_list|>
name|cachedFields
init|=
name|uriFields
operator|.
name|get
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|cachedFields
operator|==
literal|null
condition|)
block|{
name|cachedFields
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Field
argument_list|>
argument_list|()
expr_stmt|;
name|uriFields
operator|.
name|put
argument_list|(
name|property
argument_list|,
name|cachedFields
argument_list|)
expr_stmt|;
block|}
name|Field
name|cachedField
init|=
name|cachedFields
operator|.
name|get
argument_list|(
name|value
argument_list|)
decl_stmt|;
if|if
condition|(
name|cachedField
operator|==
literal|null
condition|)
block|{
name|cachedField
operator|=
operator|new
name|Field
argument_list|(
name|property
argument_list|,
name|value
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|,
name|Field
operator|.
name|Index
operator|.
name|NOT_ANALYZED
argument_list|)
expr_stmt|;
name|cachedFields
operator|.
name|put
argument_list|(
name|value
argument_list|,
name|cachedField
argument_list|)
expr_stmt|;
block|}
return|return
name|cachedField
return|;
block|}
block|}
specifier|public
name|ModelIndexer
parameter_list|(
specifier|final
name|IndexWriter
name|iwriter
parameter_list|,
specifier|final
name|Model
name|model
parameter_list|)
block|{
name|this
operator|.
name|iwriter
operator|=
name|iwriter
expr_stmt|;
name|this
operator|.
name|model
operator|=
name|model
expr_stmt|;
comment|// by default boost the title (a.k.a. rdfs:label of the entity)
name|boostedFields
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2000/01/rdf-schema#label"
argument_list|,
literal|3.0f
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Float
argument_list|>
name|getBoostedFields
parameter_list|()
block|{
return|return
name|boostedFields
return|;
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|iwriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|model
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Iterator
argument_list|<
name|Document
argument_list|>
name|indexIterator
parameter_list|()
block|{
name|ModelResampler
name|sampler
init|=
operator|new
name|ModelResampler
argument_list|()
decl_stmt|;
specifier|final
name|ResultSet
name|resultSet
init|=
name|sampler
operator|.
name|queryAllResources
argument_list|(
name|model
argument_list|)
decl_stmt|;
specifier|final
name|Property
name|scoreProperty
init|=
name|model
operator|.
name|getProperty
argument_list|(
name|scorePropertyUri
argument_list|)
decl_stmt|;
return|return
operator|new
name|Iterator
argument_list|<
name|Document
argument_list|>
argument_list|()
block|{
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|resultSet
operator|.
name|hasNext
argument_list|()
return|;
block|}
specifier|public
name|Document
name|next
parameter_list|()
block|{
name|QuerySolution
name|solution
init|=
name|resultSet
operator|.
name|next
argument_list|()
decl_stmt|;
name|Resource
name|r
init|=
name|solution
operator|.
name|getResource
argument_list|(
literal|"resource"
argument_list|)
decl_stmt|;
name|StmtIterator
name|stmts
init|=
name|model
operator|.
name|listStatements
argument_list|(
name|r
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|doc
operator|.
name|getFields
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|getField
argument_list|(
name|URI_FIELD
argument_list|,
name|r
operator|.
name|getURI
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Statement
argument_list|>
name|stmtList
init|=
name|stmts
operator|.
name|toList
argument_list|()
decl_stmt|;
comment|// find document boost info if any
name|float
name|docBoost
init|=
literal|1.0f
decl_stmt|;
name|Statement
name|toDelete
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Statement
name|stmt
range|:
name|stmtList
control|)
block|{
if|if
condition|(
name|stmt
operator|.
name|getPredicate
argument_list|()
operator|.
name|equals
argument_list|(
name|scoreProperty
argument_list|)
condition|)
block|{
name|docBoost
operator|=
name|stmt
operator|.
name|getFloat
argument_list|()
expr_stmt|;
name|toDelete
operator|=
name|stmt
expr_stmt|;
block|}
block|}
if|if
condition|(
name|toDelete
operator|!=
literal|null
condition|)
block|{
name|stmtList
operator|.
name|remove
argument_list|(
name|toDelete
argument_list|)
expr_stmt|;
block|}
comment|// index all statement objects as lucene fields
for|for
control|(
name|Statement
name|stmt
range|:
name|stmtList
control|)
block|{
name|String
name|text
decl_stmt|;
name|boolean
name|isLiteral
init|=
name|stmt
operator|.
name|getObject
argument_list|()
operator|.
name|isLiteral
argument_list|()
decl_stmt|;
if|if
condition|(
name|isLiteral
condition|)
block|{
name|text
operator|=
name|stmt
operator|.
name|getObject
argument_list|()
operator|.
name|as
argument_list|(
name|Literal
operator|.
name|class
argument_list|)
operator|.
name|getString
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|stmt
operator|.
name|getObject
argument_list|()
operator|.
name|isURIResource
argument_list|()
condition|)
block|{
name|text
operator|=
name|stmt
operator|.
name|getObject
argument_list|()
operator|.
name|as
argument_list|(
name|Resource
operator|.
name|class
argument_list|)
operator|.
name|getURI
argument_list|()
expr_stmt|;
block|}
else|else
block|{
comment|// skip non indexable nodes (blank nodes, seqs, bags,
comment|// ...)
continue|continue;
block|}
name|Field
name|field
init|=
name|getField
argument_list|(
name|stmt
operator|.
name|getPredicate
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|text
argument_list|,
name|isLiteral
argument_list|)
decl_stmt|;
name|Float
name|boost
init|=
name|boostedFields
operator|.
name|get
argument_list|(
name|field
operator|.
name|name
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|boost
operator|!=
literal|null
condition|)
block|{
name|field
operator|.
name|setBoost
argument_list|(
name|boost
operator|*
name|docBoost
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|field
operator|.
name|setBoost
argument_list|(
name|docBoost
argument_list|)
expr_stmt|;
block|}
name|doc
operator|.
name|add
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|iwriter
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"error indexing "
operator|+
name|r
operator|.
name|getURI
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
name|doc
return|;
block|}
return|return
name|doc
return|;
block|}
specifier|public
name|void
name|remove
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|()
throw|;
block|}
block|}
return|;
block|}
specifier|public
specifier|static
name|void
name|index
parameter_list|(
name|Model
name|model
parameter_list|,
name|IndexWriter
name|writer
parameter_list|,
name|boolean
name|close
parameter_list|)
throws|throws
name|IOException
block|{
name|ModelIndexer
name|indexer
init|=
operator|new
name|ModelIndexer
argument_list|(
name|writer
argument_list|,
name|model
argument_list|)
decl_stmt|;
try|try
block|{
name|log
operator|.
name|info
argument_list|(
literal|"computing the list of entities to process..."
argument_list|)
expr_stmt|;
name|long
name|lastTime
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|Document
argument_list|>
name|iterator
init|=
name|indexer
operator|.
name|indexIterator
argument_list|()
decl_stmt|;
name|long
name|newTime
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"query took %fs"
argument_list|,
operator|(
name|newTime
operator|-
name|lastTime
operator|)
operator|/
literal|1000.
argument_list|)
argument_list|)
expr_stmt|;
name|lastTime
operator|=
name|newTime
expr_stmt|;
name|int
name|i
init|=
literal|1
decl_stmt|;
name|long
name|checkpointSize
init|=
literal|5000
decl_stmt|;
while|while
condition|(
name|iterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Document
name|doc
init|=
name|iterator
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|i
operator|%
name|checkpointSize
operator|==
literal|0
condition|)
block|{
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|newTime
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|double
name|duration
init|=
operator|(
name|newTime
operator|-
name|lastTime
operator|)
operator|/
literal|1000.
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"indexed entity %09d '%s' at %f entities/s"
argument_list|,
name|i
argument_list|,
name|URLDecoder
operator|.
name|decode
argument_list|(
name|doc
operator|.
name|get
argument_list|(
name|URI_FIELD
argument_list|)
argument_list|,
literal|"UTF-8"
argument_list|)
argument_list|,
name|checkpointSize
operator|/
name|duration
argument_list|)
argument_list|)
expr_stmt|;
name|lastTime
operator|=
name|newTime
expr_stmt|;
block|}
name|i
operator|++
expr_stmt|;
block|}
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"successfully indexed %09d entities, now optimizing the index"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|optimize
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|close
condition|)
block|{
name|indexer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
name|void
name|index
parameter_list|(
name|File
name|tdbModel
parameter_list|,
name|File
name|fsDirectory
parameter_list|)
throws|throws
name|CorruptIndexException
throws|,
name|LockObtainFailedException
throws|,
name|IOException
block|{
name|Model
name|model
init|=
name|TDBFactory
operator|.
name|createModel
argument_list|(
name|tdbModel
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
decl_stmt|;
name|index
argument_list|(
name|model
argument_list|,
name|fsDirectory
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|index
parameter_list|(
name|Model
name|model
parameter_list|,
name|File
name|fsDirectory
parameter_list|)
throws|throws
name|CorruptIndexException
throws|,
name|LockObtainFailedException
throws|,
name|IOException
block|{
name|MaxFieldLength
name|maxFieldLength
init|=
operator|new
name|MaxFieldLength
argument_list|(
literal|100000
argument_list|)
decl_stmt|;
comment|// TODO: re-enable shingles once we can get rid of the "-"
comment|// shingles
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|FSDirectory
operator|.
name|open
argument_list|(
name|fsDirectory
argument_list|)
argument_list|,
name|Autotagger
operator|.
name|getDefaultAnalyzer
argument_list|()
argument_list|,
literal|true
argument_list|,
name|maxFieldLength
argument_list|)
decl_stmt|;
name|writer
operator|.
name|setRAMBufferSizeMB
argument_list|(
literal|42
argument_list|)
expr_stmt|;
name|index
argument_list|(
name|model
argument_list|,
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|String
name|DEFAULT_INDEX_DIRECTORY
parameter_list|()
block|{
return|return
literal|"default-iks-autotagging-idx"
return|;
block|}
specifier|public
specifier|static
name|File
name|buildDefaultIndex
parameter_list|()
throws|throws
name|CorruptIndexException
throws|,
name|LockObtainFailedException
throws|,
name|IOException
block|{
return|return
name|ModelIndexer
operator|.
name|buildDefaultIndex
argument_list|(
literal|null
argument_list|,
literal|false
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|File
name|buildDefaultIndex
parameter_list|(
name|File
name|folder
parameter_list|,
name|boolean
name|deleteExisting
parameter_list|)
throws|throws
name|CorruptIndexException
throws|,
name|LockObtainFailedException
throws|,
name|IOException
block|{
if|if
condition|(
name|folder
operator|==
literal|null
condition|)
block|{
name|folder
operator|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|File
name|fsDirectory
init|=
operator|new
name|File
argument_list|(
name|folder
argument_list|,
name|DEFAULT_INDEX_DIRECTORY
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|deleteExisting
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"deleting default indexed model in: "
operator|+
name|fsDirectory
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|fsDirectory
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|fsDirectory
operator|.
name|exists
argument_list|()
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"creating default indexed model in: "
operator|+
name|fsDirectory
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|InputStream
name|stream
init|=
name|ModelIndexer
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|DEFAULT_DBPEDIA_SAMPLE
argument_list|)
decl_stmt|;
if|if
condition|(
name|stream
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"could not find resource: "
operator|+
name|DEFAULT_DBPEDIA_SAMPLE
argument_list|)
throw|;
block|}
name|Model
name|model
init|=
name|ModelFactory
operator|.
name|createDefaultModel
argument_list|()
decl_stmt|;
name|model
operator|.
name|read
argument_list|(
name|stream
argument_list|,
literal|null
argument_list|,
literal|"N-TRIPLE"
argument_list|)
expr_stmt|;
name|ModelIndexer
operator|.
name|index
argument_list|(
name|model
argument_list|,
name|fsDirectory
argument_list|)
expr_stmt|;
block|}
return|return
name|fsDirectory
return|;
block|}
block|}
end_class

end_unit

