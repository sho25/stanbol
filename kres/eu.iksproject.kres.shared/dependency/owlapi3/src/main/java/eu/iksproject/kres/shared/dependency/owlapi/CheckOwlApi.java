begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * To change this template, choose Tools | Templates  * and open the template in the editor.  */
end_comment

begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|shared
operator|.
name|dependency
operator|.
name|owlapi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|apibinding
operator|.
name|OWLManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyManager
import|;
end_import

begin_comment
comment|/**  *  * @author elvio  */
end_comment

begin_class
specifier|public
class|class
name|CheckOwlApi
block|{
specifier|private
name|boolean
name|owlapi
decl_stmt|;
specifier|public
name|CheckOwlApi
parameter_list|()
block|{
comment|//Check for owl model;
try|try
block|{
name|OWLOntologyManager
name|manager
init|=
name|OWLManager
operator|.
name|createOWLOntologyManager
argument_list|()
decl_stmt|;
name|OWLOntology
name|owlmodel
init|=
name|manager
operator|.
name|createOntology
argument_list|()
decl_stmt|;
name|this
operator|.
name|owlapi
operator|=
name|owlmodel
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|this
operator|.
name|owlapi
operator|=
literal|false
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|getCkOwl
parameter_list|()
block|{
name|boolean
name|ok
init|=
name|this
operator|.
name|owlapi
decl_stmt|;
return|return
name|ok
return|;
block|}
block|}
end_class

end_unit

