begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|reasoners
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLAxiom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|reasoner
operator|.
name|OWLReasoner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|util
operator|.
name|InferredOntologyGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|reasoners
operator|.
name|KReSReasoner
import|;
end_import

begin_class
annotation|@
name|Component
argument_list|(
name|immediate
operator|=
literal|true
argument_list|,
name|metatype
operator|=
literal|true
argument_list|)
annotation|@
name|Service
argument_list|(
name|KReSReasoner
operator|.
name|class
argument_list|)
specifier|public
class|class
name|KReSReasonerImpl
implements|implements
name|KReSReasoner
block|{
specifier|private
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|public
name|KReSReasonerImpl
parameter_list|()
block|{ 		 	}
specifier|public
name|OWLReasoner
name|getReasoner
parameter_list|(
name|OWLOntology
name|ontology
parameter_list|)
block|{
name|KReSCreateReasoner
name|kReSCreateReasoner
init|=
operator|new
name|KReSCreateReasoner
argument_list|(
name|ontology
argument_list|)
decl_stmt|;
return|return
name|kReSCreateReasoner
operator|.
name|getReasoner
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|consistencyCheck
parameter_list|(
name|OWLReasoner
name|owlReasoner
parameter_list|)
block|{
name|KReSRunReasoner
name|kReSRunReasoner
init|=
operator|new
name|KReSRunReasoner
argument_list|(
name|owlReasoner
argument_list|)
decl_stmt|;
return|return
name|kReSRunReasoner
operator|.
name|isConsistent
argument_list|()
return|;
block|}
specifier|protected
name|void
name|activate
parameter_list|(
name|ComponentContext
name|context
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Activated KReS Reasoning Services"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|deactivate
parameter_list|(
name|ComponentContext
name|context
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Dectivated KReS Reasoning Services"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|OWLOntology
name|runRules
parameter_list|(
name|OWLOntology
name|ontology
parameter_list|,
name|OWLOntology
name|ruleOntology
parameter_list|)
block|{
name|KReSRunRules
name|kReSRunRules
init|=
operator|new
name|KReSRunRules
argument_list|(
name|ruleOntology
argument_list|,
name|ontology
argument_list|)
decl_stmt|;
return|return
name|kReSRunRules
operator|.
name|runRulesReasoner
argument_list|()
return|;
block|}
block|}
end_class

end_unit

