begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2005 The Apache Software Foundation.  *   * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *   *      http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|semion
operator|.
name|reengineer
operator|.
name|parsers
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|Augmentations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|NamespaceContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|XMLAttributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|XMLDocumentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|XMLLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|XMLResourceIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|XMLString
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|XNIException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|parser
operator|.
name|XMLDocumentFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|parser
operator|.
name|XMLDocumentSource
import|;
end_import

begin_comment
comment|/**  *<p>XMLDocumentHandler which forks the pipeline to two other components.</p>  *   * @author Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)  * @version $Id$  */
end_comment

begin_class
class|class
name|TeeXMLDocumentFilterImpl
implements|implements
name|XMLDocumentFilter
block|{
comment|/**      * The next component in the pipeline who receives the event.      * This component receives events after the "side" handler      * receives them.      */
specifier|private
name|XMLDocumentHandler
name|next
decl_stmt|;
comment|/**      * The component who intercepts events.      */
specifier|private
name|XMLDocumentHandler
name|side
decl_stmt|;
comment|/**      * The source of the event.      */
specifier|private
name|XMLDocumentSource
name|source
decl_stmt|;
specifier|public
name|XMLDocumentHandler
name|getSide
parameter_list|()
block|{
return|return
name|side
return|;
block|}
specifier|public
name|void
name|setSide
parameter_list|(
name|XMLDocumentHandler
name|side
parameter_list|)
block|{
name|this
operator|.
name|side
operator|=
name|side
expr_stmt|;
block|}
specifier|public
name|XMLDocumentSource
name|getDocumentSource
parameter_list|()
block|{
return|return
name|source
return|;
block|}
specifier|public
name|void
name|setDocumentSource
parameter_list|(
name|XMLDocumentSource
name|source
parameter_list|)
block|{
name|this
operator|.
name|source
operator|=
name|source
expr_stmt|;
block|}
specifier|public
name|XMLDocumentHandler
name|getDocumentHandler
parameter_list|()
block|{
return|return
name|next
return|;
block|}
specifier|public
name|void
name|setDocumentHandler
parameter_list|(
name|XMLDocumentHandler
name|handler
parameter_list|)
block|{
name|next
operator|=
name|handler
expr_stmt|;
block|}
comment|//
comment|//
comment|//  XMLDocumentHandler implementation
comment|//
comment|//
specifier|public
name|void
name|characters
parameter_list|(
name|XMLString
name|text
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|characters
argument_list|(
name|text
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|characters
argument_list|(
name|text
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|comment
parameter_list|(
name|XMLString
name|text
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|comment
argument_list|(
name|text
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|comment
argument_list|(
name|text
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|doctypeDecl
parameter_list|(
name|String
name|rootElement
parameter_list|,
name|String
name|publicId
parameter_list|,
name|String
name|systemId
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|doctypeDecl
argument_list|(
name|rootElement
argument_list|,
name|publicId
argument_list|,
name|systemId
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|doctypeDecl
argument_list|(
name|rootElement
argument_list|,
name|publicId
argument_list|,
name|systemId
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|emptyElement
parameter_list|(
name|QName
name|element
parameter_list|,
name|XMLAttributes
name|attributes
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|emptyElement
argument_list|(
name|element
argument_list|,
name|attributes
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|emptyElement
argument_list|(
name|element
argument_list|,
name|attributes
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|endCDATA
parameter_list|(
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|endCDATA
argument_list|(
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|endCDATA
argument_list|(
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|endDocument
parameter_list|(
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|endDocument
argument_list|(
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|endDocument
argument_list|(
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|endElement
parameter_list|(
name|QName
name|element
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|endElement
argument_list|(
name|element
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|endElement
argument_list|(
name|element
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|endGeneralEntity
parameter_list|(
name|String
name|name
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|endGeneralEntity
argument_list|(
name|name
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|endGeneralEntity
argument_list|(
name|name
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|ignorableWhitespace
parameter_list|(
name|XMLString
name|text
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|ignorableWhitespace
argument_list|(
name|text
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|ignorableWhitespace
argument_list|(
name|text
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|processingInstruction
parameter_list|(
name|String
name|target
parameter_list|,
name|XMLString
name|data
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|processingInstruction
argument_list|(
name|target
argument_list|,
name|data
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|processingInstruction
argument_list|(
name|target
argument_list|,
name|data
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|startCDATA
parameter_list|(
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|startCDATA
argument_list|(
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|startCDATA
argument_list|(
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|startDocument
parameter_list|(
name|XMLLocator
name|locator
parameter_list|,
name|String
name|encoding
parameter_list|,
name|NamespaceContext
name|namespaceContext
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|startDocument
argument_list|(
name|locator
argument_list|,
name|encoding
argument_list|,
name|namespaceContext
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|startDocument
argument_list|(
name|locator
argument_list|,
name|encoding
argument_list|,
name|namespaceContext
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|startElement
parameter_list|(
name|QName
name|element
parameter_list|,
name|XMLAttributes
name|attributes
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|startElement
argument_list|(
name|element
argument_list|,
name|attributes
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|startElement
argument_list|(
name|element
argument_list|,
name|attributes
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|startGeneralEntity
parameter_list|(
name|String
name|name
parameter_list|,
name|XMLResourceIdentifier
name|identifier
parameter_list|,
name|String
name|encoding
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|startGeneralEntity
argument_list|(
name|name
argument_list|,
name|identifier
argument_list|,
name|encoding
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|startGeneralEntity
argument_list|(
name|name
argument_list|,
name|identifier
argument_list|,
name|encoding
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|textDecl
parameter_list|(
name|String
name|version
parameter_list|,
name|String
name|encoding
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|textDecl
argument_list|(
name|version
argument_list|,
name|encoding
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|textDecl
argument_list|(
name|version
argument_list|,
name|encoding
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|xmlDecl
parameter_list|(
name|String
name|version
parameter_list|,
name|String
name|encoding
parameter_list|,
name|String
name|standalone
parameter_list|,
name|Augmentations
name|augs
parameter_list|)
throws|throws
name|XNIException
block|{
name|side
operator|.
name|xmlDecl
argument_list|(
name|version
argument_list|,
name|encoding
argument_list|,
name|standalone
argument_list|,
name|augs
argument_list|)
expr_stmt|;
name|next
operator|.
name|xmlDecl
argument_list|(
name|version
argument_list|,
name|encoding
argument_list|,
name|standalone
argument_list|,
name|augs
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

