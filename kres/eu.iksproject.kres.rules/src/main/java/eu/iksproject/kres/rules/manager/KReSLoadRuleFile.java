begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * To change this template, choose Tools | Templates  * and open the template in the editor.  */
end_comment

begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|rules
operator|.
name|manager
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|base
operator|.
name|api
operator|.
name|RuleStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|apibinding
operator|.
name|OWLManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLClassAssertionAxiom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLDataFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLDataProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLDataPropertyAssertionAxiom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLNamedIndividual
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLObjectProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLObjectPropertyAssertionAxiom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyCreationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyManager
import|;
end_import

begin_comment
comment|/**  * This class will store a set of rules and recipes, describe in a file, to the KReSRuleStore used as input.<br/>  * The file contains all the rules and recipes to be added to the KReSRuleStore. The rows are the following format:<br/>  *  - All the rows that start with # will be ignored<br/>  *  - All the rows that start with $ identify a class either a Recipe or a KReSRule<br/>  *  - All the rows that start with @ identify a name<br/>  *  - All the rows that start with * identify a comment<br/>  *<br/>  * An example of file is:<br/>  * #This is a comment to the file<br/>  * #These are the rules that I want to insert in the system.<br/>  * $KReSRule<br/>  *&#64;MyRuleA<br/>  * *My comment to the rule A<br/>  * MyRuleABody -> MyRuleAHead<br/>  *&#64;MyRuleB<br/>  * *My comment to the rule B<br/>  * MyRuleBBody -> MyRuleBHead<br/>  *&#64;MyRuleC<br/>  * *My comment to the rule C<br/>  * MyRuleCBody -> MyRuleCHead<br/>  *<br/>  * #This is a recipe<br/>  * $Recipe<br/>  *&#64;MyRecipe<br/>  * *My comment to the recipe<br/>  * MyRuleC<br/>  * MyRuleB<br/>  * MyRuleA<br/>  *<br/>  * N.B. The KReSRuleStore object used as input is not changed and to get the new modified KReSRuleStore there is the method getStore().  *  */
end_comment

begin_class
specifier|public
class|class
name|KReSLoadRuleFile
block|{
specifier|private
name|OWLOntology
name|owlmodel
decl_stmt|;
specifier|private
name|OWLClass
name|ontocls
decl_stmt|;
specifier|private
name|OWLNamedIndividual
name|ontoind
decl_stmt|;
specifier|private
name|OWLClassAssertionAxiom
name|classAssertion
decl_stmt|;
specifier|private
name|OWLDataPropertyAssertionAxiom
name|dataPropAssertion
decl_stmt|;
specifier|private
name|OWLObjectPropertyAssertionAxiom
name|objectPropAssertion
decl_stmt|;
specifier|private
name|RuleStore
name|storeaux
decl_stmt|;
specifier|private
name|String
name|owlIDrmi
decl_stmt|;
comment|/**      * This class reads an ad hoc file contains all the rules and recipes:<br/>      *  - All the rows that start with # will be ignored<br/>      *  - All the rows that start with $ identify a class or a Recipe or a KReSRule<br/>      *  - All the rows that start with @ identify a name<br/>      *  - All the rows that start with * identify a comment      *      * @param filepath {Path of the file contains thr rules and the recipes}      * @param store {The KReSRuleStore where the rules will be storage}      */
specifier|public
name|KReSLoadRuleFile
parameter_list|(
name|String
name|filepath
parameter_list|,
name|RuleStore
name|store
parameter_list|)
block|{
name|this
operator|.
name|storeaux
operator|=
name|store
expr_stmt|;
name|this
operator|.
name|owlIDrmi
operator|=
literal|"http://kres.iks-project.eu/ontology/meta/rmi.owl#"
expr_stmt|;
try|try
block|{
name|OWLOntology
name|owlaux
init|=
name|OWLManager
operator|.
name|createOWLOntologyManager
argument_list|()
operator|.
name|createOntology
argument_list|(
name|store
operator|.
name|getOntology
argument_list|()
operator|.
name|getOntologyID
argument_list|()
argument_list|)
decl_stmt|;
name|this
operator|.
name|owlmodel
operator|=
name|owlaux
expr_stmt|;
name|owlmodel
operator|.
name|getOWLOntologyManager
argument_list|()
operator|.
name|addAxioms
argument_list|(
name|owlmodel
argument_list|,
name|storeaux
operator|.
name|getOntology
argument_list|()
operator|.
name|getAxioms
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OWLOntologyCreationException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|OWLOntologyManager
name|owlmanager
init|=
name|owlmodel
operator|.
name|getOWLOntologyManager
argument_list|()
decl_stmt|;
name|OWLDataFactory
name|factory
init|=
name|owlmanager
operator|.
name|getOWLDataFactory
argument_list|()
decl_stmt|;
name|String
name|ID
init|=
name|owlmodel
operator|.
name|getOntologyID
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<"
argument_list|,
literal|""
argument_list|)
operator|.
name|replace
argument_list|(
literal|">"
argument_list|,
literal|""
argument_list|)
operator|+
literal|"#"
decl_stmt|;
name|String
name|input
init|=
literal|""
decl_stmt|;
name|String
name|cls
init|=
literal|""
decl_stmt|;
name|String
name|descrp
init|=
literal|""
decl_stmt|;
name|String
name|name
init|=
literal|""
decl_stmt|;
name|String
name|text
init|=
literal|""
decl_stmt|;
name|Vector
argument_list|<
name|String
argument_list|>
name|seq
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
try|try
block|{
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|filepath
operator|.
name|trim
argument_list|()
argument_list|)
decl_stmt|;
name|BufferedReader
name|br
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
argument_list|,
literal|"UTF8"
argument_list|)
argument_list|)
decl_stmt|;
while|while
condition|(
operator|(
name|input
operator|=
name|br
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|input
operator|=
name|input
operator|.
name|trim
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|!
name|input
operator|.
name|startsWith
argument_list|(
literal|"#"
argument_list|)
operator|)
operator|&
operator|(
operator|!
name|input
operator|.
name|isEmpty
argument_list|()
operator|)
condition|)
block|{
comment|//Verify the type of owl class
if|if
condition|(
name|input
operator|.
name|startsWith
argument_list|(
literal|"$"
argument_list|)
condition|)
block|{
comment|//Add the last Recipe property
if|if
condition|(
name|seq
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|OWLDataProperty
name|dataprop
init|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|owlIDrmi
operator|+
literal|"hasSequence"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|owlmodel
operator|.
name|containsIndividualInSignature
argument_list|(
name|ontoind
operator|.
name|getIRI
argument_list|()
argument_list|)
condition|)
block|{
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
name|seq
operator|.
name|toString
argument_list|()
operator|.
name|replace
argument_list|(
literal|"["
argument_list|,
literal|""
argument_list|)
operator|.
name|replace
argument_list|(
literal|"]"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"There isn't the istance to which you are trying to add the property. Pleas check that "
operator|+
name|ontoind
operator|.
name|getIRI
argument_list|()
operator|+
literal|" exists."
argument_list|)
expr_stmt|;
name|this
operator|.
name|owlmodel
operator|=
literal|null
expr_stmt|;
break|break;
block|}
block|}
name|seq
operator|.
name|clear
argument_list|()
expr_stmt|;
name|ontoind
operator|=
literal|null
expr_stmt|;
name|cls
operator|=
name|input
operator|.
name|replace
argument_list|(
literal|"$"
argument_list|,
literal|""
argument_list|)
operator|.
name|replace
argument_list|(
literal|" "
argument_list|,
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|owlmodel
operator|.
name|containsClassInSignature
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|owlIDrmi
operator|+
name|cls
argument_list|)
argument_list|)
condition|)
block|{
name|ontocls
operator|=
name|factory
operator|.
name|getOWLClass
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|owlIDrmi
operator|+
name|cls
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"The file contains a wrong class name. Pleas check the name: "
operator|+
name|IRI
operator|.
name|create
argument_list|(
name|owlIDrmi
operator|+
name|cls
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|owlmodel
operator|=
literal|null
expr_stmt|;
break|break;
block|}
block|}
comment|//Get the instance name and create the istance
if|if
condition|(
name|input
operator|.
name|startsWith
argument_list|(
literal|"@"
argument_list|)
condition|)
block|{
name|name
operator|=
name|input
operator|.
name|replace
argument_list|(
literal|"@"
argument_list|,
literal|""
argument_list|)
operator|.
name|replace
argument_list|(
literal|" "
argument_list|,
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|owlmodel
operator|.
name|containsIndividualInSignature
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
name|name
argument_list|)
argument_list|)
condition|)
block|{
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|classAssertion
operator|=
name|factory
operator|.
name|getOWLClassAssertionAxiom
argument_list|(
name|ontocls
argument_list|,
name|ontoind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|classAssertion
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"The file contains a repeated istance name. The istance is already inside the ontology. Pleas check the name: "
operator|+
name|input
argument_list|)
expr_stmt|;
name|this
operator|.
name|owlmodel
operator|=
literal|null
expr_stmt|;
break|break;
block|}
block|}
comment|//Add an eventually description of the rule or recipe
if|if
condition|(
operator|(
name|input
operator|.
name|startsWith
argument_list|(
literal|"*"
argument_list|)
operator|&&
operator|(
name|ontoind
operator|!=
literal|null
operator|)
operator|)
condition|)
block|{
name|descrp
operator|=
name|input
operator|.
name|replace
argument_list|(
literal|"*"
argument_list|,
literal|""
argument_list|)
operator|.
name|trim
argument_list|()
expr_stmt|;
name|OWLDataProperty
name|dataprop
init|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|owlIDrmi
operator|+
literal|"hasDescription"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|owlmodel
operator|.
name|containsIndividualInSignature
argument_list|(
name|ontoind
operator|.
name|getIRI
argument_list|()
argument_list|)
condition|)
block|{
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
name|descrp
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"There isn't the istance to which you are trying to add the property. Pleas check that "
operator|+
name|ontoind
operator|.
name|getIRI
argument_list|()
operator|+
literal|" exists."
argument_list|)
expr_stmt|;
name|this
operator|.
name|owlmodel
operator|=
literal|null
expr_stmt|;
break|break;
block|}
block|}
comment|//Add the rule
if|if
condition|(
name|ontocls
operator|.
name|getIRI
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|owlIDrmi
operator|+
literal|"KReSRule"
argument_list|)
operator|&&
operator|(
name|ontoind
operator|!=
literal|null
operator|)
operator|&&
operator|(
operator|!
name|input
operator|.
name|startsWith
argument_list|(
literal|"*"
argument_list|)
operator|&&
operator|(
operator|!
name|input
operator|.
name|startsWith
argument_list|(
literal|"@"
argument_list|)
operator|)
operator|&&
operator|(
operator|!
name|input
operator|.
name|startsWith
argument_list|(
literal|"$"
argument_list|)
operator|)
operator|)
condition|)
block|{
name|text
operator|=
name|input
operator|.
name|trim
argument_list|()
expr_stmt|;
name|OWLDataProperty
name|dataprop
init|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|owlIDrmi
operator|+
literal|"hasBodyAndHead"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|owlmodel
operator|.
name|containsIndividualInSignature
argument_list|(
name|ontoind
operator|.
name|getIRI
argument_list|()
argument_list|)
condition|)
block|{
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"There isn't the istance to which you are trying to add the property. Pleas check that "
operator|+
name|ontoind
operator|.
name|getIRI
argument_list|()
operator|+
literal|" exists."
argument_list|)
expr_stmt|;
name|this
operator|.
name|owlmodel
operator|=
literal|null
expr_stmt|;
break|break;
block|}
block|}
comment|//Add the recipe with its rule set.
if|if
condition|(
name|ontocls
operator|.
name|getIRI
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|owlIDrmi
operator|+
literal|"Recipe"
argument_list|)
operator|&&
operator|(
name|ontoind
operator|!=
literal|null
operator|)
operator|&&
operator|(
operator|!
name|input
operator|.
name|startsWith
argument_list|(
literal|"*"
argument_list|)
operator|)
operator|&&
operator|(
operator|!
name|input
operator|.
name|startsWith
argument_list|(
literal|"@"
argument_list|)
operator|)
operator|&&
operator|(
operator|!
name|input
operator|.
name|startsWith
argument_list|(
literal|"$"
argument_list|)
operator|)
condition|)
block|{
name|text
operator|=
name|input
operator|.
name|trim
argument_list|()
expr_stmt|;
if|if
condition|(
name|owlmodel
operator|.
name|containsIndividualInSignature
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
name|text
argument_list|)
argument_list|)
operator|&&
operator|(
operator|!
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
name|text
argument_list|)
operator|.
name|equals
argument_list|(
name|ontoind
operator|.
name|getIRI
argument_list|()
argument_list|)
operator|)
condition|)
block|{
name|seq
operator|.
name|add
argument_list|(
name|ID
operator|+
name|text
argument_list|)
expr_stmt|;
if|if
condition|(
name|owlmodel
operator|.
name|containsIndividualInSignature
argument_list|(
name|ontoind
operator|.
name|getIRI
argument_list|()
argument_list|)
condition|)
block|{
name|OWLObjectProperty
name|objprop
init|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|owlIDrmi
operator|+
literal|"hasRule"
argument_list|)
argument_list|)
decl_stmt|;
name|OWLNamedIndividual
name|ruleind
init|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
name|text
argument_list|)
argument_list|)
decl_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
comment|//Add the first rule to the Recipe
if|if
condition|(
name|seq
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|objprop
operator|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|owlIDrmi
operator|+
literal|"startWith"
argument_list|)
argument_list|)
expr_stmt|;
name|ruleind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
name|text
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
comment|//Add the sequential rules
block|}
elseif|else
if|if
condition|(
name|seq
operator|.
name|size
argument_list|()
operator|>
literal|1
condition|)
block|{
name|objprop
operator|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
literal|"http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#directlyPrecedes"
argument_list|)
argument_list|)
expr_stmt|;
name|OWLNamedIndividual
name|ruleindp
init|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|seq
operator|.
name|get
argument_list|(
name|seq
operator|.
name|size
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|OWLNamedIndividual
name|ruleindf
init|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|seq
operator|.
name|lastElement
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ruleindp
argument_list|,
name|ruleindf
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
comment|//Add the last rule to the recipe
name|objprop
operator|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|owlIDrmi
operator|+
literal|"endWith"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleindf
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
comment|//Remove the previous endWith
if|if
condition|(
name|seq
operator|.
name|size
argument_list|()
operator|>
literal|2
condition|)
block|{
name|OWLObjectPropertyAssertionAxiom
name|remove
init|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleindp
argument_list|)
decl_stmt|;
name|owlmanager
operator|.
name|removeAxiom
argument_list|(
name|owlmodel
argument_list|,
name|remove
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"There isn't the istance to which you are trying to add the property. Pleas check that "
operator|+
name|ontoind
operator|.
name|getIRI
argument_list|()
operator|+
literal|" and/or "
operator|+
name|ID
operator|+
name|text
operator|+
literal|" are already inside the ontology."
argument_list|)
expr_stmt|;
name|this
operator|.
name|owlmodel
operator|=
literal|null
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|g
parameter_list|)
block|{
name|g
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|this
operator|.
name|owlmodel
operator|=
literal|null
expr_stmt|;
break|break;
block|}
block|}
comment|//Add the last sequence
if|if
condition|(
name|seq
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|OWLDataProperty
name|dataprop
init|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|owlIDrmi
operator|+
literal|"hasSequence"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|owlmodel
operator|.
name|containsIndividualInSignature
argument_list|(
name|ontoind
operator|.
name|getIRI
argument_list|()
argument_list|)
condition|)
block|{
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
name|seq
operator|.
name|toString
argument_list|()
operator|.
name|replace
argument_list|(
literal|"["
argument_list|,
literal|""
argument_list|)
operator|.
name|replace
argument_list|(
literal|"]"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"There isn't the istance to which you are trying to add the property. Pleas check that "
operator|+
name|ontoind
operator|.
name|getIRI
argument_list|()
operator|+
literal|" exists."
argument_list|)
expr_stmt|;
name|this
operator|.
name|owlmodel
operator|=
literal|null
expr_stmt|;
block|}
block|}
if|if
condition|(
name|owlmodel
operator|!=
literal|null
condition|)
name|storeaux
operator|.
name|setStore
argument_list|(
name|owlmodel
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|uee
parameter_list|)
block|{
name|uee
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|this
operator|.
name|owlmodel
operator|=
literal|null
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|fnfe
parameter_list|)
block|{
name|fnfe
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|this
operator|.
name|owlmodel
operator|=
literal|null
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|ioe
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|this
operator|.
name|owlmodel
operator|=
literal|null
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|this
operator|.
name|owlmodel
operator|=
literal|null
expr_stmt|;
block|}
block|}
comment|/**      * Get the KReSRuleStore filled with rules and recipes     *      * @return {A KReSRuleStore object with the stored rules and recipes.}      */
specifier|public
name|RuleStore
name|getStore
parameter_list|()
block|{
return|return
name|this
operator|.
name|storeaux
return|;
block|}
block|}
end_class

end_unit

