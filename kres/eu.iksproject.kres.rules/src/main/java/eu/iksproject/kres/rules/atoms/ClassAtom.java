begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|rules
operator|.
name|atoms
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLDataFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLDataProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLIndividual
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLNamedIndividual
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|SWRLArgument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|SWRLAtom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|SWRLClassAtom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|SWRLIArgument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|SWRLVariable
import|;
end_import

begin_import
import|import
name|uk
operator|.
name|ac
operator|.
name|manchester
operator|.
name|cs
operator|.
name|owl
operator|.
name|owlapi
operator|.
name|OWLClassExpressionImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|ModelFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|manager
operator|.
name|KReSONManager
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|rules
operator|.
name|KReSRuleAtom
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|rules
operator|.
name|URIResource
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|ontologies
operator|.
name|SWRL
import|;
end_import

begin_class
specifier|public
class|class
name|ClassAtom
implements|implements
name|KReSRuleAtom
block|{
specifier|private
name|URIResource
name|classResource
decl_stmt|;
specifier|private
name|URIResource
name|argument1
decl_stmt|;
specifier|public
name|ClassAtom
parameter_list|(
name|URIResource
name|classResource
parameter_list|,
name|URIResource
name|argument1
parameter_list|)
block|{
name|this
operator|.
name|classResource
operator|=
name|classResource
expr_stmt|;
name|this
operator|.
name|argument1
operator|=
name|argument1
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toSPARQL
parameter_list|()
block|{
name|String
name|argument1SPARQL
init|=
literal|null
decl_stmt|;
name|String
name|argument2SPARQL
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|argument1
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"http://kres.iks-project.eu/ontology/meta/variables#"
argument_list|)
condition|)
block|{
name|argument1SPARQL
operator|=
literal|"?"
operator|+
name|argument1
operator|.
name|toString
argument_list|()
operator|.
name|replace
argument_list|(
literal|"http://kres.iks-project.eu/ontology/meta/variables#"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|argument1SPARQL
operator|=
literal|"<"
operator|+
name|argument1
operator|.
name|toString
argument_list|()
operator|+
literal|">"
expr_stmt|;
block|}
if|if
condition|(
name|classResource
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"http://kres.iks-project.eu/ontology/meta/variables#"
argument_list|)
condition|)
block|{
name|argument2SPARQL
operator|=
literal|"?"
operator|+
name|classResource
operator|.
name|toString
argument_list|()
operator|.
name|replace
argument_list|(
literal|"http://kres.iks-project.eu/ontology/meta/variables#"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|argument2SPARQL
operator|=
literal|"<"
operator|+
name|classResource
operator|.
name|toString
argument_list|()
operator|+
literal|">"
expr_stmt|;
block|}
return|return
name|argument1SPARQL
operator|+
literal|"<http://www.w3.org/1999/02/22-rdf-syntax-ns#type> "
operator|+
name|argument2SPARQL
return|;
block|}
annotation|@
name|Override
specifier|public
name|Resource
name|toSWRL
parameter_list|(
name|Model
name|model
parameter_list|)
block|{
name|Resource
name|classAtom
init|=
name|model
operator|.
name|createResource
argument_list|(
name|SWRL
operator|.
name|ClassAtom
argument_list|)
decl_stmt|;
name|Resource
name|classPredicate
init|=
name|model
operator|.
name|createResource
argument_list|(
name|classResource
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|classAtom
operator|.
name|addProperty
argument_list|(
name|SWRL
operator|.
name|classPredicate
argument_list|,
name|classPredicate
argument_list|)
expr_stmt|;
name|Resource
name|argumentResource
init|=
name|argument1
operator|.
name|createJenaResource
argument_list|(
name|model
argument_list|)
decl_stmt|;
name|classAtom
operator|.
name|addProperty
argument_list|(
name|SWRL
operator|.
name|argument1
argument_list|,
name|argumentResource
argument_list|)
expr_stmt|;
return|return
name|classAtom
return|;
block|}
specifier|public
name|SWRLAtom
name|toSWRL
parameter_list|(
name|OWLDataFactory
name|factory
parameter_list|)
block|{
name|OWLClass
name|classPredicate
init|=
name|factory
operator|.
name|getOWLClass
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|classResource
operator|.
name|getURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|SWRLIArgument
name|argumentResource
decl_stmt|;
if|if
condition|(
name|argument1
operator|instanceof
name|KReSResource
condition|)
block|{
name|OWLIndividual
name|owlIndividual
init|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|argument1
operator|.
name|getURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|argumentResource
operator|=
name|factory
operator|.
name|getSWRLIndividualArgument
argument_list|(
name|owlIndividual
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|argumentResource
operator|=
name|factory
operator|.
name|getSWRLVariable
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|argument1
operator|.
name|getURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|factory
operator|.
name|getSWRLClassAtom
argument_list|(
name|classPredicate
argument_list|,
name|argumentResource
argument_list|)
return|;
block|}
specifier|public
name|URIResource
name|getClassResource
parameter_list|()
block|{
return|return
name|classResource
return|;
block|}
specifier|public
name|URIResource
name|getArgument1
parameter_list|()
block|{
return|return
name|argument1
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|argument1
operator|.
name|toString
argument_list|()
operator|+
literal|" is an individual of the class "
operator|+
name|classResource
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toKReSSyntax
parameter_list|()
block|{
name|String
name|arg1
init|=
literal|null
decl_stmt|;
name|String
name|arg2
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|argument1
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"http://kres.iks-project.eu/ontology/meta/variables#"
argument_list|)
condition|)
block|{
name|arg1
operator|=
literal|"?"
operator|+
name|argument1
operator|.
name|toString
argument_list|()
operator|.
name|replace
argument_list|(
literal|"http://kres.iks-project.eu/ontology/meta/variables#"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|arg1
operator|=
literal|"<"
operator|+
name|argument1
operator|.
name|toString
argument_list|()
operator|+
literal|">"
expr_stmt|;
block|}
if|if
condition|(
name|classResource
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"http://kres.iks-project.eu/ontology/meta/variables#"
argument_list|)
condition|)
block|{
name|arg2
operator|=
literal|"?"
operator|+
name|classResource
operator|.
name|toString
argument_list|()
operator|.
name|replace
argument_list|(
literal|"http://kres.iks-project.eu/ontology/meta/variables#"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|arg2
operator|=
literal|"<"
operator|+
name|classResource
operator|.
name|toString
argument_list|()
operator|+
literal|">"
expr_stmt|;
block|}
return|return
literal|"is("
operator|+
name|arg2
operator|+
literal|", "
operator|+
name|arg1
operator|+
literal|")"
return|;
block|}
block|}
end_class

end_unit

