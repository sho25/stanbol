begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * To change this template, choose Tools | Templates  * and open the template in the editor.  */
end_comment

begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|rules
operator|.
name|manager
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Deactivate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|apibinding
operator|.
name|OWLManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyCreationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|manager
operator|.
name|KReSONManager
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|rules
operator|.
name|RuleStore
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|rules
operator|.
name|SetRuleStore
import|;
end_import

begin_comment
comment|/**  *  * @author elvio  */
end_comment

begin_comment
comment|//@Component(immediate = true, metatype = true)
end_comment

begin_class
annotation|@
name|Service
argument_list|(
name|SetRuleStore
operator|.
name|class
argument_list|)
specifier|public
class|class
name|KReSSetRuleStore
implements|implements
name|SetRuleStore
block|{
specifier|private
specifier|static
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|KReSSetRuleStore
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|String
name|file
decl_stmt|;
specifier|private
name|KReSLoadRuleFile
name|load
decl_stmt|;
specifier|private
name|OWLOntology
name|ont
decl_stmt|;
specifier|private
name|SetRuleStore
name|setRuleStore
decl_stmt|;
specifier|private
name|RuleStore
name|store
decl_stmt|;
comment|/** 	 * Private constructor used only for not repeating some code on other 	 * constructors. For this purpose, this does NOT call the 	 *<code>activate()</code> method, therefore should ONLY be invoked if 	 *<code>activate()</code> is invoked afterwards. 	 *  	 * @param onm 	 *            the KReS ontology manager to be used by the rule store.      */
specifier|private
name|KReSSetRuleStore
parameter_list|(
name|KReSONManager
name|onm
parameter_list|)
block|{
comment|// Since the configuration dictionary is empty, default values will be
comment|// used instead.
name|this
operator|.
name|store
operator|=
operator|new
name|KReSRuleStore
argument_list|(
name|onm
argument_list|,
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * To directly set the store with an ontology already contains rules and 	 * recipe 	 *       * @param ontology      * @throws OWLOntologyCreationException      */
specifier|public
name|KReSSetRuleStore
parameter_list|(
name|KReSONManager
name|onm
parameter_list|,
name|File
name|ontology
parameter_list|)
block|{
name|this
argument_list|(
name|onm
argument_list|)
expr_stmt|;
try|try
block|{
name|this
operator|.
name|ont
operator|=
name|OWLManager
operator|.
name|createOWLOntologyManager
argument_list|()
operator|.
name|loadOntologyFromOntologyDocument
argument_list|(
name|ontology
argument_list|)
expr_stmt|;
name|this
operator|.
name|store
operator|.
name|setStore
argument_list|(
name|ont
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OWLOntologyCreationException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
comment|// Won't do anything in this case, but is invoked as a good practice.
name|activate
argument_list|(
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * To directly set the store with a file contains the rules and the recipe 	 *  	 * @param filepath 	 *            the string containing the file path.      */
specifier|public
name|KReSSetRuleStore
parameter_list|(
name|KReSONManager
name|onm
parameter_list|,
name|String
name|filepath
parameter_list|)
block|{
name|this
argument_list|(
name|onm
argument_list|)
expr_stmt|;
name|this
operator|.
name|file
operator|=
name|filepath
expr_stmt|;
name|this
operator|.
name|load
operator|=
operator|new
name|KReSLoadRuleFile
argument_list|(
name|file
argument_list|,
name|store
argument_list|)
expr_stmt|;
comment|// Won't do anything in this case, but is invoked as a good practice.
name|activate
argument_list|(
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Used to configure an instance within an OSGi container. 	 */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Activate
specifier|protected
name|void
name|activate
parameter_list|(
name|ComponentContext
name|context
parameter_list|,
name|String
name|filepath
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"in "
operator|+
name|KReSSetRuleStore
operator|.
name|class
operator|+
literal|" activate with context "
operator|+
name|context
argument_list|)
expr_stmt|;
if|if
condition|(
name|context
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"No valid"
operator|+
name|ComponentContext
operator|.
name|class
operator|+
literal|" parsed in activate!"
argument_list|)
throw|;
block|}
comment|// Won't do anything in this case, but is invoked as a good practice.
name|activate
argument_list|(
operator|(
name|Dictionary
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|context
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Internally used to configure an instance (within and without an OSGi 	 * container. 	 *  	 * @param configuration 	 */
specifier|protected
name|void
name|activate
parameter_list|(
name|Dictionary
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|configuration
parameter_list|)
block|{
comment|// There is no configuration for this component, so do nothing.
block|}
comment|/** 	 * Deactivation of the KreSRuleStore resets all its resources. 	 */
annotation|@
name|Deactivate
specifier|protected
name|void
name|deactivate
parameter_list|(
name|ComponentContext
name|context
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"in "
operator|+
name|KReSSetRuleStore
operator|.
name|class
operator|+
literal|" deactivate with context "
operator|+
name|context
argument_list|)
expr_stmt|;
name|file
operator|=
literal|null
expr_stmt|;
name|store
operator|=
literal|null
expr_stmt|;
name|load
operator|=
literal|null
expr_stmt|;
name|ont
operator|=
literal|null
expr_stmt|;
name|setRuleStore
operator|=
literal|null
expr_stmt|;
block|}
comment|/** 	 * To get the rule store; 	 *  	 * @return {A RuleStore object.} 	 */
specifier|public
name|RuleStore
name|returnStore
parameter_list|()
block|{
return|return
name|this
operator|.
name|load
operator|.
name|getStore
argument_list|()
return|;
block|}
block|}
end_class

end_unit

