begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|reengineer
operator|.
name|base
operator|.
name|api
operator|.
name|datasources
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|reengineer
operator|.
name|base
operator|.
name|api
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|reengineer
operator|.
name|base
operator|.
name|api
operator|.
name|settings
operator|.
name|ConnectionSettings
import|;
end_import

begin_class
specifier|public
class|class
name|DataSourceFactory
block|{
specifier|public
specifier|static
name|DataSource
name|createDataSource
parameter_list|(
name|int
name|dataSourceType
parameter_list|,
name|Object
name|source
parameter_list|)
throws|throws
name|NoSuchDataSourceExpection
throws|,
name|InvalidDataSourceForTypeSelectedException
block|{
name|DataSource
name|dataSource
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"DATA SOURCE CLASS IS "
operator|+
name|source
operator|.
name|getClass
argument_list|()
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|dataSourceType
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
name|source
operator|instanceof
name|ConnectionSettings
condition|)
block|{
name|dataSource
operator|=
operator|new
name|RDB
argument_list|(
operator|(
name|ConnectionSettings
operator|)
name|source
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|InvalidDataSourceForTypeSelectedException
argument_list|(
name|source
argument_list|)
throw|;
block|}
break|break;
case|case
literal|1
case|:
if|if
condition|(
name|source
operator|instanceof
name|InputStream
condition|)
block|{
name|dataSource
operator|=
operator|new
name|XML
argument_list|(
operator|(
name|InputStream
operator|)
name|source
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"THE DATA SOURCE IS AN XML"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|InvalidDataSourceForTypeSelectedException
argument_list|(
name|source
argument_list|)
throw|;
block|}
break|break;
default|default:
throw|throw
operator|new
name|NoSuchDataSourceExpection
argument_list|(
name|dataSourceType
argument_list|)
throw|;
block|}
return|return
name|dataSource
return|;
block|}
block|}
end_class

end_unit

