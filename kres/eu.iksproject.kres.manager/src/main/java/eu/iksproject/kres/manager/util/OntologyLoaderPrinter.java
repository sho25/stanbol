begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|manager
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|io
operator|.
name|OWLOntologyCreationIOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyAlreadyExistsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyCreationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyLoaderListener
import|;
end_import

begin_comment
comment|/**  * Prints ontology loading events to standard output.  *   * @author alessandro  *   */
end_comment

begin_class
specifier|public
class|class
name|OntologyLoaderPrinter
implements|implements
name|OWLOntologyLoaderListener
block|{
specifier|private
name|PrintStream
name|printer
init|=
name|System
operator|.
name|out
decl_stmt|;
specifier|public
name|OntologyLoaderPrinter
parameter_list|()
block|{
name|this
argument_list|(
name|System
operator|.
name|out
argument_list|)
expr_stmt|;
block|}
specifier|public
name|OntologyLoaderPrinter
parameter_list|(
name|PrintStream
name|printer
parameter_list|)
block|{
if|if
condition|(
name|printer
operator|!=
literal|null
condition|)
name|this
operator|.
name|printer
operator|=
name|printer
expr_stmt|;
block|}
comment|/* 	 * (non-Javadoc) 	 * @see org.semanticweb.owlapi.model.OWLOntologyLoaderListener#finishedLoadingOntology(org.semanticweb.owlapi.model.OWLOntologyLoaderListener.LoadingFinishedEvent) 	 */
annotation|@
name|Override
specifier|public
name|void
name|finishedLoadingOntology
parameter_list|(
name|LoadingFinishedEvent
name|arg0
parameter_list|)
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"KReS :: Loading of registry ontology "
operator|+
name|arg0
operator|.
name|getDocumentIRI
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
if|if
condition|(
name|arg0
operator|.
name|isSuccessful
argument_list|()
condition|)
name|printer
operator|.
name|println
argument_list|(
literal|"OK"
argument_list|)
expr_stmt|;
else|else
block|{
name|OWLOntologyCreationException
name|ex
init|=
name|arg0
operator|.
name|getException
argument_list|()
decl_stmt|;
if|if
condition|(
name|ex
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|ex
operator|instanceof
name|OWLOntologyAlreadyExistsException
condition|)
name|printer
operator|.
name|println
argument_list|(
literal|"EXISTS"
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|ex
operator|instanceof
name|OWLOntologyCreationIOException
condition|)
name|printer
operator|.
name|println
argument_list|(
literal|"NOT FOUND"
argument_list|)
expr_stmt|;
else|else
name|printer
operator|.
name|println
argument_list|(
literal|"FAILED"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/* 	 * (non-Javadoc) 	 * @see org.semanticweb.owlapi.model.OWLOntologyLoaderListener#startedLoadingOntology(org.semanticweb.owlapi.model.OWLOntologyLoaderListener.LoadingStartedEvent) 	 */
annotation|@
name|Override
specifier|public
name|void
name|startedLoadingOntology
parameter_list|(
name|LoadingStartedEvent
name|arg0
parameter_list|)
block|{
comment|// System.out.print("KReS :: Loading registry ontology "+arg0.getDocumentIRI()+" ... ");
block|}
block|}
end_class

end_unit

