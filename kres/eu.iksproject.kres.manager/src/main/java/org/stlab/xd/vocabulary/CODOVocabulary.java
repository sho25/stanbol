begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|stlab
operator|.
name|xd
operator|.
name|vocabulary
package|;
end_package

begin_comment
comment|/**  * @author Enrico Daga  *   */
end_comment

begin_class
specifier|public
class|class
name|CODOVocabulary
block|{
specifier|public
specifier|static
specifier|final
name|String
name|REPOSITORY_MERGED_ONTOLOGY
init|=
literal|"http://xd-repository/temporary/merged/ontology"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ODP_ONTOLOGY_LOCATION
init|=
name|Vocabulary
operator|.
name|ODP
operator|.
name|uri
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ODPM_ODPRepository
init|=
name|Vocabulary
operator|.
name|ODPM
operator|.
name|uri
operator|+
literal|"#ODPRepository"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODD_OntologyLibrary
init|=
name|Vocabulary
operator|.
name|CODD
operator|.
name|uri
operator|+
literal|"#OntologyLibrary"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODK_Ontology
init|=
name|Vocabulary
operator|.
name|CODK
operator|.
name|uri
operator|+
literal|"#Ontology"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PARTOF_IsPartOf
init|=
name|Vocabulary
operator|.
name|PARTOF
operator|.
name|uri
operator|+
literal|"#isPartOf"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ODPM_IsOntologyOf
init|=
name|Vocabulary
operator|.
name|ODPM
operator|.
name|uri
operator|+
literal|"#isOntologyOf"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODD_hasLogicalLanguage
init|=
name|Vocabulary
operator|.
name|CODD
operator|.
name|uri
operator|+
literal|"#hasLogicalLanguage"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODD_hasVersion
init|=
name|Vocabulary
operator|.
name|CODD
operator|.
name|uri
operator|+
literal|"#hasVersion"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODD_imports
init|=
name|Vocabulary
operator|.
name|CODD
operator|.
name|uri
operator|+
literal|"#imports"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODD_isImportedBy
init|=
name|Vocabulary
operator|.
name|CODD
operator|.
name|uri
operator|+
literal|"#isImportedBy"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODD_isVersionOf
init|=
name|Vocabulary
operator|.
name|CODD
operator|.
name|uri
operator|+
literal|"#isVersionOf"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODD_relatedToOntology
init|=
name|Vocabulary
operator|.
name|CODD
operator|.
name|uri
operator|+
literal|"#relatedToOntology"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODK_isReusedBy
init|=
name|Vocabulary
operator|.
name|CODK
operator|.
name|uri
operator|+
literal|"#isReusedBy"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODP_isIntendedOutputOf
init|=
name|Vocabulary
operator|.
name|CODP
operator|.
name|uri
operator|+
literal|"#isIntendedOutputOf"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODT_isInputDataFor
init|=
name|Vocabulary
operator|.
name|CODT
operator|.
name|uri
operator|+
literal|"#isInputDataFor"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODT_isOutputDataFor
init|=
name|Vocabulary
operator|.
name|CODT
operator|.
name|uri
operator|+
literal|"#isOutputDataFor"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CODW_isInvolvedInDesignOperationsBy
init|=
name|Vocabulary
operator|.
name|CODW
operator|.
name|uri
operator|+
literal|"#isInvolvedInDesignOperationsBy"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DESCASIT_isDescribedBy
init|=
name|Vocabulary
operator|.
name|DESCASIT
operator|.
name|uri
operator|+
literal|"#isDescribedBy"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|INTEXT_expresses
init|=
name|Vocabulary
operator|.
name|INTEXT
operator|.
name|uri
operator|+
literal|"#expresses"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|INTEXT_isAbout
init|=
name|Vocabulary
operator|.
name|INTEXT
operator|.
name|uri
operator|+
literal|"#isAbout"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|REPRESENTATION_hasRepresentationLanguage
init|=
name|Vocabulary
operator|.
name|REPRESENTATION
operator|.
name|uri
operator|+
literal|"#hasRepresentationLanguage"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|ONTOLOGY_ANNOTATION_PROPERTIES
init|=
block|{
name|CODOVocabulary
operator|.
name|CODD_hasLogicalLanguage
block|,
name|CODOVocabulary
operator|.
name|CODD_hasVersion
block|,
name|CODOVocabulary
operator|.
name|CODD_imports
block|,
name|CODOVocabulary
operator|.
name|CODD_isImportedBy
block|,
name|CODOVocabulary
operator|.
name|CODD_isVersionOf
block|,
name|CODOVocabulary
operator|.
name|CODD_relatedToOntology
block|,
name|CODOVocabulary
operator|.
name|CODK_isReusedBy
block|,
name|CODOVocabulary
operator|.
name|CODP_isIntendedOutputOf
block|,
name|CODOVocabulary
operator|.
name|CODT_isInputDataFor
block|,
name|CODOVocabulary
operator|.
name|CODT_isOutputDataFor
block|,
name|CODOVocabulary
operator|.
name|CODW_isInvolvedInDesignOperationsBy
block|,
name|CODOVocabulary
operator|.
name|DESCASIT_isDescribedBy
block|,
name|CODOVocabulary
operator|.
name|INTEXT_expresses
block|,
name|CODOVocabulary
operator|.
name|INTEXT_isAbout
block|,
name|CODOVocabulary
operator|.
name|REPRESENTATION_hasRepresentationLanguage
block|}
decl_stmt|;
block|}
end_class

end_unit

