begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|storage
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|storage
operator|.
name|OntologyStorage
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|storage
operator|.
name|OntologyStoreProvider
import|;
end_import

begin_class
annotation|@
name|Component
argument_list|(
name|immediate
operator|=
literal|true
argument_list|,
name|metatype
operator|=
literal|true
argument_list|)
annotation|@
name|Service
argument_list|(
name|OntologyStoreProvider
operator|.
name|class
argument_list|)
specifier|public
class|class
name|OntologyStorageProviderImpl
implements|implements
name|OntologyStoreProvider
block|{
annotation|@
name|Property
argument_list|(
name|value
operator|=
literal|"eu.iksproject.kres.storage.ClerezzaStorage"
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|ACTIVE_STORAGE
init|=
literal|"activeStorage"
decl_stmt|;
specifier|private
name|Hashtable
argument_list|<
name|String
argument_list|,
name|OntologyStorage
argument_list|>
name|registeredStorages
decl_stmt|;
specifier|private
name|OntologyStorage
name|activeOntologyStorage
decl_stmt|;
specifier|private
name|String
name|activeStorage
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|activateOntologyStorage
parameter_list|(
name|OntologyStorage
name|ontologyStorage
parameter_list|)
block|{
name|activeOntologyStorage
operator|=
name|ontologyStorage
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|deactivateOntologyStorage
parameter_list|()
block|{
name|activeOntologyStorage
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|OntologyStorage
name|getActiveOntologyStorage
parameter_list|()
block|{
return|return
name|activeOntologyStorage
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isActiveOntologyStorage
parameter_list|(
name|OntologyStorage
name|ontologyStorage
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|Collection
argument_list|<
name|OntologyStorage
argument_list|>
name|listOntologyStorages
parameter_list|()
block|{
return|return
name|registeredStorages
operator|.
name|values
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|registerOntologyStorage
parameter_list|(
name|OntologyStorage
name|ontologyStorage
parameter_list|)
block|{
name|registeredStorages
operator|.
name|put
argument_list|(
name|ontologyStorage
operator|.
name|getClass
argument_list|()
operator|.
name|getCanonicalName
argument_list|()
argument_list|,
name|ontologyStorage
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Registerd "
operator|+
name|registeredStorages
operator|.
name|size
argument_list|()
operator|+
literal|" storages -> "
operator|+
name|ontologyStorage
operator|.
name|getClass
argument_list|()
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Active storage class is "
operator|+
name|activeStorage
argument_list|)
expr_stmt|;
if|if
condition|(
name|ontologyStorage
operator|.
name|getClass
argument_list|()
operator|.
name|getCanonicalName
argument_list|()
operator|.
name|equals
argument_list|(
name|activeStorage
argument_list|)
condition|)
block|{
name|activeOntologyStorage
operator|=
name|ontologyStorage
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Setted active storage"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|unregisterOntologyStorage
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|OntologyStorage
argument_list|>
name|ontologyStorage
parameter_list|)
block|{
name|registeredStorages
operator|.
name|remove
argument_list|(
name|ontologyStorage
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|activate
parameter_list|(
name|ComponentContext
name|context
parameter_list|)
block|{
name|registeredStorages
operator|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|OntologyStorage
argument_list|>
argument_list|()
expr_stmt|;
name|activeStorage
operator|=
operator|(
name|String
operator|)
name|context
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|ACTIVE_STORAGE
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|deactivate
parameter_list|(
name|ComponentContext
name|context
parameter_list|)
block|{
name|registeredStorages
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit

