begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|semion
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_comment
comment|/**  *   * A {@code SemionStructuredDataSource} is the representation of a data source after it has been reengineerd by Semion.  * Basically it is identified by two UriRefs (see {@link UriRef}:  *<ul>  *<li> {@code schemaUriRef} that identifies the {@link MGraph} generated by Semion from the original data source schema  *<li> {@code dataUriRef} that identifies the {@link MGraph} generated by Semion from the original data source data  *</ul>  *   * @author andrea.nuzzolese  *  */
end_comment

begin_class
specifier|public
class|class
name|SemionStructuredDataSource
implements|implements
name|Serializable
block|{
comment|/** 	 * Serial Version (generated) 	 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|4963544655534544288L
decl_stmt|;
specifier|private
name|UriRef
name|schemaUriRef
decl_stmt|;
specifier|private
name|UriRef
name|dataUriRef
decl_stmt|;
comment|/** 	 * Default constructor to be compliant with the Serializable interface. 	 */
specifier|public
name|SemionStructuredDataSource
parameter_list|()
block|{ 		 	}
comment|/** 	 * It creates a {@code SemionStructuredDataSource} with a {@link UriRef} both for the schema and the data of a reengineered 	 * data source by Semion. 	 */
specifier|public
name|SemionStructuredDataSource
parameter_list|(
name|UriRef
name|schemaUriRef
parameter_list|,
name|UriRef
name|dataUriRef
parameter_list|)
block|{
name|this
operator|.
name|schemaUriRef
operator|=
name|schemaUriRef
expr_stmt|;
name|this
operator|.
name|dataUriRef
operator|=
name|dataUriRef
expr_stmt|;
block|}
comment|/** 	 * Gets the {@link UriRef} for the {@link MGraph} of schema generated by the Semion reengineer. 	 * @return the {@link UriRef} for the {@link MGraph} of the schema.  	 */
specifier|public
name|UriRef
name|getSchemaUriRef
parameter_list|()
block|{
return|return
name|schemaUriRef
return|;
block|}
comment|/** 	 * Sets the {@link UriRef} for the {@link MGraph} of schema generated by the Semion reengineer.  	 */
specifier|public
name|void
name|setSchemaUriRef
parameter_list|(
name|UriRef
name|schemaUriRef
parameter_list|)
block|{
name|this
operator|.
name|schemaUriRef
operator|=
name|schemaUriRef
expr_stmt|;
block|}
comment|/** 	 * Gets the {@link UriRef} for the {@link MGraph} of data generated by the Semion reengineer. 	 * @return the {@link UriRef} for the {@link MGraph} of the data.  	 */
specifier|public
name|UriRef
name|getDataUriRef
parameter_list|()
block|{
return|return
name|dataUriRef
return|;
block|}
comment|/** 	 * Gets the {@link UriRef} for the {@link MGraph} of data generated by the Semion reengineer. 	 */
specifier|public
name|void
name|setDataUriRef
parameter_list|(
name|UriRef
name|dataUriRef
parameter_list|)
block|{
name|this
operator|.
name|dataUriRef
operator|=
name|dataUriRef
expr_stmt|;
block|}
block|}
end_class

end_unit

