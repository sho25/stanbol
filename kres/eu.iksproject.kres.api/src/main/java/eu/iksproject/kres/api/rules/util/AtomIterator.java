begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|rules
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|rules
operator|.
name|KReSRule
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|api
operator|.
name|rules
operator|.
name|KReSRuleAtom
import|;
end_import

begin_class
specifier|public
class|class
name|AtomIterator
implements|implements
name|Iterator
argument_list|<
name|KReSRuleAtom
argument_list|>
block|{
specifier|private
name|int
name|currentIndex
decl_stmt|;
specifier|private
name|int
name|listSize
decl_stmt|;
specifier|private
name|KReSRuleAtom
index|[]
name|kReSRuleAtoms
decl_stmt|;
specifier|public
name|AtomIterator
parameter_list|(
name|AtomList
name|atomList
parameter_list|)
block|{
name|this
operator|.
name|listSize
operator|=
name|atomList
operator|.
name|size
argument_list|()
expr_stmt|;
name|this
operator|.
name|kReSRuleAtoms
operator|=
operator|new
name|KReSRuleAtom
index|[
name|listSize
index|]
expr_stmt|;
name|this
operator|.
name|kReSRuleAtoms
operator|=
name|atomList
operator|.
name|toArray
argument_list|(
name|this
operator|.
name|kReSRuleAtoms
argument_list|)
expr_stmt|;
name|this
operator|.
name|currentIndex
operator|=
literal|0
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
if|if
condition|(
name|currentIndex
operator|<
name|listSize
condition|)
block|{
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
specifier|public
name|KReSRuleAtom
name|next
parameter_list|()
block|{
name|KReSRuleAtom
name|atom
init|=
name|kReSRuleAtoms
index|[
name|currentIndex
index|]
decl_stmt|;
name|currentIndex
operator|++
expr_stmt|;
return|return
name|atom
return|;
block|}
specifier|public
name|void
name|remove
parameter_list|()
block|{ 		 	}
block|}
end_class

end_unit

