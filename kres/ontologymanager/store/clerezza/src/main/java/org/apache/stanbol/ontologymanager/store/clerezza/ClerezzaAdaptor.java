begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|clerezza
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|access
operator|.
name|TcManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|jena
operator|.
name|facade
operator|.
name|JenaGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Deactivate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|api
operator|.
name|JenaPersistenceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|ModelFactory
import|;
end_import

begin_class
annotation|@
name|Component
annotation|@
name|Service
specifier|public
class|class
name|ClerezzaAdaptor
implements|implements
name|JenaPersistenceProvider
block|{
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ClerezzaAdaptor
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|TcManager
name|tcManager
decl_stmt|;
annotation|@
name|Activate
specifier|public
name|void
name|activate
parameter_list|(
name|ComponentContext
name|cc
parameter_list|)
block|{      }
annotation|@
name|Deactivate
specifier|public
name|void
name|deactivate
parameter_list|(
name|ComponentContext
name|cc
parameter_list|)
block|{      }
annotation|@
name|Override
specifier|public
name|boolean
name|clear
parameter_list|()
block|{
try|try
block|{
for|for
control|(
name|UriRef
name|uri
range|:
name|tcManager
operator|.
name|listMGraphs
argument_list|()
control|)
block|{
name|tcManager
operator|.
name|deleteTripleCollection
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|logger
operator|.
name|error
argument_list|(
literal|"Can not clear triple store"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|commit
parameter_list|(
name|Model
name|model
parameter_list|)
block|{
if|if
condition|(
name|model
operator|!=
literal|null
operator|&&
name|model
operator|.
name|supportsTransactions
argument_list|()
condition|)
block|{
name|model
operator|.
name|commit
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Model
name|createModel
parameter_list|(
name|String
name|ontologyURI
parameter_list|)
block|{
name|MGraph
name|graph
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|hasModel
argument_list|(
name|ontologyURI
argument_list|)
condition|)
block|{
name|removeModel
argument_list|(
name|ontologyURI
argument_list|)
expr_stmt|;
name|graph
operator|=
name|tcManager
operator|.
name|getMGraph
argument_list|(
operator|new
name|UriRef
argument_list|(
name|ontologyURI
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|graph
operator|=
name|tcManager
operator|.
name|createMGraph
argument_list|(
operator|new
name|UriRef
argument_list|(
name|ontologyURI
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|JenaGraph
name|jenaGraph
init|=
operator|new
name|JenaGraph
argument_list|(
name|graph
argument_list|)
decl_stmt|;
name|Model
name|model
init|=
name|ModelFactory
operator|.
name|createModelForGraph
argument_list|(
name|jenaGraph
argument_list|)
decl_stmt|;
return|return
name|model
return|;
block|}
annotation|@
name|Override
specifier|public
name|Model
name|getModel
parameter_list|(
name|String
name|ontologyURI
parameter_list|)
block|{
name|MGraph
name|graph
init|=
name|tcManager
operator|.
name|getMGraph
argument_list|(
operator|new
name|UriRef
argument_list|(
name|ontologyURI
argument_list|)
argument_list|)
decl_stmt|;
name|JenaGraph
name|jenaGraph
init|=
operator|new
name|JenaGraph
argument_list|(
name|graph
argument_list|)
decl_stmt|;
name|Model
name|model
init|=
name|ModelFactory
operator|.
name|createModelForGraph
argument_list|(
name|jenaGraph
argument_list|)
decl_stmt|;
return|return
name|model
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasModel
parameter_list|(
name|String
name|ontologyURI
parameter_list|)
block|{
name|boolean
name|res
init|=
name|tcManager
operator|.
name|listMGraphs
argument_list|()
operator|.
name|contains
argument_list|(
operator|new
name|UriRef
argument_list|(
name|ontologyURI
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|res
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|listModels
parameter_list|()
block|{
name|List
argument_list|<
name|String
argument_list|>
name|modelURIs
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|UriRef
name|uri
range|:
name|tcManager
operator|.
name|listMGraphs
argument_list|()
control|)
block|{
name|modelURIs
operator|.
name|add
argument_list|(
name|uri
operator|.
name|getUnicodeString
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|modelURIs
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeModel
parameter_list|(
name|String
name|ontologyURI
parameter_list|)
block|{
comment|// tcManager.getMGraph(new UriRef(ontologyURI)).clear();
name|tcManager
operator|.
name|deleteTripleCollection
argument_list|(
operator|new
name|UriRef
argument_list|(
name|ontologyURI
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|bindTcManager
parameter_list|(
name|TcManager
name|tcManager
parameter_list|)
block|{
name|this
operator|.
name|tcManager
operator|=
name|tcManager
expr_stmt|;
block|}
specifier|protected
name|void
name|unbindTcManager
parameter_list|(
name|TcManager
name|tcManager
parameter_list|)
block|{
synchronized|synchronized
init|(
name|tcManager
init|)
block|{
name|this
operator|.
name|tcManager
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

