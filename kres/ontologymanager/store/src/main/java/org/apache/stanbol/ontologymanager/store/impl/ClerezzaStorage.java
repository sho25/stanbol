begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|access
operator|.
name|TcManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|access
operator|.
name|WeightedTcProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|impl
operator|.
name|SimpleGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|impl
operator|.
name|SimpleMGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|sparql
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|sparql
operator|.
name|QueryParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|sparql
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Deactivate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|api
operator|.
name|NoSuchStoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|api
operator|.
name|OntologyStorage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|api
operator|.
name|OntologyStoreProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|ontology
operator|.
name|OntModel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|ontology
operator|.
name|OntModelSpec
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|ModelFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|util
operator|.
name|FileManager
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|shared
operator|.
name|transformation
operator|.
name|JenaToClerezzaConverter
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|kres
operator|.
name|shared
operator|.
name|transformation
operator|.
name|JenaToOwlConvert
import|;
end_import

begin_class
annotation|@
name|Component
argument_list|(
name|immediate
operator|=
literal|true
argument_list|,
name|metatype
operator|=
literal|true
argument_list|)
annotation|@
name|Service
argument_list|(
name|OntologyStorage
operator|.
name|class
argument_list|)
specifier|public
class|class
name|ClerezzaStorage
implements|implements
name|OntologyStorage
block|{
specifier|private
specifier|static
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ClerezzaStorage
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Reference
name|OntologyStoreProvider
name|ontologyStoreProvider
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|URI
init|=
literal|"http://ontologydesignpatterns.org/ont/iks/oxml.owl"
decl_stmt|;
annotation|@
name|Reference
name|TcManager
name|tcManager
decl_stmt|;
annotation|@
name|Reference
name|WeightedTcProvider
name|weightedTcProvider
decl_stmt|;
comment|/** 	 * This default constructor is<b>only</b> intended to be used by the OSGI 	 * environment with Service Component Runtime support. 	 *<p> 	 * DO NOT USE to manually create instances - the ClerezzaStorage instances 	 * do need to be configured! YOU NEED TO USE 	 * {@link #ClerezzaStorage(TcManager, WeightedTcProvider, OntologyStoreProvider)} 	 * or its overloads, to parse the configuration and then initialise the rule 	 * store if running outside a OSGI environment. 	 */
specifier|public
name|ClerezzaStorage
parameter_list|()
block|{  	}
comment|/** 	 * Basic constructor to be used if outside of an OSGi environment. Invokes 	 * default constructor. 	 *  	 * @param tcManager 	 * @param wtcProvider 	 * @param osProvider 	 */
specifier|public
name|ClerezzaStorage
parameter_list|(
name|TcManager
name|tcManager
parameter_list|,
name|WeightedTcProvider
name|wtcProvider
parameter_list|,
name|OntologyStoreProvider
name|osProvider
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|this
operator|.
name|tcManager
operator|=
name|tcManager
expr_stmt|;
name|this
operator|.
name|weightedTcProvider
operator|=
name|wtcProvider
expr_stmt|;
name|this
operator|.
name|ontologyStoreProvider
operator|=
name|osProvider
expr_stmt|;
name|activate
argument_list|(
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Activate
specifier|protected
name|void
name|activate
parameter_list|(
name|ComponentContext
name|context
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"in "
operator|+
name|ClerezzaStorage
operator|.
name|class
operator|+
literal|" activate with context "
operator|+
name|context
argument_list|)
expr_stmt|;
if|if
condition|(
name|context
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"No valid"
operator|+
name|ComponentContext
operator|.
name|class
operator|+
literal|" parsed in activate!"
argument_list|)
throw|;
block|}
name|activate
argument_list|(
operator|(
name|Dictionary
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|context
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|activate
parameter_list|(
name|Dictionary
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|configuration
parameter_list|)
block|{
name|ontologyStoreProvider
operator|.
name|registerOntologyStorage
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clear
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Deactivate
specifier|protected
name|void
name|deactivate
parameter_list|(
name|ComponentContext
name|context
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"in "
operator|+
name|ClerezzaStorage
operator|.
name|class
operator|+
literal|" deactivate with context "
operator|+
name|context
argument_list|)
expr_stmt|;
name|ontologyStoreProvider
operator|.
name|unregisterOntologyStorage
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|tcManager
operator|=
literal|null
expr_stmt|;
name|weightedTcProvider
operator|=
literal|null
expr_stmt|;
name|ontologyStoreProvider
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|delete
parameter_list|(
name|IRI
name|ontologyId
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteAll
parameter_list|(
name|Set
argument_list|<
name|IRI
argument_list|>
name|ontologyIds
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|OWLOntology
name|getGraph
parameter_list|(
name|IRI
name|ontologyID
parameter_list|)
throws|throws
name|NoSuchStoreException
block|{
name|OWLOntology
name|ontology
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|tcManager
operator|!=
literal|null
condition|)
block|{
name|MGraph
name|mGraph
init|=
name|tcManager
operator|.
name|getMGraph
argument_list|(
operator|new
name|UriRef
argument_list|(
name|ontologyID
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|JenaToOwlConvert
name|jowl
init|=
operator|new
name|JenaToOwlConvert
argument_list|()
decl_stmt|;
name|OntModel
name|ontModel
init|=
name|ModelFactory
operator|.
name|createOntologyModel
argument_list|(
name|OntModelSpec
operator|.
name|OWL_DL_MEM
argument_list|,
name|FileManager
operator|.
name|get
argument_list|()
operator|.
name|loadModel
argument_list|(
name|URI
argument_list|)
argument_list|)
decl_stmt|;
name|ontModel
operator|.
name|add
argument_list|(
name|JenaToClerezzaConverter
operator|.
name|clerezzaMGraphToJenaModel
argument_list|(
name|mGraph
argument_list|)
argument_list|)
expr_stmt|;
name|ontology
operator|=
name|jowl
operator|.
name|ModelJenaToOwlConvert
argument_list|(
name|ontModel
argument_list|,
literal|"RDF/XML"
argument_list|)
expr_stmt|;
comment|// ontology =
comment|// OWLAPIToClerezzaConverter.clerezzaMGraphToOWLOntology(mGraph);
block|}
else|else
block|{
throw|throw
operator|new
name|NoSuchStoreException
argument_list|(
literal|"No store registered or activated in the environment."
argument_list|)
throw|;
block|}
return|return
name|ontology
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|IRI
argument_list|>
name|listGraphs
parameter_list|()
block|{
name|Set
argument_list|<
name|IRI
argument_list|>
name|iris
init|=
literal|null
decl_stmt|;
name|Set
argument_list|<
name|UriRef
argument_list|>
name|uriRefs
init|=
name|tcManager
operator|.
name|listTripleCollections
argument_list|()
decl_stmt|;
if|if
condition|(
name|uriRefs
operator|!=
literal|null
condition|)
block|{
name|iris
operator|=
operator|new
name|HashSet
argument_list|<
name|IRI
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|UriRef
name|uriRef
range|:
name|uriRefs
control|)
block|{
name|iris
operator|.
name|add
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|uriRef
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|iris
return|;
block|}
annotation|@
name|Override
specifier|public
name|OWLOntology
name|load
parameter_list|(
name|IRI
name|ontologyId
parameter_list|)
block|{
name|MGraph
name|triples
init|=
name|TcManager
operator|.
name|getInstance
argument_list|()
operator|.
name|getMGraph
argument_list|(
operator|new
name|UriRef
argument_list|(
name|ontologyId
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Model
name|om
init|=
name|JenaToClerezzaConverter
operator|.
name|clerezzaMGraphToJenaModel
argument_list|(
name|triples
argument_list|)
decl_stmt|;
name|JenaToOwlConvert
name|converter
init|=
operator|new
name|JenaToOwlConvert
argument_list|()
decl_stmt|;
return|return
name|converter
operator|.
name|ModelJenaToOwlConvert
argument_list|(
name|om
argument_list|,
literal|"RDF/XML"
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|OWLOntology
name|sparqlConstruct
parameter_list|(
name|String
name|sparql
parameter_list|,
name|String
name|datasetURI
parameter_list|)
block|{
name|Query
name|query
decl_stmt|;
name|MGraph
name|mGraph
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
try|try
block|{
name|query
operator|=
name|QueryParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parse
argument_list|(
name|sparql
argument_list|)
expr_stmt|;
name|UriRef
name|datasetUriRef
init|=
operator|new
name|UriRef
argument_list|(
name|datasetURI
argument_list|)
decl_stmt|;
name|MGraph
name|dataset
init|=
name|weightedTcProvider
operator|.
name|getMGraph
argument_list|(
name|datasetUriRef
argument_list|)
decl_stmt|;
name|mGraph
operator|.
name|addAll
argument_list|(
operator|(
name|SimpleGraph
operator|)
name|tcManager
operator|.
name|executeSparqlQuery
argument_list|(
name|query
argument_list|,
name|dataset
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|Model
name|om
init|=
name|JenaToClerezzaConverter
operator|.
name|clerezzaMGraphToJenaModel
argument_list|(
name|mGraph
argument_list|)
decl_stmt|;
name|JenaToOwlConvert
name|converter
init|=
operator|new
name|JenaToOwlConvert
argument_list|()
decl_stmt|;
return|return
name|converter
operator|.
name|ModelJenaToOwlConvert
argument_list|(
name|om
argument_list|,
literal|"RDF/XML"
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|store
parameter_list|(
name|OWLOntology
name|o
parameter_list|)
block|{
name|JenaToOwlConvert
name|converter
init|=
operator|new
name|JenaToOwlConvert
argument_list|()
decl_stmt|;
name|OntModel
name|om
init|=
name|converter
operator|.
name|ModelOwlToJenaConvert
argument_list|(
name|o
argument_list|,
literal|"RDF/XML"
argument_list|)
decl_stmt|;
name|MGraph
name|mg
init|=
name|JenaToClerezzaConverter
operator|.
name|jenaModelToClerezzaMGraph
argument_list|(
name|om
argument_list|)
decl_stmt|;
comment|// MGraph mg = OWLAPIToClerezzaConverter.owlOntologyToClerezzaMGraph(o);
name|MGraph
name|mg2
init|=
name|tcManager
operator|.
name|createMGraph
argument_list|(
operator|new
name|UriRef
argument_list|(
name|o
operator|.
name|getOntologyID
argument_list|()
operator|.
name|getOntologyIRI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|mg2
operator|.
name|addAll
argument_list|(
name|mg
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|store
parameter_list|(
name|OWLOntology
name|o
parameter_list|,
name|IRI
name|ontologyID
parameter_list|)
block|{
name|JenaToOwlConvert
name|converter
init|=
operator|new
name|JenaToOwlConvert
argument_list|()
decl_stmt|;
name|OntModel
name|om
init|=
name|converter
operator|.
name|ModelOwlToJenaConvert
argument_list|(
name|o
argument_list|,
literal|"RDF/XML"
argument_list|)
decl_stmt|;
name|MGraph
name|mg
init|=
name|JenaToClerezzaConverter
operator|.
name|jenaModelToClerezzaMGraph
argument_list|(
name|om
argument_list|)
decl_stmt|;
comment|// MGraph mg = OWLAPIToClerezzaConverter.owlOntologyToClerezzaMGraph(o);
name|MGraph
name|mg2
init|=
name|tcManager
operator|.
name|createMGraph
argument_list|(
operator|new
name|UriRef
argument_list|(
name|ontologyID
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|mg2
operator|.
name|addAll
argument_list|(
name|mg
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

