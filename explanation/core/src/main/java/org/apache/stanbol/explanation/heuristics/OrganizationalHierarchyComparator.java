begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|explanation
operator|.
name|heuristics
package|;
end_package

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLIndividual
import|;
end_import

begin_comment
comment|/**  * Transitive comparator for determining if one social person is another person's boss in a hierarchical  * organization.  *   * @author alexdma  *   */
end_comment

begin_class
specifier|public
class|class
name|OrganizationalHierarchyComparator
implements|implements
name|Comparator
block|{
specifier|private
name|String
name|NS_ORG
init|=
literal|"http://www.w3.org/ns/org#"
decl_stmt|;
specifier|private
name|IRI
name|reportsTo
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS_ORG
operator|+
literal|"reportsTo"
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
name|Entity
name|arg0
parameter_list|,
name|Entity
name|arg1
parameter_list|)
throws|throws
name|IncomparableException
block|{
if|if
condition|(
operator|!
operator|(
name|arg0
operator|.
name|getOWLEntity
argument_list|()
operator|instanceof
name|OWLIndividual
operator|)
condition|)
throw|throw
operator|new
name|IncomparableException
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
throw|;
if|if
condition|(
operator|!
operator|(
name|arg1
operator|.
name|getOWLEntity
argument_list|()
operator|instanceof
name|OWLIndividual
operator|)
condition|)
throw|throw
operator|new
name|IncomparableException
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
throw|;
comment|// TODO: checks that the two individuals are not of types disjoint with foaf:Agent
if|if
condition|(
name|arg1
operator|.
name|getRelatedEntities
argument_list|(
name|reportsTo
argument_list|)
operator|.
name|contains
argument_list|(
name|arg0
argument_list|)
condition|)
return|return
literal|1
return|;
if|if
condition|(
name|arg0
operator|.
name|getRelatedEntities
argument_list|(
name|reportsTo
argument_list|)
operator|.
name|contains
argument_list|(
name|arg1
argument_list|)
condition|)
return|return
operator|-
literal|1
return|;
return|return
literal|0
return|;
block|}
block|}
end_class

end_unit

