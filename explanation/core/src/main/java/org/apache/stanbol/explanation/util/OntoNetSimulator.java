begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|explanation
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|io
operator|.
name|OntologyInputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|apibinding
operator|.
name|OWLManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|AddImport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLDataFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyCreationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyIRIMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|util
operator|.
name|AutoIRIMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|OntoNetSimulator
block|{
specifier|private
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|OntoNetSimulator
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|IRI
argument_list|,
name|OWLOntologyManager
argument_list|>
name|simulatedScopes
init|=
operator|new
name|HashMap
argument_list|<
name|IRI
argument_list|,
name|OWLOntologyManager
argument_list|>
argument_list|()
decl_stmt|;
name|OWLOntologyIRIMapper
index|[]
name|mapper
init|=
operator|new
name|OWLOntologyIRIMapper
index|[
literal|2
index|]
decl_stmt|;
specifier|public
name|OntoNetSimulator
parameter_list|()
block|{
name|URL
name|url
init|=
literal|null
decl_stmt|;
try|try
block|{
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/schemas"
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Automapping to {}"
argument_list|,
name|url
operator|.
name|toURI
argument_list|()
argument_list|)
expr_stmt|;
name|mapper
index|[
literal|0
index|]
operator|=
operator|new
name|AutoIRIMapper
argument_list|(
operator|new
name|File
argument_list|(
name|url
operator|.
name|toURI
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/ontologies"
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Automapping to {}"
argument_list|,
name|url
operator|.
name|toURI
argument_list|()
argument_list|)
expr_stmt|;
name|mapper
index|[
literal|1
index|]
operator|=
operator|new
name|AutoIRIMapper
argument_list|(
operator|new
name|File
argument_list|(
name|url
operator|.
name|toURI
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Failed to add IRI mapping for resource {}, aborting mappings altogether."
argument_list|,
name|url
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Failed to add IRI mapping for resource {}, aborting mappings altogether."
argument_list|,
name|url
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addToScope
parameter_list|(
name|OntologyInputSource
name|ontSrc
parameter_list|,
name|IRI
name|scopeId
parameter_list|)
block|{
name|OWLDataFactory
name|df
init|=
name|OWLManager
operator|.
name|getOWLDataFactory
argument_list|()
decl_stmt|;
name|OWLOntology
name|root
decl_stmt|;
if|if
condition|(
operator|!
name|simulatedScopes
operator|.
name|containsKey
argument_list|(
name|scopeId
argument_list|)
operator|||
name|simulatedScopes
operator|.
name|get
argument_list|(
name|scopeId
argument_list|)
operator|==
literal|null
condition|)
try|try
block|{
name|root
operator|=
name|OWLManager
operator|.
name|createOWLOntologyManager
argument_list|()
operator|.
name|createOntology
argument_list|(
name|scopeId
argument_list|)
expr_stmt|;
for|for
control|(
name|OWLOntologyIRIMapper
name|m
range|:
name|mapper
control|)
name|root
operator|.
name|getOWLOntologyManager
argument_list|()
operator|.
name|addIRIMapper
argument_list|(
name|m
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OWLOntologyCreationException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Failed to create simulated scope "
operator|+
name|scopeId
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return;
block|}
else|else
block|{
name|root
operator|=
name|simulatedScopes
operator|.
name|get
argument_list|(
name|scopeId
argument_list|)
operator|.
name|getOntology
argument_list|(
name|scopeId
argument_list|)
expr_stmt|;
block|}
name|root
operator|.
name|getOWLOntologyManager
argument_list|()
operator|.
name|applyChange
argument_list|(
operator|new
name|AddImport
argument_list|(
name|root
argument_list|,
name|df
operator|.
name|getOWLImportsDeclaration
argument_list|(
name|ontSrc
operator|.
name|getRootOntology
argument_list|()
operator|.
name|getOntologyID
argument_list|()
operator|.
name|getDefaultDocumentIRI
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|root
operator|.
name|getOWLOntologyManager
argument_list|()
operator|.
name|loadOntology
argument_list|(
name|ontSrc
operator|.
name|getPhysicalIRI
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OWLOntologyCreationException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Failed to load "
operator|+
name|ontSrc
operator|.
name|getPhysicalIRI
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return;
block|}
name|simulatedScopes
operator|.
name|put
argument_list|(
name|scopeId
argument_list|,
name|root
operator|.
name|getOWLOntologyManager
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|OWLOntology
name|getScopeRoot
parameter_list|(
name|IRI
name|scopeid
parameter_list|)
block|{
return|return
name|simulatedScopes
operator|.
name|get
argument_list|(
name|scopeid
argument_list|)
operator|.
name|getOntology
argument_list|(
name|scopeid
argument_list|)
return|;
block|}
block|}
end_class

end_unit

