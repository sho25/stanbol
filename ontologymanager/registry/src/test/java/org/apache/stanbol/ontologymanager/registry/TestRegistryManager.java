begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|registry
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|registry
operator|.
name|api
operator|.
name|RegistryManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|registry
operator|.
name|api
operator|.
name|model
operator|.
name|CachingPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|registry
operator|.
name|api
operator|.
name|model
operator|.
name|Registry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|registry
operator|.
name|impl
operator|.
name|RegistryManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyManager
import|;
end_import

begin_comment
comment|/**  * TODO: send them offline  */
end_comment

begin_class
specifier|public
class|class
name|TestRegistryManager
block|{
specifier|private
name|RegistryManager
name|regman
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testDistributedCaching
parameter_list|()
block|{
name|Dictionary
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|configuration
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|put
argument_list|(
name|RegistryManager
operator|.
name|CACHING_POLICY
argument_list|,
name|CachingPolicy
operator|.
name|CROSS_REGISTRY
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|put
argument_list|(
name|RegistryManager
operator|.
name|REGISTRY_LOCATIONS
argument_list|,
operator|new
name|String
index|[]
block|{
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/ontologies/registry/onmtest.owl"
argument_list|)
operator|.
name|toString
argument_list|()
block|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/ontologies/registry/onmtest_additions.owl"
argument_list|)
operator|.
name|toString
argument_list|()
block|}
argument_list|)
expr_stmt|;
name|regman
operator|=
operator|new
name|RegistryManagerImpl
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|regman
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|CachingPolicy
operator|.
name|CROSS_REGISTRY
argument_list|,
name|regman
operator|.
name|getCachingPolicy
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Registry
argument_list|>
name|it
init|=
name|regman
operator|.
name|getRegistries
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|OWLOntologyManager
name|cache
init|=
name|it
operator|.
name|next
argument_list|()
operator|.
name|getCache
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
name|assertSame
argument_list|(
name|cache
argument_list|,
name|it
operator|.
name|next
argument_list|()
operator|.
name|getCache
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

