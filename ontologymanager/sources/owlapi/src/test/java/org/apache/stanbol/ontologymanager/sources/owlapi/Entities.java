begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|sources
operator|.
name|owlapi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|apibinding
operator|.
name|OWLManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLAnnotationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLDataFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLNamedIndividual
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLObjectProperty
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|sparql
operator|.
name|vocabulary
operator|.
name|FOAF
import|;
end_import

begin_comment
comment|/**  * OWL entities used for tests.  *   * @author alexdma  *   */
end_comment

begin_class
specifier|public
class|class
name|Entities
block|{
specifier|private
specifier|static
name|OWLDataFactory
name|df
init|=
name|OWLManager
operator|.
name|getOWLDataFactory
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|String
name|_NS
init|=
literal|"http://stanbol.apache.org/ontologies/generic/entities#"
decl_stmt|;
specifier|public
specifier|static
name|OWLNamedIndividual
name|ALEX
init|=
name|df
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|_NS
operator|+
literal|"Alex"
argument_list|)
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|OWLNamedIndividual
name|BEGONA
init|=
name|df
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|_NS
operator|+
literal|"Begona"
argument_list|)
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|OWLClass
name|FOAF_PERSON
init|=
name|df
operator|.
name|getOWLClass
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|FOAF
operator|.
name|NS
operator|+
literal|"Person"
argument_list|)
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|OWLObjectProperty
name|FOAF_KNOWS
init|=
name|df
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|FOAF
operator|.
name|NS
operator|+
literal|"knows"
argument_list|)
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|OWLAnnotationProperty
name|FOAF_KNOWS_AP
init|=
name|df
operator|.
name|getOWLAnnotationProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|FOAF
operator|.
name|NS
operator|+
literal|"knows"
argument_list|)
argument_list|)
decl_stmt|;
block|}
end_class

end_unit

