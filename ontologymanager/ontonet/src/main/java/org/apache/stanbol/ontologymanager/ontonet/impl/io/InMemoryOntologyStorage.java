begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|impl
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|impl
operator|.
name|ontology
operator|.
name|NoSuchStoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntology
import|;
end_import

begin_comment
comment|/**  * A hack that stores ontologies in volatile memory (e.g. for unit tests) but prevents the incessant logging  * of related error messages.  *   * @author alessandro  *   */
end_comment

begin_class
specifier|public
class|class
name|InMemoryOntologyStorage
extends|extends
name|ClerezzaOntologyStorage
block|{
specifier|private
name|Map
argument_list|<
name|IRI
argument_list|,
name|OWLOntology
argument_list|>
name|store
decl_stmt|;
specifier|public
name|InMemoryOntologyStorage
parameter_list|()
block|{
name|store
operator|=
operator|new
name|HashMap
argument_list|<
name|IRI
argument_list|,
name|OWLOntology
argument_list|>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|store
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|delete
parameter_list|(
name|IRI
name|arg0
parameter_list|)
block|{
name|store
operator|.
name|remove
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|deleteAll
parameter_list|(
name|Set
argument_list|<
name|IRI
argument_list|>
name|arg0
parameter_list|)
block|{
for|for
control|(
name|IRI
name|iri
range|:
name|arg0
control|)
name|delete
argument_list|(
name|iri
argument_list|)
expr_stmt|;
block|}
specifier|public
name|OWLOntology
name|getGraph
parameter_list|(
name|IRI
name|arg0
parameter_list|)
throws|throws
name|NoSuchStoreException
block|{
return|return
name|store
operator|.
name|get
argument_list|(
name|arg0
argument_list|)
return|;
block|}
specifier|public
name|Set
argument_list|<
name|IRI
argument_list|>
name|listGraphs
parameter_list|()
block|{
return|return
name|store
operator|.
name|keySet
argument_list|()
return|;
block|}
specifier|public
name|OWLOntology
name|load
parameter_list|(
name|IRI
name|arg0
parameter_list|)
block|{
return|return
name|store
operator|.
name|get
argument_list|(
name|arg0
argument_list|)
return|;
block|}
specifier|public
name|OWLOntology
name|sparqlConstruct
parameter_list|(
name|String
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|)
block|{
return|return
name|super
operator|.
name|sparqlConstruct
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
return|;
block|}
specifier|public
name|void
name|store
parameter_list|(
name|OWLOntology
name|arg0
parameter_list|)
block|{
try|try
block|{
name|store
operator|.
name|put
argument_list|(
name|arg0
operator|.
name|getOntologyID
argument_list|()
operator|.
name|getOntologyIRI
argument_list|()
argument_list|,
name|arg0
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|store
operator|.
name|put
argument_list|(
name|arg0
operator|.
name|getOWLOntologyManager
argument_list|()
operator|.
name|getOntologyDocumentIRI
argument_list|(
name|arg0
argument_list|)
argument_list|,
name|arg0
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|store
parameter_list|(
name|OWLOntology
name|arg0
parameter_list|,
name|IRI
name|arg1
parameter_list|)
block|{
name|store
operator|.
name|put
argument_list|(
name|arg1
argument_list|,
name|arg0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

