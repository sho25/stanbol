begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|ontology
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|collector
operator|.
name|OntologyCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyID
import|;
end_import

begin_comment
comment|/**  * Thrown whenever an operation that tries to change an ontology is denied due to active handles on that  * ontolgoies that forbid changes.  *   * @author alexdma  *   */
end_comment

begin_class
specifier|public
class|class
name|OntologyHandleException
extends|extends
name|Exception
block|{
comment|/**      *       */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|3192943015668440337L
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|OntologyCollector
argument_list|>
name|collectorHandles
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|OWLOntologyID
argument_list|>
name|dependents
decl_stmt|;
specifier|public
name|OntologyHandleException
parameter_list|(
name|Set
argument_list|<
name|OntologyCollector
argument_list|>
name|collectorHandles
parameter_list|,
name|Set
argument_list|<
name|OWLOntologyID
argument_list|>
name|dependents
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|setHandles
argument_list|(
name|collectorHandles
argument_list|,
name|dependents
argument_list|)
expr_stmt|;
block|}
specifier|public
name|OntologyHandleException
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|super
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|OntologyHandleException
parameter_list|(
name|String
name|message
parameter_list|,
name|Set
argument_list|<
name|OntologyCollector
argument_list|>
name|collectorHandles
parameter_list|,
name|Set
argument_list|<
name|OWLOntologyID
argument_list|>
name|dependents
parameter_list|)
block|{
name|this
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|setHandles
argument_list|(
name|collectorHandles
argument_list|,
name|dependents
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|OntologyCollector
argument_list|>
name|getCollectorHandles
parameter_list|()
block|{
return|return
name|collectorHandles
return|;
block|}
specifier|public
name|Set
argument_list|<
name|OWLOntologyID
argument_list|>
name|getDependingOntologies
parameter_list|()
block|{
return|return
name|dependents
return|;
block|}
specifier|private
name|void
name|setHandles
parameter_list|(
name|Set
argument_list|<
name|OntologyCollector
argument_list|>
name|collectorHandles
parameter_list|,
name|Set
argument_list|<
name|OWLOntologyID
argument_list|>
name|dependents
parameter_list|)
block|{
if|if
condition|(
name|collectorHandles
operator|==
literal|null
condition|)
name|collectorHandles
operator|=
operator|new
name|HashSet
argument_list|<
name|OntologyCollector
argument_list|>
argument_list|()
expr_stmt|;
name|this
operator|.
name|collectorHandles
operator|=
name|collectorHandles
expr_stmt|;
if|if
condition|(
name|dependents
operator|==
literal|null
condition|)
name|dependents
operator|=
operator|new
name|HashSet
argument_list|<
name|OWLOntologyID
argument_list|>
argument_list|()
expr_stmt|;
name|this
operator|.
name|dependents
operator|=
name|dependents
expr_stmt|;
block|}
block|}
end_class

end_unit

