begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|ontology
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|DuplicateIDException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|io
operator|.
name|OntologyInputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_comment
comment|/**  * An ontology scope factory is responsible for the creation of new ontology  * scopes from supplied ontology input sources for their core and custom spaces.<br>  *<br>  * Factory implementations should not call the setup method of the ontology  * scope once it is created, so that its spaces are not locked from editing  * since creation time.  *   * @author alessandro  *   */
end_comment

begin_interface
specifier|public
interface|interface
name|OntologyScopeFactory
extends|extends
name|ScopeEventListenable
block|{
comment|/** 	 * Creates and returns a new ontology scope with the core space ontologies 	 * obtained from<code>coreSource</code> and the custom space not set. 	 *  	 * @param scopeID 	 *            the desired unique identifier for the ontology scope. 	 * @param coreSource 	 *            the input source that provides the top ontology for the core 	 *            space. 	 * @return the newly created ontology scope. 	 * @throws DuplicateIDException 	 *             if an ontology scope with the given identifier is already 	 *<i>registered</i>. The exception is not thrown if another 	 *             scope with the same ID has been created but not registered. 	 */
name|OntologyScope
name|createOntologyScope
parameter_list|(
name|IRI
name|scopeID
parameter_list|,
name|OntologyInputSource
name|coreSource
parameter_list|)
throws|throws
name|DuplicateIDException
function_decl|;
comment|/** 	 * Creates and returns a new ontology scope with the core space ontologies 	 * obtained from<code>coreSource</code> and the custom ontologies obtained 	 * from<code>customSource</code>. 	 *  	 * @param scopeID 	 *            the desired unique identifier for the ontology scope. 	 * @param coreSource 	 *            the input source that provides the top ontology for the core 	 *            space. 	 * @param customSource 	 *            the input source that provides the top ontology for the custom 	 *            space. If null, no custom space should be created at all. 	 * @return the newly created ontology scope. 	 * @throws DuplicateIDException 	 *             if an ontology scope with the given identifier is already 	 *<i>registered</i>. The exception is not thrown if another 	 *             scope with the same ID has been created but not registered. 	 */
name|OntologyScope
name|createOntologyScope
parameter_list|(
name|IRI
name|scopeID
parameter_list|,
name|OntologyInputSource
name|coreSource
parameter_list|,
name|OntologyInputSource
name|customSource
parameter_list|)
throws|throws
name|DuplicateIDException
function_decl|;
block|}
end_interface

end_unit

