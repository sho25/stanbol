begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|impl
operator|.
name|renderers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|ontology
operator|.
name|OntologyScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|xd
operator|.
name|vocabulary
operator|.
name|Vocabulary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|apibinding
operator|.
name|OWLManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|AddAxiom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|AddImport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLAxiom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLDataFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLNamedIndividual
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyCreationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Just an attempt. If we like it, make an API out of it.  *   * @author alessandro  *   */
end_comment

begin_class
specifier|public
class|class
name|ScopeSetRenderer
block|{
specifier|private
specifier|static
name|OWLDataFactory
name|__factory
init|=
name|OWLManager
operator|.
name|getOWLDataFactory
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|IRI
name|_scopeIri
init|=
name|IRI
operator|.
name|create
argument_list|(
literal|"http://kres.iks-project.eu/ontology/onm/meta.owl#Scope"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|OWLClass
name|cScope
init|=
name|__factory
operator|.
name|getOWLClass
argument_list|(
name|_scopeIri
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|OWLOntology
name|getScopes
parameter_list|(
name|Set
argument_list|<
name|OntologyScope
argument_list|>
name|scopes
parameter_list|)
block|{
name|OWLOntologyManager
name|mgr
init|=
name|OWLManager
operator|.
name|createOWLOntologyManager
argument_list|()
decl_stmt|;
name|OWLOntology
name|ont
init|=
literal|null
decl_stmt|;
try|try
block|{
name|ont
operator|=
name|mgr
operator|.
name|createOntology
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OWLOntologyCreationException
name|e
parameter_list|)
block|{
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ScopeSetRenderer
operator|.
name|class
argument_list|)
operator|.
name|error
argument_list|(
literal|"KReS :: could not create empty ontology for rendering scopes."
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
name|List
argument_list|<
name|OWLOntologyChange
argument_list|>
name|additions
init|=
operator|new
name|LinkedList
argument_list|<
name|OWLOntologyChange
argument_list|>
argument_list|()
decl_stmt|;
comment|// The ODP metadata vocabulary is always imported.
comment|// TODO : also import the ONM meta when it goes online.
name|additions
operator|.
name|add
argument_list|(
operator|new
name|AddImport
argument_list|(
name|ont
argument_list|,
name|__factory
operator|.
name|getOWLImportsDeclaration
argument_list|(
name|Vocabulary
operator|.
name|ODPM
operator|.
name|getIRI
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|OntologyScope
name|scope
range|:
name|scopes
control|)
block|{
name|OWLNamedIndividual
name|iScope
init|=
name|__factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|scope
operator|.
name|getID
argument_list|()
argument_list|)
decl_stmt|;
name|OWLAxiom
name|ax
init|=
name|__factory
operator|.
name|getOWLClassAssertionAxiom
argument_list|(
name|cScope
argument_list|,
name|iScope
argument_list|)
decl_stmt|;
name|additions
operator|.
name|add
argument_list|(
operator|new
name|AddAxiom
argument_list|(
name|ont
argument_list|,
name|ax
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|mgr
operator|.
name|applyChanges
argument_list|(
name|additions
argument_list|)
expr_stmt|;
return|return
name|ont
return|;
block|}
block|}
end_class

end_unit

