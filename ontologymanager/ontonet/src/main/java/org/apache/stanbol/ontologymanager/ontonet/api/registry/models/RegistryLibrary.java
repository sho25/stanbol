begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|registry
operator|.
name|models
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_class
specifier|public
class|class
name|RegistryLibrary
extends|extends
name|AbstractRegistryItem
block|{
specifier|private
name|ArrayList
argument_list|<
name|AbstractRegistryItem
argument_list|>
name|children
decl_stmt|;
specifier|public
name|RegistryLibrary
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|children
operator|=
operator|new
name|ArrayList
argument_list|<
name|AbstractRegistryItem
argument_list|>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|addChild
parameter_list|(
name|AbstractRegistryItem
name|child
parameter_list|)
block|{
name|children
operator|.
name|add
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|child
operator|.
name|setParent
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeChild
parameter_list|(
name|RegistryItem
name|child
parameter_list|)
block|{
name|children
operator|.
name|remove
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|child
operator|.
name|setParent
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeChildren
parameter_list|()
block|{
name|children
operator|=
operator|new
name|ArrayList
argument_list|<
name|AbstractRegistryItem
argument_list|>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|RegistryItem
index|[]
name|getChildren
parameter_list|()
block|{
return|return
name|children
operator|.
name|toArray
argument_list|(
operator|new
name|AbstractRegistryItem
index|[
name|children
operator|.
name|size
argument_list|()
index|]
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|hasChildren
parameter_list|()
block|{
return|return
name|children
operator|.
name|size
argument_list|()
operator|>
literal|0
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isLibrary
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isOntology
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

