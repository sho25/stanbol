begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|impl
operator|.
name|session
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|ONManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|ontology
operator|.
name|OntologyScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|ontology
operator|.
name|OntologySpaceFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|ontology
operator|.
name|UnmodifiableOntologySpaceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|session
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|session
operator|.
name|SessionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|session
operator|.
name|SessionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|ScopeSessionSynchronizer
implements|implements
name|SessionListener
block|{
specifier|private
name|ONManager
name|manager
decl_stmt|;
specifier|public
name|ScopeSessionSynchronizer
parameter_list|(
name|ONManager
name|manager
parameter_list|)
block|{
comment|// WARN do not use ONManager here, as it will most probably be
comment|// instantiated by it.
name|this
operator|.
name|manager
operator|=
name|manager
expr_stmt|;
block|}
specifier|private
name|void
name|addSessionSpaces
parameter_list|(
name|IRI
name|sessionId
parameter_list|)
block|{
name|OntologySpaceFactory
name|factory
init|=
name|manager
operator|.
name|getOntologySpaceFactory
argument_list|()
decl_stmt|;
for|for
control|(
name|OntologyScope
name|scope
range|:
name|manager
operator|.
name|getScopeRegistry
argument_list|()
operator|.
name|getActiveScopes
argument_list|()
control|)
block|{
try|try
block|{
name|String
name|scopeId
init|=
name|scope
operator|.
name|getID
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|substring
argument_list|(
name|scope
operator|.
name|getID
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|lastIndexOf
argument_list|(
literal|"/"
argument_list|)
operator|+
literal|1
argument_list|)
decl_stmt|;
name|scope
operator|.
name|addSessionSpace
argument_list|(
name|factory
operator|.
name|createSessionOntologySpace
argument_list|(
name|scopeId
argument_list|)
argument_list|,
name|sessionId
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnmodifiableOntologySpaceException
name|e
parameter_list|)
block|{
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|warn
argument_list|(
literal|"Tried to add session to unmodifiable space "
argument_list|)
expr_stmt|;
continue|continue;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|sessionChanged
parameter_list|(
name|SessionEvent
name|event
parameter_list|)
block|{
comment|// System.err.println("Session " + event.getSession() + " has been "
comment|// + event.getOperationType());
name|Session
name|ses
init|=
name|event
operator|.
name|getSession
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|event
operator|.
name|getOperationType
argument_list|()
condition|)
block|{
case|case
name|CREATE
case|:
name|ses
operator|.
name|addSessionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|addSessionSpaces
argument_list|(
name|ses
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|CLOSE
case|:
break|break;
case|case
name|KILL
case|:
name|ses
operator|.
name|removeSessionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
block|}
end_class

end_unit

