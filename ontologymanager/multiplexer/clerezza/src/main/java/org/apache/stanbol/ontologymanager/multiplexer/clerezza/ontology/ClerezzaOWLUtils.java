begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|multiplexer
operator|.
name|clerezza
operator|.
name|ontology
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|commons
operator|.
name|rdf
operator|.
name|Graph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|commons
operator|.
name|rdf
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|access
operator|.
name|TcManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|commons
operator|.
name|rdf
operator|.
name|impl
operator|.
name|utils
operator|.
name|TripleImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|ontologies
operator|.
name|OWL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|ontologies
operator|.
name|RDF
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * A set of utilities for handling OWL2 ontologies in Clerezza.  *   * @author alexdma  *   */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|ClerezzaOWLUtils
block|{
comment|/**      * Restrict instantiation      */
specifier|private
name|ClerezzaOWLUtils
parameter_list|()
block|{}
specifier|private
specifier|static
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ClerezzaOWLUtils
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|Graph
name|createOntology
parameter_list|(
name|String
name|id
parameter_list|,
name|TcManager
name|tcm
parameter_list|)
block|{
name|IRI
name|name
init|=
operator|new
name|IRI
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|Graph
name|ont
init|=
name|tcm
operator|.
name|createGraph
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|ont
operator|.
name|add
argument_list|(
operator|new
name|TripleImpl
argument_list|(
name|name
argument_list|,
name|RDF
operator|.
name|type
argument_list|,
name|OWL
operator|.
name|Ontology
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|ont
return|;
block|}
specifier|public
specifier|static
name|Graph
name|createOntology
parameter_list|(
name|String
name|id
parameter_list|)
block|{
return|return
name|createOntology
argument_list|(
name|id
argument_list|,
name|TcManager
operator|.
name|getInstance
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

