begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|rest
operator|.
name|client
operator|.
name|imp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|AdministeredOntologies
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|ClassContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|ClassMetaInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|ClassesForOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|DatatypePropertiesForOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|DatatypePropertyContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|IndividualContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|IndividualMetaInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|IndividualsForOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|ObjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|ObjectPropertiesForOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|ObjectPropertyContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|OntologyMetaInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|PropertyMetaInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|model
operator|.
name|ResourceMetaInformationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|rest
operator|.
name|client
operator|.
name|RestClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|store
operator|.
name|rest
operator|.
name|client
operator|.
name|RestClientException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|UniformInterfaceException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|WebResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|core
operator|.
name|util
operator|.
name|MultivaluedMapImpl
import|;
end_import

begin_class
annotation|@
name|Component
argument_list|(
name|immediate
operator|=
literal|true
argument_list|,
name|metatype
operator|=
literal|true
argument_list|)
annotation|@
name|Service
specifier|public
class|class
name|RestClientImp
implements|implements
name|RestClient
block|{
specifier|private
specifier|static
specifier|final
name|String
name|ONTOLOGY
init|=
literal|"/ontology/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CLASSES
init|=
literal|"/classes/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|INDIVIDUALS
init|=
literal|"/individuals/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DATATYPE_PROPERTIES
init|=
literal|"/datatypeProperties/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OBJECT_PROPERTIES
init|=
literal|"/objectProperties/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SUPER_CLASSES
init|=
literal|"/superClasses/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EQUIVALENT_CLASSES
init|=
literal|"/equivalentClasses/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DISJOINT_CLASSES
init|=
literal|"/disjointClasses/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|UNION_CLASSES
init|=
literal|"/unionClasses/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DOMAINS
init|=
literal|"/domains/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|RANGES
init|=
literal|"/ranges/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SUPER_PROPERTIES
init|=
literal|"/superProperties/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TYPES
init|=
literal|"/types/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PROPERTY_ASSERTIONS
init|=
literal|"/propertyAssertions/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|LITERALS
init|=
literal|"/literals/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OBJECTS
init|=
literal|"/objects/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|JAXB_CONTEXT
init|=
literal|"org.apache.stanbol.ontologymanager.store.model"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|APPLICATION_RDF_XML
init|=
literal|"application/rdf+xml"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|WITH_INFERRED_AXIOMS
init|=
literal|"withInferredAxioms"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DELIMITER
init|=
literal|"/"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PROPERTY_STORE_URI
init|=
literal|"org.apache.stanbol.ontologymanager.store.uri"
decl_stmt|;
comment|/**      * Base URL for Persistence Store RESTful interface.      */
annotation|@
name|Property
argument_list|(
name|name
operator|=
name|PROPERTY_STORE_URI
argument_list|,
name|value
operator|=
literal|"http://localhost:8080"
argument_list|)
specifier|private
name|String
name|storeURI
decl_stmt|;
specifier|private
name|Client
name|client
decl_stmt|;
specifier|public
name|RestClientImp
parameter_list|()
block|{
name|this
operator|.
name|client
operator|=
name|Client
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|String
name|normalizeURI
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
return|return
name|uri
operator|.
name|replaceAll
argument_list|(
literal|"#"
argument_list|,
literal|"/"
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Object
name|unmarshall
parameter_list|(
name|String
name|content
parameter_list|)
throws|throws
name|RestClientException
block|{
name|Locale
name|oldLocale
init|=
name|Locale
operator|.
name|getDefault
argument_list|()
decl_stmt|;
name|Locale
operator|.
name|setDefault
argument_list|(
operator|new
name|Locale
argument_list|(
literal|"en"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|ClassLoader
name|cl
init|=
name|ObjectFactory
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
decl_stmt|;
name|JAXBContext
name|jc
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|JAXB_CONTEXT
argument_list|,
name|cl
argument_list|)
decl_stmt|;
name|Unmarshaller
name|unmarshaller
init|=
name|jc
operator|.
name|createUnmarshaller
argument_list|()
decl_stmt|;
name|Object
name|obj
init|=
name|unmarshaller
operator|.
name|unmarshal
argument_list|(
operator|new
name|StringReader
argument_list|(
name|content
argument_list|)
argument_list|)
decl_stmt|;
name|Locale
operator|.
name|setDefault
argument_list|(
name|oldLocale
argument_list|)
expr_stmt|;
return|return
name|obj
return|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"Exception in marshalling"
argument_list|,
name|ex
argument_list|)
throw|;
block|}
finally|finally
block|{
name|Locale
operator|.
name|setDefault
argument_list|(
name|oldLocale
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Activate
specifier|public
name|void
name|activate
parameter_list|(
name|ComponentContext
name|context
parameter_list|)
block|{
name|Dictionary
name|properties
init|=
name|context
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|this
operator|.
name|storeURI
operator|=
operator|(
name|String
operator|)
name|properties
operator|.
name|get
argument_list|(
name|PROPERTY_STORE_URI
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setPsURL
parameter_list|(
name|String
name|PsURL
parameter_list|)
block|{
name|storeURI
operator|=
name|PsURL
expr_stmt|;
block|}
specifier|public
name|RestClientImp
name|getRestClient
parameter_list|()
block|{
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|AdministeredOntologies
name|retrieveAdministeredOntologies
parameter_list|()
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|ONTOLOGY
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|AdministeredOntologies
name|onts
init|=
operator|(
name|AdministeredOntologies
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|onts
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|ClassesForOntology
name|retrieveClassesOfOntology
parameter_list|(
name|String
name|ontologyURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|ontologyURI
operator|+
name|CLASSES
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClassesForOntology
name|classes
init|=
operator|(
name|ClassesForOntology
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|classes
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|DatatypePropertiesForOntology
name|retrieveDatatypePropertiesOfOntology
parameter_list|(
name|String
name|ontologyURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|ontologyURI
operator|+
name|DATATYPE_PROPERTIES
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|DatatypePropertiesForOntology
name|datatypeProps
init|=
operator|(
name|DatatypePropertiesForOntology
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|datatypeProps
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|IndividualsForOntology
name|retrieveIndividualsOfOntology
parameter_list|(
name|String
name|ontologyURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|ontologyURI
operator|+
name|INDIVIDUALS
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|IndividualsForOntology
name|onts
init|=
operator|(
name|IndividualsForOntology
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|onts
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|ObjectPropertiesForOntology
name|retrieveObjectPropertiesOfOntology
parameter_list|(
name|String
name|ontologyURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|ontologyURI
operator|+
name|OBJECT_PROPERTIES
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|ObjectPropertiesForOntology
name|objectProps
init|=
operator|(
name|ObjectPropertiesForOntology
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|objectProps
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|retrieveOntology
parameter_list|(
name|String
name|ontologyURI
parameter_list|,
name|String
name|language
parameter_list|,
name|boolean
name|withInferredAxioms
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|ontologyURI
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|accept
argument_list|(
name|APPLICATION_RDF_XML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|content
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|OntologyMetaInformation
name|retrieveOntologyMetaInformation
parameter_list|(
name|String
name|ontologyURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|ontologyURI
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|OntologyMetaInformation
name|ont
init|=
operator|(
name|OntologyMetaInformation
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|ont
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|ResourceMetaInformationType
name|retrieveResourceWithURI
parameter_list|(
name|String
name|resourceURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|resourceURI
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|ResourceMetaInformationType
name|resourceInfo
init|=
operator|(
name|ResourceMetaInformationType
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|resourceInfo
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|OntologyMetaInformation
name|saveOntology
parameter_list|(
name|String
name|ontologyContent
parameter_list|,
name|String
name|ontologyURI
parameter_list|,
name|String
name|encoding
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|ONTOLOGY
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"ontologyURI"
argument_list|,
name|ontologyURI
argument_list|)
expr_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"ontologyContent"
argument_list|,
name|ontologyContent
argument_list|)
expr_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
decl_stmt|;
name|OntologyMetaInformation
name|resourceInfo
init|=
operator|(
name|OntologyMetaInformation
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|resourceInfo
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addContainerClassForIndividual
parameter_list|(
name|String
name|individualURI
parameter_list|,
name|String
name|classURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|individualURI
operator|+
name|TYPES
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"containerClassURIs"
argument_list|,
name|classURI
argument_list|)
expr_stmt|;
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addDisjointClass
parameter_list|(
name|String
name|classURI
parameter_list|,
name|String
name|disjointClassURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|classURI
operator|+
name|DISJOINT_CLASSES
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"disjointClassURIs"
argument_list|,
name|disjointClassURI
argument_list|)
expr_stmt|;
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addDomain
parameter_list|(
name|String
name|propertyURI
parameter_list|,
name|String
name|domainURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|propertyURI
operator|+
name|DOMAINS
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"domainURIs"
argument_list|,
name|domainURI
argument_list|)
expr_stmt|;
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addEquivalentClass
parameter_list|(
name|String
name|classURI
parameter_list|,
name|String
name|equivalentClassURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|classURI
operator|+
name|EQUIVALENT_CLASSES
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"equivalentClassURIs"
argument_list|,
name|equivalentClassURI
argument_list|)
expr_stmt|;
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addRange
parameter_list|(
name|String
name|propertyURI
parameter_list|,
name|String
name|rangeURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|propertyURI
operator|+
name|RANGES
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"rangeURIs"
argument_list|,
name|rangeURI
argument_list|)
expr_stmt|;
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addUnionClass
parameter_list|(
name|String
name|classURI
parameter_list|,
name|String
name|unionClassURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|classURI
operator|+
name|UNION_CLASSES
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"unionClassURIs"
argument_list|,
name|unionClassURI
argument_list|)
expr_stmt|;
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|assertPropertyValue
parameter_list|(
name|String
name|individualURI
parameter_list|,
name|String
name|propertyURI
parameter_list|,
name|String
name|individualAsValueURI
parameter_list|,
name|String
name|literalAsValue
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|individualURI
operator|+
name|PROPERTY_ASSERTIONS
operator|+
name|normalizeURI
argument_list|(
name|propertyURI
argument_list|)
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"literalValues"
argument_list|,
name|literalAsValue
argument_list|)
expr_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"objectValues"
argument_list|,
name|individualAsValueURI
argument_list|)
expr_stmt|;
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|clearPersistenceStore
parameter_list|()
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|ONTOLOGY
argument_list|)
decl_stmt|;
name|webResource
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteContainerClassForIndividual
parameter_list|(
name|String
name|individualURI
parameter_list|,
name|String
name|classURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|individualURI
operator|+
name|TYPES
operator|+
name|normalizeURI
argument_list|(
name|classURI
argument_list|)
argument_list|)
decl_stmt|;
name|webResource
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteDisjointClass
parameter_list|(
name|String
name|classURI
parameter_list|,
name|String
name|disjointClassURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|classURI
operator|+
name|DISJOINT_CLASSES
operator|+
name|normalizeURI
argument_list|(
name|disjointClassURI
argument_list|)
argument_list|)
decl_stmt|;
name|webResource
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteDomain
parameter_list|(
name|String
name|propertyURI
parameter_list|,
name|String
name|domainURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|propertyURI
operator|+
name|DOMAINS
operator|+
name|normalizeURI
argument_list|(
name|domainURI
argument_list|)
argument_list|)
decl_stmt|;
name|webResource
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteEquivalentClass
parameter_list|(
name|String
name|classURI
parameter_list|,
name|String
name|equivalentClassURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|classURI
operator|+
name|EQUIVALENT_CLASSES
operator|+
name|normalizeURI
argument_list|(
name|equivalentClassURI
argument_list|)
argument_list|)
decl_stmt|;
name|webResource
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteOntology
parameter_list|(
name|String
name|ontologyURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|ontologyURI
argument_list|)
decl_stmt|;
name|webResource
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deletePropertyAssertion
parameter_list|(
name|String
name|individualURI
parameter_list|,
name|String
name|propertyURI
parameter_list|,
name|String
name|individualAsValueURI
parameter_list|,
name|String
name|literalAsValue
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
decl_stmt|;
if|if
condition|(
name|literalAsValue
operator|!=
literal|null
condition|)
block|{
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"value"
argument_list|,
name|literalAsValue
argument_list|)
expr_stmt|;
name|webResource
operator|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|individualURI
operator|+
name|PROPERTY_ASSERTIONS
operator|+
name|normalizeURI
argument_list|(
name|propertyURI
argument_list|)
operator|+
name|LITERALS
argument_list|)
expr_stmt|;
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|header
argument_list|(
literal|"X-HTTP-Method-Override"
argument_list|,
literal|"DELETE"
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|individualAsValueURI
operator|!=
literal|null
condition|)
block|{
name|webResource
operator|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|individualURI
operator|+
name|PROPERTY_ASSERTIONS
operator|+
name|normalizeURI
argument_list|(
name|propertyURI
argument_list|)
operator|+
name|OBJECTS
operator|+
name|normalizeURI
argument_list|(
name|individualAsValueURI
argument_list|)
argument_list|)
expr_stmt|;
name|webResource
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Either individualAsValueURI or literalAsValue must not be null"
argument_list|)
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteRange
parameter_list|(
name|String
name|propertyURI
parameter_list|,
name|String
name|rangeURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|propertyURI
operator|+
name|RANGES
operator|+
name|normalizeURI
argument_list|(
name|rangeURI
argument_list|)
argument_list|)
decl_stmt|;
name|webResource
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteResource
parameter_list|(
name|String
name|resourceURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|resourceURI
argument_list|)
decl_stmt|;
name|webResource
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteSuperClass
parameter_list|(
name|String
name|subClassURI
parameter_list|,
name|String
name|superClassURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|subClassURI
operator|+
name|SUPER_CLASSES
operator|+
name|normalizeURI
argument_list|(
name|superClassURI
argument_list|)
argument_list|)
decl_stmt|;
name|webResource
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteSuperPropertyAssertion
parameter_list|(
name|String
name|subPropertyURI
parameter_list|,
name|String
name|superPropertyURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|subPropertyURI
operator|+
name|SUPER_PROPERTIES
operator|+
name|normalizeURI
argument_list|(
name|superPropertyURI
argument_list|)
argument_list|)
decl_stmt|;
name|webResource
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteUnionClass
parameter_list|(
name|String
name|classURI
parameter_list|,
name|String
name|unionClassURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|classURI
operator|+
name|UNION_CLASSES
operator|+
name|normalizeURI
argument_list|(
name|unionClassURI
argument_list|)
argument_list|)
decl_stmt|;
name|webResource
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|ClassContext
name|generateClassContext
parameter_list|(
name|String
name|classURI
parameter_list|,
name|boolean
name|withInferredAxioms
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|classURI
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|queryParam
argument_list|(
name|WITH_INFERRED_AXIOMS
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|withInferredAxioms
argument_list|)
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClassContext
name|classContext
init|=
operator|(
name|ClassContext
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|classContext
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|ClassMetaInformation
name|generateClassForOntology
parameter_list|(
name|String
name|ontologyURI
parameter_list|,
name|String
name|classURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|ontologyURI
operator|+
name|CLASSES
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"classURI"
argument_list|,
name|classURI
argument_list|)
expr_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
decl_stmt|;
name|ClassMetaInformation
name|classMetaInformation
init|=
operator|(
name|ClassMetaInformation
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|classMetaInformation
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|DatatypePropertyContext
name|generateDatatypePropertyContext
parameter_list|(
name|String
name|datatypePropertyURI
parameter_list|,
name|boolean
name|withInferredAxioms
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|datatypePropertyURI
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|queryParam
argument_list|(
name|WITH_INFERRED_AXIOMS
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|withInferredAxioms
argument_list|)
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|DatatypePropertyContext
name|datatypePropertyContext
init|=
operator|(
name|DatatypePropertyContext
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|datatypePropertyContext
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|PropertyMetaInformation
name|generateDatatypePropertyForOntology
parameter_list|(
name|String
name|ontologyURI
parameter_list|,
name|String
name|datatypePropertyURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|ontologyURI
operator|+
name|DATATYPE_PROPERTIES
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"datatypePropertyURI"
argument_list|,
name|datatypePropertyURI
argument_list|)
expr_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
decl_stmt|;
name|PropertyMetaInformation
name|propertyMetaInformation
init|=
operator|(
name|PropertyMetaInformation
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|propertyMetaInformation
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|IndividualContext
name|generateIndividualContext
parameter_list|(
name|String
name|individualURI
parameter_list|,
name|boolean
name|withInferredAxioms
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|individualURI
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|queryParam
argument_list|(
name|WITH_INFERRED_AXIOMS
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|withInferredAxioms
argument_list|)
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|IndividualContext
name|individualContext
init|=
operator|(
name|IndividualContext
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|individualContext
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|IndividualMetaInformation
name|generateIndividualForOntology
parameter_list|(
name|String
name|ontologyURI
parameter_list|,
name|String
name|classURI
parameter_list|,
name|String
name|individualURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|ontologyURI
operator|+
name|INDIVIDUALS
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"classURI"
argument_list|,
name|classURI
argument_list|)
expr_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"individualURI"
argument_list|,
name|individualURI
argument_list|)
expr_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
decl_stmt|;
name|IndividualMetaInformation
name|individualMetaInformation
init|=
operator|(
name|IndividualMetaInformation
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|individualMetaInformation
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|ObjectPropertyContext
name|generateObjectPropertyContext
parameter_list|(
name|String
name|objectPropertyURI
parameter_list|,
name|boolean
name|withInferredAxioms
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|objectPropertyURI
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|queryParam
argument_list|(
name|WITH_INFERRED_AXIOMS
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|withInferredAxioms
argument_list|)
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|ObjectPropertyContext
name|objectPropertyContext
init|=
operator|(
name|ObjectPropertyContext
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|objectPropertyContext
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|PropertyMetaInformation
name|generateObjectPropertyForOntology
parameter_list|(
name|String
name|ontologyURI
parameter_list|,
name|String
name|objectPropertyURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|ontologyURI
operator|+
name|OBJECT_PROPERTIES
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"objectPropertyURI"
argument_list|,
name|objectPropertyURI
argument_list|)
expr_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
decl_stmt|;
name|PropertyMetaInformation
name|propertyMetaInformation
init|=
operator|(
name|PropertyMetaInformation
operator|)
name|unmarshall
argument_list|(
name|content
argument_list|)
decl_stmt|;
return|return
name|propertyMetaInformation
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|makeSubClassOf
parameter_list|(
name|String
name|subClassURI
parameter_list|,
name|String
name|superClassURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|subClassURI
operator|+
name|SUPER_CLASSES
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"superClassURIs"
argument_list|,
name|superClassURI
argument_list|)
expr_stmt|;
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|makeSubPropertyOf
parameter_list|(
name|String
name|subPropertyURI
parameter_list|,
name|String
name|superPropertyURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|subPropertyURI
operator|+
name|SUPER_PROPERTIES
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"superPropertyURIs"
argument_list|,
name|superPropertyURI
argument_list|)
expr_stmt|;
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addDomains
parameter_list|(
name|String
name|propertyURI
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|domainURIs
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|propertyURI
operator|+
name|DOMAINS
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|domainURI
range|:
name|domainURIs
control|)
block|{
name|formData
operator|.
name|add
argument_list|(
literal|"domainURIs"
argument_list|,
name|domainURI
argument_list|)
expr_stmt|;
block|}
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setPropertyAttributes
parameter_list|(
name|String
name|propertyURI
parameter_list|,
name|Boolean
name|isFunctional
parameter_list|,
name|Boolean
name|isTransitive
parameter_list|,
name|Boolean
name|isSymmetric
parameter_list|,
name|Boolean
name|isInverseFunctional
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|propertyURI
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
if|if
condition|(
name|isFunctional
operator|!=
literal|null
condition|)
block|{
name|formData
operator|.
name|add
argument_list|(
literal|"isFunctional"
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|isFunctional
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isTransitive
operator|!=
literal|null
condition|)
block|{
name|formData
operator|.
name|add
argument_list|(
literal|"isTransitive"
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|isTransitive
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isSymmetric
operator|!=
literal|null
condition|)
block|{
name|formData
operator|.
name|add
argument_list|(
literal|"isSymmetric"
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|isSymmetric
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isInverseFunctional
operator|!=
literal|null
condition|)
block|{
name|formData
operator|.
name|add
argument_list|(
literal|"isInverseFunctional"
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|isInverseFunctional
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addRanges
parameter_list|(
name|String
name|propertyURI
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|rangeURIs
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|propertyURI
operator|+
name|RANGES
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|rangeURI
range|:
name|rangeURIs
control|)
block|{
name|formData
operator|.
name|add
argument_list|(
literal|"rangeURIs"
argument_list|,
name|rangeURI
argument_list|)
expr_stmt|;
block|}
name|webResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|mergeOntology
parameter_list|(
name|String
name|ontologyPath
parameter_list|,
name|String
name|targetOntology
parameter_list|,
name|String
name|targetOntologyBaseURI
parameter_list|)
throws|throws
name|RestClientException
block|{
try|try
block|{
name|WebResource
name|webResource
init|=
name|client
operator|.
name|resource
argument_list|(
name|storeURI
operator|+
name|DELIMITER
operator|+
name|ontologyPath
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"targetOntology"
argument_list|,
name|targetOntology
argument_list|)
expr_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"targetOntologyBaseURI"
argument_list|,
name|targetOntologyBaseURI
argument_list|)
expr_stmt|;
name|String
name|content
init|=
name|webResource
operator|.
name|accept
argument_list|(
name|APPLICATION_RDF_XML
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
decl_stmt|;
return|return
name|content
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RestClientException
argument_list|(
literal|"REST service exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

