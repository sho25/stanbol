begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|core
operator|.
name|session
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|servicesapi
operator|.
name|session
operator|.
name|SessionIDGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|servicesapi
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_comment
comment|/**  * FIXME make sure to manage namespaces independently!  *   * @author alexdma  *   */
end_comment

begin_class
specifier|public
class|class
name|TimestampedSessionIDGenerator
implements|implements
name|SessionIDGenerator
block|{
specifier|private
name|IRI
name|baseIRI
decl_stmt|;
specifier|public
name|TimestampedSessionIDGenerator
parameter_list|()
block|{
name|this
operator|.
name|baseIRI
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|TimestampedSessionIDGenerator
parameter_list|(
name|IRI
name|baseIRI
parameter_list|)
block|{
name|this
operator|.
name|baseIRI
operator|=
name|baseIRI
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|createSessionID
parameter_list|()
block|{
name|String
name|id
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|baseIRI
operator|!=
literal|null
condition|)
name|id
operator|+=
name|StringUtils
operator|.
name|stripIRITerminator
argument_list|(
name|baseIRI
argument_list|)
operator|+
literal|"/session/"
expr_stmt|;
return|return
name|id
operator|+
operator|new
name|Date
argument_list|()
operator|.
name|getTime
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|createSessionID
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|exclude
parameter_list|)
block|{
name|String
name|id
init|=
literal|null
decl_stmt|;
do|do
block|{
name|id
operator|=
name|createSessionID
argument_list|()
expr_stmt|;
block|}
do|while
condition|(
name|exclude
operator|.
name|contains
argument_list|(
name|id
argument_list|)
condition|)
do|;
return|return
name|id
return|;
block|}
annotation|@
name|Override
specifier|public
name|IRI
name|getBaseIRI
parameter_list|()
block|{
return|return
name|baseIRI
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBaseIRI
parameter_list|(
name|IRI
name|baseIRI
parameter_list|)
block|{
name|this
operator|.
name|baseIRI
operator|=
name|baseIRI
expr_stmt|;
block|}
block|}
end_class

end_unit

