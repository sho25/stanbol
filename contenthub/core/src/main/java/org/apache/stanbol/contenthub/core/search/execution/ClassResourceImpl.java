begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|core
operator|.
name|search
operator|.
name|execution
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|ClassResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|Keyword
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|vocabulary
operator|.
name|SearchVocabulary
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|enhanced
operator|.
name|EnhGraph
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|graph
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|ResourceFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|vocabulary
operator|.
name|RDF
import|;
end_import

begin_comment
comment|/**  * Implementation of {@link ClassResource}.  *   * @author cihan  *   */
end_comment

begin_class
specifier|public
class|class
name|ClassResourceImpl
extends|extends
name|AbstractKeywordRelatedResource
implements|implements
name|ClassResource
block|{
name|ClassResourceImpl
parameter_list|(
name|Node
name|n
parameter_list|,
name|EnhGraph
name|g
parameter_list|,
name|Double
name|weight
parameter_list|,
name|Double
name|score
parameter_list|,
name|Keyword
name|relatedKeyword
parameter_list|,
name|String
name|classURI
parameter_list|,
name|SearchContextFactoryImpl
name|factory
parameter_list|)
block|{
name|super
argument_list|(
name|n
argument_list|,
name|g
argument_list|,
name|weight
argument_list|,
name|score
argument_list|,
name|relatedKeyword
argument_list|,
name|factory
argument_list|)
expr_stmt|;
name|this
operator|.
name|addProperty
argument_list|(
name|RDF
operator|.
name|type
argument_list|,
name|SearchVocabulary
operator|.
name|CLASS_RESOURCE
argument_list|)
expr_stmt|;
name|this
operator|.
name|addProperty
argument_list|(
name|SearchVocabulary
operator|.
name|CLASS_URI
argument_list|,
name|ResourceFactory
operator|.
name|createResource
argument_list|(
name|classURI
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getClassURI
parameter_list|()
block|{
return|return
name|this
operator|.
name|getPropertyValue
argument_list|(
name|SearchVocabulary
operator|.
name|CLASS_URI
argument_list|)
operator|.
name|asResource
argument_list|()
operator|.
name|getURI
argument_list|()
return|;
block|}
block|}
end_class

end_unit

