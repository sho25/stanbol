begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|core
operator|.
name|utils
operator|.
name|indexing
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|Triple
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|jena
operator|.
name|commons
operator|.
name|Tria2JenaUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|jena
operator|.
name|facade
operator|.
name|JenaGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|core
operator|.
name|utils
operator|.
name|sparql
operator|.
name|QueryGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|QueryExecution
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|QueryExecutionFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|QueryFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|QuerySolution
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|larq
operator|.
name|IndexBuilderString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|larq
operator|.
name|IndexLARQ
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|ModelFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|RDFNode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|ResourceFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Statement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|StmtIterator
import|;
end_import

begin_comment
comment|/**  *   * @author anil.sinaci  *   */
end_comment

begin_class
specifier|public
class|class
name|EnhancementLARQ
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|EnhancementLARQ
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|EnhancementLARQ
name|instance
decl_stmt|;
specifier|private
name|Model
name|enhancementModel
decl_stmt|;
specifier|private
name|IndexBuilderString
name|enhancementGraphIndexBuilder
decl_stmt|;
specifier|private
name|EnhancementLARQ
parameter_list|()
block|{
name|enhancementModel
operator|=
literal|null
expr_stmt|;
name|enhancementGraphIndexBuilder
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
specifier|static
name|EnhancementLARQ
name|getInstance
parameter_list|()
block|{
if|if
condition|(
name|instance
operator|==
literal|null
condition|)
block|{
name|instance
operator|=
operator|new
name|EnhancementLARQ
argument_list|()
expr_stmt|;
block|}
return|return
name|instance
return|;
block|}
specifier|public
name|void
name|createIndex
parameter_list|(
name|MGraph
name|mgraph
parameter_list|)
block|{
comment|// FIXME: To index the enhancement graph, we need a Jena graph, however tcmanager
comment|// is directly used in here. We need to use a common interface to eliminate this burden
comment|// of converting one graph to other.
name|JenaGraph
name|jenaGraph
init|=
operator|new
name|JenaGraph
argument_list|(
name|mgraph
argument_list|)
decl_stmt|;
name|enhancementModel
operator|=
name|ModelFactory
operator|.
name|createModelForGraph
argument_list|(
name|jenaGraph
argument_list|)
expr_stmt|;
comment|// Build the LARQ index on the enhancement graph
comment|// TODO We may build the index on a specific property
name|enhancementGraphIndexBuilder
operator|=
operator|new
name|IndexBuilderString
argument_list|()
expr_stmt|;
name|enhancementGraphIndexBuilder
operator|.
name|indexStatements
argument_list|(
name|enhancementModel
operator|.
name|listStatements
argument_list|()
argument_list|)
expr_stmt|;
name|enhancementModel
operator|.
name|register
argument_list|(
name|enhancementGraphIndexBuilder
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"EnhancementLARQ has indexed existing enhancement graph and started to listen"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updateIndex
parameter_list|(
name|Triple
name|triple
parameter_list|)
block|{
name|Tria2JenaUtil
name|jena2TriaUtil
init|=
operator|new
name|Tria2JenaUtil
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|Resource
name|subject
init|=
name|enhancementModel
operator|.
name|createResource
argument_list|(
name|jena2TriaUtil
operator|.
name|convert2JenaNode
argument_list|(
name|triple
operator|.
name|getSubject
argument_list|()
argument_list|)
operator|.
name|getURI
argument_list|()
argument_list|)
decl_stmt|;
name|Property
name|predicate
init|=
name|enhancementModel
operator|.
name|createProperty
argument_list|(
name|jena2TriaUtil
operator|.
name|convert2JenaNode
argument_list|(
name|triple
operator|.
name|getPredicate
argument_list|()
argument_list|)
operator|.
name|getURI
argument_list|()
argument_list|)
decl_stmt|;
name|RDFNode
name|object
init|=
name|enhancementModel
operator|.
name|getRDFNode
argument_list|(
name|jena2TriaUtil
operator|.
name|convert2JenaNode
argument_list|(
name|triple
operator|.
name|getObject
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Statement
name|s
init|=
name|enhancementModel
operator|.
name|createStatement
argument_list|(
name|subject
argument_list|,
name|predicate
argument_list|,
name|object
argument_list|)
decl_stmt|;
name|enhancementModel
operator|.
name|add
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Model
name|getEnhancementModel
parameter_list|()
block|{
if|if
condition|(
name|enhancementModel
operator|==
literal|null
condition|)
block|{
name|logger
operator|.
name|error
argument_list|(
literal|"Enhancement Model in EnhancementLARQ is null. Index has not been created yet."
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
return|return
name|enhancementModel
return|;
block|}
specifier|public
name|IndexLARQ
name|getIndex
parameter_list|()
block|{
if|if
condition|(
name|enhancementGraphIndexBuilder
operator|==
literal|null
condition|)
block|{
name|logger
operator|.
name|error
argument_list|(
literal|"enhancementGraphIndexBuilder in EnhancementLARQ is null. Index has not been created yet."
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
return|return
name|enhancementGraphIndexBuilder
operator|.
name|getIndex
argument_list|()
return|;
block|}
specifier|public
name|void
name|deleteEnhancements
parameter_list|(
name|String
name|contentID
parameter_list|)
block|{
name|enhancementModel
operator|.
name|unregister
argument_list|(
name|enhancementGraphIndexBuilder
argument_list|)
expr_stmt|;
name|Query
name|query
init|=
name|QueryFactory
operator|.
name|create
argument_list|(
name|QueryGenerator
operator|.
name|getEnhancementsOfContent
argument_list|(
name|contentID
argument_list|)
argument_list|)
decl_stmt|;
name|QueryExecution
name|qexec
init|=
name|QueryExecutionFactory
operator|.
name|create
argument_list|(
name|query
argument_list|,
name|enhancementModel
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|enhancementsToBeRemoved
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
try|try
block|{
name|ResultSet
name|results
init|=
name|qexec
operator|.
name|execSelect
argument_list|()
decl_stmt|;
while|while
condition|(
name|results
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|QuerySolution
name|soln
init|=
name|results
operator|.
name|nextSolution
argument_list|()
decl_stmt|;
name|enhancementsToBeRemoved
operator|.
name|add
argument_list|(
name|soln
operator|.
name|getResource
argument_list|(
literal|"enhancement"
argument_list|)
operator|.
name|getURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|qexec
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|String
name|enhancementURI
range|:
name|enhancementsToBeRemoved
control|)
block|{
name|StmtIterator
name|it
init|=
name|enhancementModel
operator|.
name|listStatements
argument_list|(
name|ResourceFactory
operator|.
name|createResource
argument_list|(
name|enhancementURI
argument_list|)
argument_list|,
operator|(
name|Property
operator|)
literal|null
argument_list|,
operator|(
name|RDFNode
operator|)
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|it
operator|==
literal|null
condition|)
continue|continue;
name|enhancementModel
operator|.
name|remove
argument_list|(
name|it
argument_list|)
expr_stmt|;
block|}
name|enhancementGraphIndexBuilder
operator|=
operator|new
name|IndexBuilderString
argument_list|()
expr_stmt|;
name|enhancementGraphIndexBuilder
operator|.
name|indexStatements
argument_list|(
name|enhancementModel
operator|.
name|listStatements
argument_list|()
argument_list|)
expr_stmt|;
name|enhancementModel
operator|.
name|register
argument_list|(
name|enhancementGraphIndexBuilder
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|printGraph
parameter_list|()
block|{
name|enhancementModel
operator|.
name|write
argument_list|(
name|System
operator|.
name|out
argument_list|,
literal|"RDF/XML"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

