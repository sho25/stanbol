begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|core
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|ClientHandlerException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|UniformInterfaceException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|WebResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|core
operator|.
name|util
operator|.
name|MultivaluedMapImpl
import|;
end_import

begin_comment
comment|/**  *   * @author cihan  *   */
end_comment

begin_class
specifier|public
class|class
name|ContentHubClient
block|{
specifier|private
specifier|static
specifier|final
name|String
name|DELIMITER
init|=
literal|"/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PATH_RAW
init|=
literal|"raw"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PARAM_CONTENT
init|=
literal|"content"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|ContentHubClient
name|getInstance
parameter_list|(
name|String
name|contentHubEndpoint
parameter_list|)
block|{
return|return
operator|new
name|ContentHubClient
argument_list|(
name|contentHubEndpoint
argument_list|)
return|;
block|}
specifier|private
name|ContentHubClient
parameter_list|(
name|String
name|contentHubEndpoint
parameter_list|)
block|{
name|this
operator|.
name|contentHubEndpoint
operator|=
name|contentHubEndpoint
expr_stmt|;
if|if
condition|(
operator|!
name|this
operator|.
name|contentHubEndpoint
operator|.
name|endsWith
argument_list|(
name|DELIMITER
argument_list|)
condition|)
block|{
name|this
operator|.
name|contentHubEndpoint
operator|+=
name|DELIMITER
expr_stmt|;
block|}
name|this
operator|.
name|client
operator|=
name|Client
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
specifier|private
name|String
name|contentHubEndpoint
decl_stmt|;
specifier|private
name|Client
name|client
decl_stmt|;
specifier|public
name|URI
name|storeContent
parameter_list|(
name|String
name|content
parameter_list|)
block|{
name|nullCheck
argument_list|(
name|content
argument_list|,
literal|"content"
argument_list|)
expr_stmt|;
name|String
name|path
init|=
name|contentHubEndpoint
decl_stmt|;
name|WebResource
name|wr
init|=
name|client
operator|.
name|resource
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|form
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|form
operator|.
name|add
argument_list|(
name|PARAM_CONTENT
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|String
name|response
init|=
name|wr
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|form
argument_list|)
decl_stmt|;
try|try
block|{
name|response
operator|=
name|response
operator|.
name|substring
argument_list|(
name|response
operator|.
name|indexOf
argument_list|(
literal|"Content Item:"
argument_list|)
operator|+
literal|13
argument_list|,
name|response
operator|.
name|indexOf
argument_list|(
literal|"("
argument_list|)
argument_list|)
operator|.
name|trim
argument_list|()
expr_stmt|;
return|return
operator|new
name|URI
argument_list|(
name|contentHubEndpoint
operator|+
name|PATH_RAW
operator|+
name|DELIMITER
operator|+
name|response
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ClientHandlerException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|UniformInterfaceException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|private
name|void
name|nullCheck
parameter_list|(
name|Object
name|obj
parameter_list|,
name|String
name|parameterName
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Parameter "
operator|+
name|parameterName
operator|+
literal|"can not be null"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

