begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|core
operator|.
name|search
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|access
operator|.
name|TcManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|jena
operator|.
name|facade
operator|.
name|JenaGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|core
operator|.
name|search
operator|.
name|execution
operator|.
name|SearchContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|core
operator|.
name|utils
operator|.
name|IndexingUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|Search
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|SearchResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|processor
operator|.
name|SearchProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|ontology
operator|.
name|OntModel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|ontology
operator|.
name|OntModelSpec
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|ModelFactory
import|;
end_import

begin_comment
comment|/**  *   * @author anil.sinaci  *   */
end_comment

begin_class
annotation|@
name|Component
annotation|@
name|Service
specifier|public
class|class
name|SearchImpl
implements|implements
name|Search
block|{
specifier|private
specifier|final
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SearchImpl
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|TcManager
name|tcManager
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|SearchProcessor
name|searchProcessor
decl_stmt|;
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
name|keyword
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keyword
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
name|keyword
parameter_list|,
name|String
name|ontologyURI
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keyword
argument_list|,
name|ontologyURI
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
name|keyword
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|allowedEngines
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keyword
argument_list|,
literal|null
argument_list|,
name|allowedEngines
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
name|keyword
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Object
argument_list|>
argument_list|>
name|facets
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keyword
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|facets
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
name|keyword
parameter_list|,
name|String
name|ontologyURI
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|allowedEngines
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keyword
argument_list|,
name|ontologyURI
argument_list|,
name|allowedEngines
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
name|keyword
parameter_list|,
name|String
name|ontologyURI
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Object
argument_list|>
argument_list|>
name|facets
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keyword
argument_list|,
name|ontologyURI
argument_list|,
literal|null
argument_list|,
name|facets
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
name|keyword
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|allowedEngines
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Object
argument_list|>
argument_list|>
name|facets
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keyword
argument_list|,
literal|null
argument_list|,
name|allowedEngines
argument_list|,
name|facets
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
name|keyword
parameter_list|,
name|String
name|ontologyURI
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|allowedEngines
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Object
argument_list|>
argument_list|>
name|facets
parameter_list|)
block|{
if|if
condition|(
name|keyword
operator|==
literal|null
operator|||
name|keyword
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|logger
operator|.
name|debug
argument_list|(
literal|"Keyword string is null or empty"
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Keyword string cannot be null or empty"
argument_list|)
throw|;
block|}
name|String
index|[]
name|keywords
init|=
block|{
name|keyword
block|}
decl_stmt|;
return|return
name|search
argument_list|(
name|keywords
argument_list|,
name|ontologyURI
argument_list|,
name|allowedEngines
argument_list|,
name|facets
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
index|[]
name|keywords
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keywords
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
index|[]
name|keywords
parameter_list|,
name|String
name|ontologyURI
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keywords
argument_list|,
name|ontologyURI
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
index|[]
name|keywords
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|allowedEngines
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keywords
argument_list|,
literal|null
argument_list|,
name|allowedEngines
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
index|[]
name|keywords
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Object
argument_list|>
argument_list|>
name|facets
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keywords
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|facets
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
index|[]
name|keywords
parameter_list|,
name|String
name|ontologyURI
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|allowedEngines
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keywords
argument_list|,
name|ontologyURI
argument_list|,
name|allowedEngines
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
index|[]
name|keywords
parameter_list|,
name|String
name|ontologyURI
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Object
argument_list|>
argument_list|>
name|facets
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keywords
argument_list|,
name|ontologyURI
argument_list|,
literal|null
argument_list|,
name|facets
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
index|[]
name|keywords
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|allowedEngines
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Object
argument_list|>
argument_list|>
name|facets
parameter_list|)
block|{
return|return
name|search
argument_list|(
name|keywords
argument_list|,
literal|null
argument_list|,
name|allowedEngines
argument_list|,
name|facets
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SearchResult
name|search
parameter_list|(
name|String
index|[]
name|keywords
parameter_list|,
name|String
name|ontologyURI
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|allowedEngines
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Object
argument_list|>
argument_list|>
name|facets
parameter_list|)
block|{
if|if
condition|(
name|keywords
operator|==
literal|null
operator|||
name|keywords
operator|.
name|length
operator|==
literal|0
condition|)
block|{
name|logger
operator|.
name|debug
argument_list|(
literal|"Keyword array is null or contains no keywords"
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Keyword array is null or contains no keywords"
argument_list|)
throw|;
block|}
name|MGraph
name|mgraph
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|ontologyURI
operator|!=
literal|null
operator|&&
operator|!
name|ontologyURI
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
try|try
block|{
name|mgraph
operator|=
name|tcManager
operator|.
name|getMGraph
argument_list|(
operator|new
name|UriRef
argument_list|(
name|ontologyURI
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|logger
operator|.
name|debug
argument_list|(
literal|"TCManager does not contain a graph with the URI: {}"
argument_list|,
name|ontologyURI
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"Search will continue with no ontology."
argument_list|)
expr_stmt|;
block|}
block|}
name|OntModel
name|ontModel
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|mgraph
operator|!=
literal|null
condition|)
block|{
name|JenaGraph
name|jenaGraph
init|=
operator|new
name|JenaGraph
argument_list|(
name|mgraph
argument_list|)
decl_stmt|;
name|Model
name|model
init|=
name|ModelFactory
operator|.
name|createModelForGraph
argument_list|(
name|jenaGraph
argument_list|)
decl_stmt|;
name|ontModel
operator|=
name|ModelFactory
operator|.
name|createOntologyModel
argument_list|(
name|OntModelSpec
operator|.
name|OWL_DL_MEM_RDFS_INF
argument_list|)
expr_stmt|;
name|ontModel
operator|.
name|add
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|IndexingUtil
operator|.
name|addIndexPropertyToOntResources
argument_list|(
name|ontModel
argument_list|)
expr_stmt|;
block|}
comment|// Create search context
name|SearchContextImpl
name|searchContext
init|=
operator|new
name|SearchContextImpl
argument_list|(
name|ontModel
argument_list|,
name|keywords
argument_list|,
name|allowedEngines
argument_list|,
name|facets
argument_list|)
decl_stmt|;
name|searchProcessor
operator|.
name|processQuery
argument_list|(
name|searchContext
argument_list|)
expr_stmt|;
return|return
name|searchContext
return|;
block|}
block|}
end_class

end_unit

