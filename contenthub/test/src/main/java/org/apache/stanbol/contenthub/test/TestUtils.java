begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|test
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|Triple
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocumentList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|store
operator|.
name|StoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|store
operator|.
name|vocabulary
operator|.
name|SolrVocabulary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|store
operator|.
name|vocabulary
operator|.
name|SolrVocabulary
operator|.
name|SolrFieldName
import|;
end_import

begin_class
specifier|public
class|class
name|TestUtils
block|{
specifier|public
specifier|static
name|void
name|submitDocumentToSolr
parameter_list|(
name|SolrServer
name|solrServer
parameter_list|,
name|int
name|documentCount
parameter_list|,
name|boolean
name|addCons
parameter_list|)
throws|throws
name|StoreException
throws|,
name|SolrServerException
throws|,
name|IOException
block|{
name|SolrInputDocument
name|doc
init|=
operator|new
name|SolrInputDocument
argument_list|()
decl_stmt|;
name|doc
operator|.
name|addField
argument_list|(
name|SolrFieldName
operator|.
name|ID
operator|.
name|toString
argument_list|()
argument_list|,
name|TestVocabulary
operator|.
name|attachedId
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addField
argument_list|(
name|SolrFieldName
operator|.
name|CONTENT
operator|.
name|toString
argument_list|()
argument_list|,
name|TestVocabulary
operator|.
name|content
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addField
argument_list|(
name|SolrFieldName
operator|.
name|MIMETYPE
operator|.
name|toString
argument_list|()
argument_list|,
name|TestVocabulary
operator|.
name|contentType
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addField
argument_list|(
name|SolrFieldName
operator|.
name|CREATIONDATE
operator|.
name|toString
argument_list|()
argument_list|,
name|TestVocabulary
operator|.
name|creationDate
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addField
argument_list|(
name|SolrFieldName
operator|.
name|ENHANCEMENTCOUNT
operator|.
name|toString
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addField
argument_list|(
name|SolrFieldName
operator|.
name|TITLE
operator|.
name|toString
argument_list|()
argument_list|,
name|TestVocabulary
operator|.
name|title
argument_list|)
expr_stmt|;
if|if
condition|(
name|addCons
condition|)
block|{
name|doc
operator|.
name|addField
argument_list|(
literal|"author"
operator|+
name|SolrVocabulary
operator|.
name|SOLR_DYNAMIC_FIELD_TEXT
argument_list|,
name|TestVocabulary
operator|.
name|consValues
argument_list|)
expr_stmt|;
block|}
name|solrServer
operator|.
name|add
argument_list|(
name|doc
argument_list|)
expr_stmt|;
if|if
condition|(
name|documentCount
operator|==
literal|2
condition|)
block|{
name|doc
operator|.
name|setField
argument_list|(
name|SolrFieldName
operator|.
name|ID
operator|.
name|toString
argument_list|()
argument_list|,
name|TestVocabulary
operator|.
name|attachedId
operator|+
literal|"2"
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setField
argument_list|(
name|SolrFieldName
operator|.
name|TITLE
operator|.
name|toString
argument_list|()
argument_list|,
name|TestVocabulary
operator|.
name|title
operator|+
literal|"2"
argument_list|)
expr_stmt|;
name|solrServer
operator|.
name|add
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
name|solrServer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|SolrDocument
name|getSolrDocument
parameter_list|(
name|SolrServer
name|solrServer
parameter_list|)
throws|throws
name|StoreException
throws|,
name|SolrServerException
block|{
name|SolrQuery
name|query
init|=
operator|new
name|SolrQuery
argument_list|()
decl_stmt|;
name|String
name|queryString
init|=
name|SolrFieldName
operator|.
name|ID
operator|.
name|toString
argument_list|()
operator|+
literal|":\""
operator|+
name|TestVocabulary
operator|.
name|attachedId
operator|+
literal|"\""
decl_stmt|;
name|query
operator|.
name|setQuery
argument_list|(
name|queryString
argument_list|)
expr_stmt|;
name|SolrDocumentList
name|results
init|=
name|solrServer
operator|.
name|query
argument_list|(
name|query
argument_list|)
operator|.
name|getResults
argument_list|()
decl_stmt|;
if|if
condition|(
name|results
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
return|return
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|void
name|deleteDocument
parameter_list|(
name|SolrServer
name|solrServer
parameter_list|,
name|MGraph
name|enhancementGraph
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
throws|,
name|StoreException
block|{
name|Iterator
argument_list|<
name|Triple
argument_list|>
name|it
init|=
name|enhancementGraph
operator|.
name|filter
argument_list|(
operator|new
name|UriRef
argument_list|(
name|TestVocabulary
operator|.
name|attachedId
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Triple
argument_list|>
name|willBeRemoved
init|=
operator|new
name|ArrayList
argument_list|<
name|Triple
argument_list|>
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|willBeRemoved
operator|.
name|add
argument_list|(
name|it
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|enhancementGraph
operator|.
name|removeAll
argument_list|(
name|willBeRemoved
argument_list|)
expr_stmt|;
name|solrServer
operator|.
name|deleteById
argument_list|(
name|TestVocabulary
operator|.
name|attachedId
argument_list|)
expr_stmt|;
name|solrServer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

