begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|test
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|junit
operator|.
name|annotations
operator|.
name|SlingAnnotationsTestRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|junit
operator|.
name|annotations
operator|.
name|TestReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|QueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|solr
operator|.
name|managed
operator|.
name|ManagedSolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|ldpath
operator|.
name|LDPathException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|ldpath
operator|.
name|SemanticIndexManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|SearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|solr
operator|.
name|SolrSearch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|store
operator|.
name|StoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|store
operator|.
name|solr
operator|.
name|SolrStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|store
operator|.
name|solr
operator|.
name|manager
operator|.
name|SolrCoreManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|SlingAnnotationsTestRunner
operator|.
name|class
argument_list|)
specifier|public
class|class
name|SearchTest
block|{
comment|/* SolrQueryUtil.java: 	String extractQueryTermFromSolrQuery(SolrParams solrQuery) 	SolrQuery prepareFacetedSolrQuery(String queryTerm,List<String> allAvailableFacetNames,Map<String,List<Object>> constraints) 	SolrQuery prepareDefaultSolrQuery(SolrServer solrServer, String queryTerm) 	SolrQuery prepareDefaultSolrQuery(String queryTerm, List<String> allAvailableFacetNames) 	List<String> getFacetNames(SolrServer solrServer) */
annotation|@
name|TestReference
specifier|private
name|SolrSearch
name|solrSearch
decl_stmt|;
annotation|@
name|TestReference
specifier|private
name|SolrStore
name|solrStore
decl_stmt|;
annotation|@
name|TestReference
specifier|private
name|SemanticIndexManager
name|semanticIndexManager
decl_stmt|;
annotation|@
name|TestReference
specifier|private
name|BundleContext
name|bundleContext
decl_stmt|;
annotation|@
name|TestReference
specifier|private
name|ManagedSolrServer
name|managedSolrServer
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
block|{
if|if
condition|(
name|semanticIndexManager
operator|.
name|isManagedProgram
argument_list|(
name|TestVocabulary
operator|.
name|programName
argument_list|)
condition|)
block|{
name|semanticIndexManager
operator|.
name|deleteProgram
argument_list|(
name|TestVocabulary
operator|.
name|programName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|SolrCoreManager
operator|.
name|getInstance
argument_list|(
name|bundleContext
argument_list|,
name|managedSolrServer
argument_list|)
operator|.
name|isManagedSolrCore
argument_list|(
name|TestVocabulary
operator|.
name|programName
argument_list|)
condition|)
block|{
name|SolrCoreManager
operator|.
name|getInstance
argument_list|(
name|bundleContext
argument_list|,
name|managedSolrServer
argument_list|)
operator|.
name|deleteSolrCore
argument_list|(
name|TestVocabulary
operator|.
name|programName
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSearch
parameter_list|()
throws|throws
name|StoreException
throws|,
name|SearchException
throws|,
name|SolrServerException
throws|,
name|IOException
block|{
name|SolrServer
name|solrServer
init|=
name|SolrCoreManager
operator|.
name|getInstance
argument_list|(
name|bundleContext
argument_list|,
name|managedSolrServer
argument_list|)
operator|.
name|getServer
argument_list|()
decl_stmt|;
name|TestUtils
operator|.
name|submitDocumentToSolr
argument_list|(
name|solrServer
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QueryResponse
name|qr
init|=
name|solrSearch
operator|.
name|search
argument_list|(
name|TestVocabulary
operator|.
name|queryTerm
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|qr
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|TestUtils
operator|.
name|deleteDocument
argument_list|(
name|solrServer
argument_list|,
name|solrStore
operator|.
name|getEnhancementGraph
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSearchWithLD
parameter_list|()
throws|throws
name|SearchException
throws|,
name|LDPathException
throws|,
name|StoreException
throws|,
name|SolrServerException
throws|,
name|IOException
block|{
name|semanticIndexManager
operator|.
name|submitProgram
argument_list|(
name|TestVocabulary
operator|.
name|programName
argument_list|,
name|TestVocabulary
operator|.
name|ldPathProgram
argument_list|)
expr_stmt|;
name|QueryResponse
name|qr
init|=
name|solrSearch
operator|.
name|search
argument_list|(
name|TestVocabulary
operator|.
name|queryTerm
argument_list|,
name|TestVocabulary
operator|.
name|programName
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|qr
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|SolrServer
name|solrServer
init|=
name|SolrCoreManager
operator|.
name|getInstance
argument_list|(
name|bundleContext
argument_list|,
name|managedSolrServer
argument_list|)
operator|.
name|getServer
argument_list|(
name|TestVocabulary
operator|.
name|programName
argument_list|)
decl_stmt|;
name|TestUtils
operator|.
name|submitDocumentToSolr
argument_list|(
name|solrServer
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|qr
operator|=
name|solrSearch
operator|.
name|search
argument_list|(
name|TestVocabulary
operator|.
name|queryTerm
argument_list|,
name|TestVocabulary
operator|.
name|programName
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|qr
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|TestUtils
operator|.
name|deleteDocument
argument_list|(
name|solrServer
argument_list|,
name|solrStore
operator|.
name|getEnhancementGraph
argument_list|()
argument_list|)
expr_stmt|;
name|semanticIndexManager
operator|.
name|deleteProgram
argument_list|(
name|TestVocabulary
operator|.
name|programName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSearchWithSolrParams
parameter_list|()
throws|throws
name|StoreException
throws|,
name|SolrServerException
throws|,
name|IOException
throws|,
name|SearchException
block|{
name|SolrServer
name|solrServer
init|=
name|SolrCoreManager
operator|.
name|getInstance
argument_list|(
name|bundleContext
argument_list|,
name|managedSolrServer
argument_list|)
operator|.
name|getServer
argument_list|()
decl_stmt|;
name|TestUtils
operator|.
name|submitDocumentToSolr
argument_list|(
name|solrServer
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QueryResponse
name|qr
init|=
name|solrSearch
operator|.
name|search
argument_list|(
name|TestVocabulary
operator|.
name|solrQuery
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|qr
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|TestUtils
operator|.
name|deleteDocument
argument_list|(
name|solrServer
argument_list|,
name|solrStore
operator|.
name|getEnhancementGraph
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSearchWithSolrParamsLD
parameter_list|()
throws|throws
name|LDPathException
throws|,
name|SearchException
throws|,
name|StoreException
throws|,
name|SolrServerException
throws|,
name|IOException
block|{
name|semanticIndexManager
operator|.
name|submitProgram
argument_list|(
name|TestVocabulary
operator|.
name|programName
argument_list|,
name|TestVocabulary
operator|.
name|ldPathProgram
argument_list|)
expr_stmt|;
name|QueryResponse
name|qr
init|=
name|solrSearch
operator|.
name|search
argument_list|(
name|TestVocabulary
operator|.
name|queryTerm
argument_list|,
name|TestVocabulary
operator|.
name|programName
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|qr
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|SolrServer
name|solrServer
init|=
name|SolrCoreManager
operator|.
name|getInstance
argument_list|(
name|bundleContext
argument_list|,
name|managedSolrServer
argument_list|)
operator|.
name|getServer
argument_list|(
name|TestVocabulary
operator|.
name|programName
argument_list|)
decl_stmt|;
name|TestUtils
operator|.
name|submitDocumentToSolr
argument_list|(
name|solrServer
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|qr
operator|=
name|solrSearch
operator|.
name|search
argument_list|(
name|TestVocabulary
operator|.
name|solrQuery
argument_list|,
name|TestVocabulary
operator|.
name|programName
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|qr
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|TestUtils
operator|.
name|deleteDocument
argument_list|(
name|solrServer
argument_list|,
name|solrStore
operator|.
name|getEnhancementGraph
argument_list|()
argument_list|)
expr_stmt|;
name|semanticIndexManager
operator|.
name|deleteProgram
argument_list|(
name|TestVocabulary
operator|.
name|programName
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

