begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|test
operator|.
name|it
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|store
operator|.
name|solr
operator|.
name|util
operator|.
name|ContentItemIDOrganizer
operator|.
name|CONTENT_ITEM_URI_PREFIX
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLEncoder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|ClientProtocolException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpDelete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sling
operator|.
name|junit
operator|.
name|annotations
operator|.
name|TestReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|testing
operator|.
name|http
operator|.
name|RequestExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|testing
operator|.
name|stanbol
operator|.
name|StanbolTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|store
operator|.
name|StoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|store
operator|.
name|solr
operator|.
name|SolrContentItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|store
operator|.
name|solr
operator|.
name|SolrStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|test
operator|.
name|TestVocabulary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ContentItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|ContentItemHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|StoreResourceTest
extends|extends
name|StanbolTestBase
block|{
annotation|@
name|TestReference
name|SolrStore
name|solrStore
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testGetContent
parameter_list|()
block|{
comment|////		@Path("/content/{uri:.+}")
comment|//
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDownloadContentItem
parameter_list|()
block|{
comment|//metadata,content
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetContentItemMetaData
parameter_list|()
block|{ 		 	}
comment|//	getRawContent
annotation|@
name|Test
specifier|public
name|void
name|testCreateContentItemWithId
parameter_list|()
block|{ 		 	}
annotation|@
name|Test
specifier|public
name|void
name|testCreateContentItemFromForm
parameter_list|()
throws|throws
name|ClientProtocolException
throws|,
name|UnsupportedEncodingException
throws|,
name|IOException
throws|,
name|StoreException
block|{
name|RequestExecutor
name|test
init|=
name|executor
operator|.
name|execute
argument_list|(
name|builder
operator|.
name|buildPostRequest
argument_list|(
literal|"/contenthub/store"
argument_list|)
operator|.
name|withFormContent
argument_list|(
literal|"content"
argument_list|,
name|TestVocabulary
operator|.
name|content
argument_list|,
literal|"constraints"
argument_list|,
name|URLEncoder
operator|.
name|encode
argument_list|(
literal|"{author:meric}"
argument_list|,
name|Constants
operator|.
name|DEFAULT_ENCODING
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|test
operator|.
name|assertStatus
argument_list|(
literal|201
argument_list|)
expr_stmt|;
comment|// test.assertContentType("ContentItemResource");
comment|// test.assertContentContains("I live in Paris.");
name|solrStore
operator|.
name|deleteById
argument_list|(
name|ContentItemHelper
operator|.
name|makeDefaultUri
argument_list|(
name|CONTENT_ITEM_URI_PREFIX
argument_list|,
name|TestVocabulary
operator|.
name|contentByte
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUpdateContentItemFromForm
parameter_list|()
throws|throws
name|StoreException
throws|,
name|ClientProtocolException
throws|,
name|UnsupportedEncodingException
throws|,
name|IOException
block|{
name|String
name|initialID
init|=
literal|"updatedItemid01"
decl_stmt|;
name|String
name|initialContent
init|=
literal|"TestContent for update"
decl_stmt|;
name|SolrContentItem
name|sci
init|=
name|solrStore
operator|.
name|create
argument_list|(
name|initialContent
operator|.
name|getBytes
argument_list|()
argument_list|,
name|initialID
argument_list|,
name|TestVocabulary
operator|.
name|title
argument_list|,
name|TestVocabulary
operator|.
name|contentType
argument_list|,
name|TestVocabulary
operator|.
name|constraints
argument_list|)
decl_stmt|;
name|solrStore
operator|.
name|put
argument_list|(
name|sci
argument_list|)
expr_stmt|;
name|RequestExecutor
name|test
init|=
name|executor
operator|.
name|execute
argument_list|(
name|builder
operator|.
name|buildPostRequest
argument_list|(
literal|"/contenthub/update"
argument_list|)
operator|.
name|withFormContent
argument_list|(
literal|"uri"
argument_list|,
name|initialID
argument_list|,
literal|"content"
argument_list|,
name|TestVocabulary
operator|.
name|content
argument_list|,
literal|"title"
argument_list|,
name|TestVocabulary
operator|.
name|title
argument_list|)
argument_list|)
decl_stmt|;
name|test
operator|.
name|assertStatus
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteContentItem
parameter_list|()
throws|throws
name|StoreException
throws|,
name|ClientProtocolException
throws|,
name|UnsupportedEncodingException
throws|,
name|IOException
block|{
name|SolrContentItem
name|sci
init|=
name|solrStore
operator|.
name|create
argument_list|(
name|TestVocabulary
operator|.
name|contentByte
argument_list|,
name|TestVocabulary
operator|.
name|id
argument_list|,
name|TestVocabulary
operator|.
name|title
argument_list|,
name|TestVocabulary
operator|.
name|contentType
argument_list|,
name|TestVocabulary
operator|.
name|constraints
argument_list|)
decl_stmt|;
name|solrStore
operator|.
name|put
argument_list|(
name|sci
argument_list|)
expr_stmt|;
name|String
name|path
init|=
name|builder
operator|.
name|buildUrl
argument_list|(
literal|"/contenthub/"
operator|+
name|TestVocabulary
operator|.
name|id
argument_list|)
decl_stmt|;
name|RequestExecutor
name|test
init|=
name|executor
operator|.
name|execute
argument_list|(
name|builder
operator|.
name|buildOtherRequest
argument_list|(
operator|new
name|HttpDelete
argument_list|(
name|path
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|test
operator|.
name|assertStatus
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
comment|//		ContentItem res = solrStore.get(TestVocabulary.id);
block|}
block|}
end_class

end_unit

