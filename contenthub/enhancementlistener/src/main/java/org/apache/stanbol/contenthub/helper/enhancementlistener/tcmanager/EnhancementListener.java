begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|helper
operator|.
name|enhancementlistener
operator|.
name|tcmanager
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Semaphore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|access
operator|.
name|TcManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|event
operator|.
name|AddEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|event
operator|.
name|FilterTriple
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|event
operator|.
name|GraphEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|event
operator|.
name|GraphListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|impl
operator|.
name|SimpleMGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|sparql
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|sparql
operator|.
name|QueryParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|sparql
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|sparql
operator|.
name|SolutionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|sparql
operator|.
name|query
operator|.
name|SelectQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|core
operator|.
name|utils
operator|.
name|EntityHubClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|core
operator|.
name|utils
operator|.
name|indexing
operator|.
name|EnhancementLARQ
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|core
operator|.
name|utils
operator|.
name|sparql
operator|.
name|QueryGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|enhancements
operator|.
name|vocabulary
operator|.
name|EnhancementGraphVocabulary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  *   * @author anil.sinaci  *   */
end_comment

begin_class
specifier|public
class|class
name|EnhancementListener
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|EnhancementListener
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|GraphListener
name|listener
decl_stmt|;
specifier|private
name|MGraph
name|mGraph
decl_stmt|;
specifier|private
name|boolean
name|active
init|=
literal|false
decl_stmt|;
specifier|public
name|EnhancementListener
parameter_list|(
name|TcManager
name|tcManager
parameter_list|,
name|String
name|entityHubURI
parameter_list|)
block|{
name|UriRef
name|graphRef
init|=
operator|new
name|UriRef
argument_list|(
name|EnhancementGraphVocabulary
operator|.
name|ENHANCEMENTS_GRAPH_URI
argument_list|)
decl_stmt|;
name|boolean
name|graphExists
init|=
name|tcManager
operator|.
name|listMGraphs
argument_list|()
operator|.
name|contains
argument_list|(
name|graphRef
argument_list|)
decl_stmt|;
comment|// FIXME To allow this component to work for non-existing graphs, the graph is created here.
comment|// It is better to create this graph in somewhere else
if|if
condition|(
operator|!
name|graphExists
condition|)
block|{
name|tcManager
operator|.
name|createMGraph
argument_list|(
name|graphRef
argument_list|)
expr_stmt|;
block|}
name|EntityHubClient
name|entityHubClient
init|=
name|EntityHubClient
operator|.
name|getInstance
argument_list|(
name|entityHubURI
argument_list|)
decl_stmt|;
name|this
operator|.
name|mGraph
operator|=
name|tcManager
operator|.
name|getMGraph
argument_list|(
name|graphRef
argument_list|)
expr_stmt|;
name|EnhancementLARQ
operator|.
name|getInstance
argument_list|()
operator|.
name|createIndex
argument_list|(
name|this
operator|.
name|mGraph
argument_list|)
expr_stmt|;
name|this
operator|.
name|listener
operator|=
operator|new
name|Listener
argument_list|(
name|tcManager
argument_list|,
name|entityHubClient
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|listen
parameter_list|()
block|{
if|if
condition|(
operator|!
name|this
operator|.
name|active
condition|)
block|{
name|this
operator|.
name|mGraph
operator|.
name|addGraphListener
argument_list|(
name|listener
argument_list|,
operator|new
name|FilterTriple
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"Started listening graph {} "
argument_list|,
name|this
operator|.
name|mGraph
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|active
operator|=
literal|true
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|unlisten
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|active
condition|)
block|{
name|this
operator|.
name|mGraph
operator|.
name|removeGraphListener
argument_list|(
name|this
operator|.
name|listener
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"Stopped listening graph {}"
argument_list|,
name|this
operator|.
name|mGraph
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|active
operator|=
literal|false
expr_stmt|;
block|}
block|}
specifier|private
specifier|final
class|class
name|Listener
implements|implements
name|GraphListener
block|{
specifier|private
name|TcManager
name|tcManager
decl_stmt|;
specifier|private
name|EntityHubClient
name|entityHubClient
decl_stmt|;
specifier|private
name|Semaphore
name|sem
init|=
operator|new
name|Semaphore
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|public
name|Listener
parameter_list|(
name|TcManager
name|tcManager
parameter_list|,
name|EntityHubClient
name|entityHubClient
parameter_list|)
block|{
name|this
operator|.
name|tcManager
operator|=
name|tcManager
expr_stmt|;
name|this
operator|.
name|entityHubClient
operator|=
name|entityHubClient
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|graphChanged
parameter_list|(
name|List
argument_list|<
name|GraphEvent
argument_list|>
name|arg0
parameter_list|)
block|{
name|SimpleMGraph
name|newEnhancements
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
for|for
control|(
name|GraphEvent
name|e
range|:
name|arg0
control|)
block|{
if|if
condition|(
name|e
operator|instanceof
name|AddEvent
condition|)
block|{
name|EnhancementLARQ
operator|.
name|getInstance
argument_list|()
operator|.
name|updateIndex
argument_list|(
name|e
operator|.
name|getTriple
argument_list|()
argument_list|)
expr_stmt|;
name|newEnhancements
operator|.
name|add
argument_list|(
name|e
operator|.
name|getTriple
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
try|try
block|{
name|this
operator|.
name|sem
operator|.
name|acquire
argument_list|()
expr_stmt|;
name|SelectQuery
name|query
init|=
operator|(
name|SelectQuery
operator|)
name|QueryParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parse
argument_list|(
name|QueryGenerator
operator|.
name|getExternalPlacesQuery
argument_list|()
argument_list|)
decl_stmt|;
name|ResultSet
name|result
init|=
name|tcManager
operator|.
name|executeSparqlQuery
argument_list|(
name|query
argument_list|,
name|newEnhancements
argument_list|)
decl_stmt|;
while|while
condition|(
name|result
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|SolutionMapping
name|sol
init|=
name|result
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|uri
init|=
name|sol
operator|.
name|get
argument_list|(
literal|"ref"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
name|uri
operator|!=
literal|null
condition|)
block|{
name|uri
operator|=
name|uri
operator|.
name|replaceAll
argument_list|(
literal|"\\<|\\>"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"Found resource {} on graph {}. Trying to submit to entity hub"
argument_list|,
name|newEnhancements
operator|.
name|toString
argument_list|()
argument_list|,
name|uri
argument_list|)
expr_stmt|;
try|try
block|{
name|logger
operator|.
name|debug
argument_list|(
literal|"Enhancement listener is calling entityhubclient.symbollookup with uri: {}"
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entityHubClient
operator|.
name|symbolLookup
argument_list|(
name|uri
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"Added symbol {} to entity hub"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|logger
operator|.
name|debug
argument_list|(
literal|"Error at submitting {} to entity hub at {}"
argument_list|,
name|uri
argument_list|,
name|entityHubClient
operator|.
name|getEntityhubEndpoint
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|error
argument_list|(
literal|"Error from entity hub"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"Found ehancement result without any URIs on graph {}"
argument_list|,
name|newEnhancements
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|error
argument_list|(
literal|"Error at acquiring lock"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
comment|// Should never reach here
name|logger
operator|.
name|error
argument_list|(
literal|"Settlement Query can not be parsed"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// release acquired semaphore
name|this
operator|.
name|sem
operator|.
name|release
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

