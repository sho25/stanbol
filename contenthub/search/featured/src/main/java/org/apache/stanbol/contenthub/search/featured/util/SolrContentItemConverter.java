begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|search
operator|.
name|featured
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|search
operator|.
name|featured
operator|.
name|ResultantDocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|featured
operator|.
name|ResultantDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|store
operator|.
name|vocabulary
operator|.
name|SolrVocabulary
operator|.
name|SolrFieldName
import|;
end_import

begin_class
specifier|public
class|class
name|SolrContentItemConverter
block|{
comment|/**      * This method converts a {@link SolrDocument} into a {@link HTMLContentItem}. Note currently, it ignores      * its metadata produced after enhancement process and stored. Its constraints indexed in Solr are also      * ignored as these items are only shown as a list in HTML interface.      */
specifier|public
specifier|static
name|ResultantDocument
name|solrDocument2solrContentItem
parameter_list|(
name|SolrDocument
name|solrDocument
parameter_list|,
name|String
name|indexName
parameter_list|)
block|{
return|return
name|solrDocument2solrContentItem
argument_list|(
name|solrDocument
argument_list|,
literal|null
argument_list|,
name|indexName
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|ResultantDocument
name|solrDocument2solrContentItem
parameter_list|(
name|SolrDocument
name|solrDocument
parameter_list|,
name|String
name|baseURI
parameter_list|,
name|String
name|indexName
parameter_list|)
block|{
name|String
name|id
init|=
name|getStringValueFromSolrField
argument_list|(
name|solrDocument
argument_list|,
name|SolrFieldName
operator|.
name|ID
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|mimeType
init|=
name|getStringValueFromSolrField
argument_list|(
name|solrDocument
argument_list|,
name|SolrFieldName
operator|.
name|MIMETYPE
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|title
init|=
name|getStringValueFromSolrField
argument_list|(
name|solrDocument
argument_list|,
name|SolrFieldName
operator|.
name|TITLE
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|long
name|enhancementCount
init|=
operator|(
name|Long
operator|)
name|solrDocument
operator|.
name|getFieldValue
argument_list|(
name|SolrFieldName
operator|.
name|ENHANCEMENTCOUNT
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|dereferencableURI
init|=
name|baseURI
operator|!=
literal|null
condition|?
operator|(
name|baseURI
operator|+
literal|"contenthub/"
operator|+
name|indexName
operator|+
literal|"/store/content/"
operator|+
name|id
operator|)
else|:
literal|null
decl_stmt|;
name|title
operator|=
operator|(
name|title
operator|==
literal|null
operator|||
name|title
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|?
name|id
else|:
name|title
operator|)
expr_stmt|;
name|ResultantDocumentImpl
name|resultantDocument
init|=
operator|new
name|ResultantDocumentImpl
argument_list|(
name|id
argument_list|,
name|dereferencableURI
argument_list|,
name|mimeType
argument_list|,
name|enhancementCount
argument_list|,
name|title
argument_list|)
decl_stmt|;
return|return
name|resultantDocument
return|;
block|}
specifier|private
specifier|static
name|String
name|getStringValueFromSolrField
parameter_list|(
name|SolrDocument
name|solrDocument
parameter_list|,
name|String
name|field
parameter_list|)
block|{
name|Object
name|result
init|=
name|solrDocument
operator|.
name|getFieldValue
argument_list|(
name|field
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
return|return
name|result
operator|.
name|toString
argument_list|()
return|;
block|}
return|return
literal|""
return|;
block|}
block|}
end_class

end_unit

