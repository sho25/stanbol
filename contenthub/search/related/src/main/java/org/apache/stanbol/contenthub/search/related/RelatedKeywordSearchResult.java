begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|search
operator|.
name|related
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|NotImplementedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|featured
operator|.
name|DocumentResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|featured
operator|.
name|FacetResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|featured
operator|.
name|SearchResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|related
operator|.
name|RelatedKeyword
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * @author anil.sinaci  *   */
end_comment

begin_class
specifier|public
class|class
name|RelatedKeywordSearchResult
implements|implements
name|SearchResult
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RelatedKeywordSearchResult
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|RelatedKeyword
argument_list|>
argument_list|>
argument_list|>
name|relatedKeywords
decl_stmt|;
specifier|public
name|RelatedKeywordSearchResult
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|RelatedKeyword
argument_list|>
argument_list|>
argument_list|>
name|relatedKeywords
parameter_list|)
block|{
name|this
operator|.
name|relatedKeywords
operator|=
name|relatedKeywords
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|DocumentResult
argument_list|>
name|getDocuments
parameter_list|()
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"RelatedKeywordSearchResult does not contain any ResultantDocument"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|FacetResult
argument_list|>
name|getFacets
parameter_list|()
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"RelatedKeywordSearchResult does not contain any FacetField"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|RelatedKeyword
argument_list|>
argument_list|>
argument_list|>
name|getRelatedKeywords
parameter_list|()
block|{
return|return
name|this
operator|.
name|relatedKeywords
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setDocuments
parameter_list|(
name|List
argument_list|<
name|DocumentResult
argument_list|>
name|resultantDocuments
parameter_list|)
block|{
name|String
name|msg
init|=
literal|"RelatedKeywordSearchResult cannot contain any ResultantDocument"
decl_stmt|;
name|log
operator|.
name|error
argument_list|(
name|msg
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|msg
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setFacets
parameter_list|(
name|List
argument_list|<
name|FacetResult
argument_list|>
name|facets
parameter_list|)
block|{
name|String
name|msg
init|=
literal|"RelatedKeywordSearchResult cannot contain any FacetField"
decl_stmt|;
name|log
operator|.
name|error
argument_list|(
name|msg
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|msg
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setRelatedKeywords
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|RelatedKeyword
argument_list|>
argument_list|>
argument_list|>
name|relatedKeywords
parameter_list|)
block|{
name|this
operator|.
name|relatedKeywords
operator|=
name|relatedKeywords
expr_stmt|;
block|}
block|}
end_class

end_unit

