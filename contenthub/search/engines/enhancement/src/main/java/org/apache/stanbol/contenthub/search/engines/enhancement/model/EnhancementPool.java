begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|search
operator|.
name|engines
operator|.
name|enhancement
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  *   * @author cihan  *   */
end_comment

begin_class
specifier|public
class|class
name|EnhancementPool
block|{
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|EnhancementRepresentation
argument_list|>
name|enhancements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|EnhancementRepresentation
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|EntityRepresentation
argument_list|>
name|entities
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|EntityRepresentation
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|EnhancementRepresentation
name|getEnhancementRepresentation
parameter_list|(
name|String
name|label
parameter_list|,
name|String
name|document
parameter_list|)
block|{
name|String
name|key
init|=
name|label
operator|+
name|document
decl_stmt|;
if|if
condition|(
operator|!
name|enhancements
operator|.
name|containsKey
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|EnhancementRepresentation
name|er
init|=
operator|new
name|EnhancementRepresentation
argument_list|(
name|label
argument_list|,
name|document
argument_list|)
decl_stmt|;
name|enhancements
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|er
argument_list|)
expr_stmt|;
block|}
return|return
name|enhancements
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|EntityRepresentation
name|getEntityRepresentation
parameter_list|(
name|String
name|ref
parameter_list|,
name|String
name|label
parameter_list|,
name|String
name|document
parameter_list|)
block|{
name|String
name|key
init|=
name|ref
operator|+
name|document
decl_stmt|;
name|EnhancementRepresentation
name|er
init|=
name|getEnhancementRepresentation
argument_list|(
name|label
argument_list|,
name|document
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|entities
operator|.
name|containsKey
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|EntityRepresentation
name|etr
init|=
operator|new
name|EntityRepresentation
argument_list|(
name|ref
argument_list|)
decl_stmt|;
name|er
operator|.
name|getExternalResources
argument_list|()
operator|.
name|add
argument_list|(
name|etr
argument_list|)
expr_stmt|;
name|entities
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|etr
argument_list|)
expr_stmt|;
block|}
return|return
name|entities
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Collection
argument_list|<
name|EnhancementRepresentation
argument_list|>
name|getAll
parameter_list|()
block|{
return|return
name|enhancements
operator|.
name|values
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|void
name|clear
parameter_list|()
block|{
name|enhancements
operator|.
name|clear
argument_list|()
expr_stmt|;
name|entities
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

