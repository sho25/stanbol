begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|search
operator|.
name|engines
operator|.
name|enhancement
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|core
operator|.
name|utils
operator|.
name|indexing
operator|.
name|EnhancementLARQ
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|search
operator|.
name|engines
operator|.
name|enhancement
operator|.
name|model
operator|.
name|EnhancementPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|search
operator|.
name|engines
operator|.
name|enhancement
operator|.
name|model
operator|.
name|EnhancementRepresentation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|search
operator|.
name|engines
operator|.
name|enhancement
operator|.
name|model
operator|.
name|EntityRepresentation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|engine
operator|.
name|EngineProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|engine
operator|.
name|SearchEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|engine
operator|.
name|SearchEngineException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|DocumentResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|ExternalResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|Keyword
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|QueryKeyword
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|SearchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|SearchContextFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|QueryExecution
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|QueryExecutionFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|QuerySolution
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|larq
operator|.
name|IndexLARQ
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|query
operator|.
name|larq
operator|.
name|LARQ
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_comment
comment|/**  *   * @author cihan  *   */
end_comment

begin_class
annotation|@
name|Component
annotation|@
name|Service
specifier|public
class|class
name|EnhancementSearchEngine
implements|implements
name|SearchEngine
implements|,
name|EngineProperties
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|EnhancementSearchEngine
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
decl_stmt|;
static|static
block|{
name|properties
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|PROCESSING_ORDER
argument_list|,
name|PROCESSING_DEFAULT
argument_list|)
expr_stmt|;
block|}
name|Model
name|enhancementGraph
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|search
parameter_list|(
name|SearchContext
name|searchContext
parameter_list|)
throws|throws
name|SearchEngineException
block|{
comment|// FIXME: can be done in activator, but DOES ENHANCEMENTGRAPH CHANGES AFTER ACTIVATION?
name|enhancementGraph
operator|=
name|EnhancementLARQ
operator|.
name|getInstance
argument_list|()
operator|.
name|getEnhancementModel
argument_list|()
expr_stmt|;
if|if
condition|(
name|enhancementGraph
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|QueryKeyword
name|qk
range|:
name|searchContext
operator|.
name|getQueryKeyWords
argument_list|()
control|)
block|{
name|searchForKeyword
argument_list|(
name|qk
argument_list|,
name|searchContext
argument_list|)
expr_stmt|;
for|for
control|(
name|Keyword
name|kw
range|:
name|qk
operator|.
name|getRelatedKeywords
argument_list|()
control|)
block|{
name|searchForKeyword
argument_list|(
name|kw
argument_list|,
name|searchContext
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|LOGGER
operator|.
name|info
argument_list|(
literal|"EnhancementGraph could not be obtained, skipped enhancement Search Engine"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|searchForKeyword
parameter_list|(
name|Keyword
name|keyword
parameter_list|,
name|SearchContext
name|context
parameter_list|)
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Started searching for keyword {} "
argument_list|,
name|keyword
operator|.
name|getKeyword
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|query
init|=
name|QueryGenerator
operator|.
name|keywordBasedAnnotationQuery
argument_list|(
name|keyword
operator|.
name|getKeyword
argument_list|()
argument_list|)
decl_stmt|;
name|IndexLARQ
name|index
init|=
name|EnhancementLARQ
operator|.
name|getInstance
argument_list|()
operator|.
name|getIndex
argument_list|()
decl_stmt|;
if|if
condition|(
name|index
operator|!=
literal|null
condition|)
block|{
name|QueryExecution
name|qExec
init|=
name|QueryExecutionFactory
operator|.
name|create
argument_list|(
name|query
argument_list|,
name|enhancementGraph
argument_list|)
decl_stmt|;
name|LARQ
operator|.
name|setDefaultIndex
argument_list|(
name|qExec
operator|.
name|getContext
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|ResultSet
name|result
init|=
name|qExec
operator|.
name|execSelect
argument_list|()
decl_stmt|;
name|processResults
argument_list|(
name|result
argument_list|,
name|keyword
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LOGGER
operator|.
name|info
argument_list|(
literal|"LARQ Index could not be obtained from Enhancement Listener Factory"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|processResults
parameter_list|(
name|ResultSet
name|result
parameter_list|,
name|Keyword
name|keyword
parameter_list|,
name|SearchContext
name|context
parameter_list|)
block|{
name|SearchContextFactory
name|scf
init|=
name|context
operator|.
name|getFactory
argument_list|()
decl_stmt|;
while|while
condition|(
name|result
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|QuerySolution
name|resultBinding
init|=
name|result
operator|.
name|nextSolution
argument_list|()
decl_stmt|;
name|String
name|label
init|=
name|resultBinding
operator|.
name|getLiteral
argument_list|(
literal|"label"
argument_list|)
operator|.
name|getString
argument_list|()
decl_stmt|;
name|double
name|score
init|=
name|resultBinding
operator|.
name|getLiteral
argument_list|(
literal|"score"
argument_list|)
operator|.
name|getDouble
argument_list|()
decl_stmt|;
name|String
name|document
init|=
name|resultBinding
operator|.
name|getResource
argument_list|(
literal|"document"
argument_list|)
operator|.
name|getURI
argument_list|()
decl_stmt|;
name|String
name|type
init|=
name|resultBinding
operator|.
name|getResource
argument_list|(
literal|"type"
argument_list|)
operator|.
name|getURI
argument_list|()
decl_stmt|;
name|String
name|selectionText
init|=
name|resultBinding
operator|.
name|getLiteral
argument_list|(
literal|"text"
argument_list|)
operator|.
name|getString
argument_list|()
decl_stmt|;
name|String
name|ref
init|=
name|resultBinding
operator|.
name|getResource
argument_list|(
literal|"ref"
argument_list|)
operator|.
name|getURI
argument_list|()
decl_stmt|;
name|double
name|refScore
init|=
name|resultBinding
operator|.
name|getLiteral
argument_list|(
literal|"refscore"
argument_list|)
operator|.
name|getDouble
argument_list|()
decl_stmt|;
name|EnhancementRepresentation
name|er
init|=
name|EnhancementPool
operator|.
name|getEnhancementRepresentation
argument_list|(
name|label
argument_list|,
name|document
argument_list|)
decl_stmt|;
name|EntityRepresentation
name|etr
init|=
name|EnhancementPool
operator|.
name|getEntityRepresentation
argument_list|(
name|ref
argument_list|,
name|label
argument_list|,
name|document
argument_list|)
decl_stmt|;
name|er
operator|.
name|setScore
argument_list|(
operator|(
name|score
operator|>
literal|10
condition|?
literal|1
else|:
name|score
operator|/
literal|10.0
operator|)
argument_list|)
expr_stmt|;
name|er
operator|.
name|setSelectionText
argument_list|(
name|selectionText
argument_list|)
expr_stmt|;
name|etr
operator|.
name|setScore
argument_list|(
operator|(
name|refScore
operator|>
literal|10
condition|?
literal|1
else|:
name|refScore
operator|/
literal|10.0
operator|)
argument_list|)
expr_stmt|;
name|etr
operator|.
name|getTypes
argument_list|()
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|EnhancementRepresentation
name|er
range|:
name|EnhancementPool
operator|.
name|getAll
argument_list|()
control|)
block|{
name|DocumentResource
name|dr
init|=
name|scf
operator|.
name|createDocumentResource
argument_list|(
name|er
operator|.
name|getDocument
argument_list|()
argument_list|,
literal|1.0
argument_list|,
name|er
operator|.
name|getScore
argument_list|()
argument_list|,
name|keyword
argument_list|,
name|er
operator|.
name|getSelectionText
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|EntityRepresentation
name|etr
range|:
name|er
operator|.
name|getExternalResources
argument_list|()
control|)
block|{
name|ExternalResource
name|exr
init|=
name|scf
operator|.
name|createExternalResource
argument_list|(
name|etr
operator|.
name|getRef
argument_list|()
argument_list|,
literal|1.0
argument_list|,
name|etr
operator|.
name|getScore
argument_list|()
argument_list|,
name|dr
operator|.
name|getRelatedKeywords
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|type
range|:
name|etr
operator|.
name|getTypes
argument_list|()
control|)
block|{
name|exr
operator|.
name|addType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|exr
operator|.
name|addRelatedDocument
argument_list|(
name|dr
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|EnhancementPool
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getEngineProperties
parameter_list|()
block|{
return|return
name|properties
return|;
block|}
block|}
end_class

end_unit

