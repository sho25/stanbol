begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|search
operator|.
name|engines
operator|.
name|solr
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|util
operator|.
name|ClientUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  *   * @author anil.pacaci  *   */
end_comment

begin_class
specifier|public
class|class
name|SolrSearchEngineHelper
block|{
specifier|public
specifier|static
specifier|final
name|String
name|CONTENT_FIELD
init|=
literal|"content_t"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ID_FIELD
init|=
literal|"id"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SCORE_FIELD
init|=
literal|"score"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SolrSearchEngineHelper
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|and
init|=
literal|" AND "
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|queryDelimiter
init|=
literal|":"
decl_stmt|;
specifier|public
specifier|static
name|SolrQuery
name|keywordQueryWithFacets
parameter_list|(
name|String
name|keyword
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Object
argument_list|>
argument_list|>
name|constraints
parameter_list|)
block|{
name|SolrQuery
name|query
init|=
operator|new
name|SolrQuery
argument_list|()
decl_stmt|;
name|String
name|queryString
init|=
name|keyword
decl_stmt|;
if|if
condition|(
name|constraints
operator|!=
literal|null
condition|)
block|{
try|try
block|{
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Object
argument_list|>
argument_list|>
name|entry
range|:
name|constraints
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|fieldName
init|=
name|ClientUtils
operator|.
name|escapeQueryChars
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Object
name|value
range|:
name|entry
operator|.
name|getValue
argument_list|()
control|)
block|{
name|queryString
operator|=
name|queryString
operator|+
name|and
operator|+
name|fieldName
operator|+
name|queryDelimiter
operator|+
name|ClientUtils
operator|.
name|escapeQueryChars
argument_list|(
operator|(
name|String
operator|)
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"Facet constraints could not be added to Query"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
name|query
operator|.
name|setQuery
argument_list|(
name|queryString
argument_list|)
expr_stmt|;
name|query
operator|.
name|setFields
argument_list|(
literal|"*"
argument_list|,
literal|"score"
argument_list|)
expr_stmt|;
return|return
name|query
return|;
block|}
specifier|private
name|SolrSearchEngineHelper
parameter_list|()
block|{}
block|}
end_class

end_unit

