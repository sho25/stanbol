begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|search
operator|.
name|solr
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|QueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|SolrParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|solr
operator|.
name|managed
operator|.
name|ManagedSolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|search
operator|.
name|solr
operator|.
name|util
operator|.
name|SolrQueryUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|SearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|solr
operator|.
name|SolrSearch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|store
operator|.
name|StoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|store
operator|.
name|solr
operator|.
name|manager
operator|.
name|SolrCoreManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
annotation|@
name|Component
annotation|@
name|Service
specifier|public
class|class
name|SolrSearchImpl
implements|implements
name|SolrSearch
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SolrSearchImpl
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|ManagedSolrServer
name|managedSolrServer
decl_stmt|;
specifier|private
name|BundleContext
name|bundleContext
decl_stmt|;
annotation|@
name|Activate
specifier|public
name|void
name|activate
parameter_list|(
name|ComponentContext
name|context
parameter_list|)
block|{
name|this
operator|.
name|bundleContext
operator|=
name|context
operator|.
name|getBundleContext
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|QueryResponse
name|search
parameter_list|(
name|String
name|queryTerm
parameter_list|)
throws|throws
name|SearchException
block|{
name|SolrQuery
name|solrQuery
init|=
literal|null
decl_stmt|;
name|SolrServer
name|solrServer
init|=
literal|null
decl_stmt|;
try|try
block|{
name|solrServer
operator|=
name|SolrCoreManager
operator|.
name|getInstance
argument_list|(
name|bundleContext
argument_list|,
name|managedSolrServer
argument_list|)
operator|.
name|getServer
argument_list|()
expr_stmt|;
name|solrQuery
operator|=
name|SolrQueryUtil
operator|.
name|prepareDefaultSolrQuery
argument_list|(
name|solrServer
argument_list|,
name|queryTerm
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StoreException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SearchException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|SolrServerException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SearchException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SearchException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
name|executeSolrQuery
argument_list|(
name|solrServer
argument_list|,
name|solrQuery
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|QueryResponse
name|search
parameter_list|(
name|String
name|queryTerm
parameter_list|,
name|String
name|ldProgramName
parameter_list|)
throws|throws
name|SearchException
block|{
comment|// By default solr query, we perform a faceted search when a keyword is supplied. To customize the search
comment|// please use the method which accepts SolrParams/SolrQuery
name|SolrQuery
name|solrQuery
init|=
literal|null
decl_stmt|;
name|SolrServer
name|solrServer
init|=
literal|null
decl_stmt|;
try|try
block|{
name|solrServer
operator|=
name|SolrCoreManager
operator|.
name|getInstance
argument_list|(
name|bundleContext
argument_list|,
name|managedSolrServer
argument_list|)
operator|.
name|getServer
argument_list|(
name|ldProgramName
argument_list|)
expr_stmt|;
name|solrQuery
operator|=
name|SolrQueryUtil
operator|.
name|prepareDefaultSolrQuery
argument_list|(
name|solrServer
argument_list|,
name|queryTerm
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StoreException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SearchException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|SolrServerException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SearchException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SearchException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
name|executeSolrQuery
argument_list|(
name|solrServer
argument_list|,
name|solrQuery
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|QueryResponse
name|search
parameter_list|(
name|SolrParams
name|solrQuery
parameter_list|)
throws|throws
name|SearchException
block|{
name|SolrServer
name|solrServer
init|=
literal|null
decl_stmt|;
try|try
block|{
name|solrServer
operator|=
name|SolrCoreManager
operator|.
name|getInstance
argument_list|(
name|bundleContext
argument_list|,
name|managedSolrServer
argument_list|)
operator|.
name|getServer
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StoreException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SearchException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|executeSolrQuery
argument_list|(
name|solrServer
argument_list|,
name|solrQuery
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|QueryResponse
name|search
parameter_list|(
name|SolrParams
name|solrQuery
parameter_list|,
name|String
name|ldProgramName
parameter_list|)
throws|throws
name|SearchException
block|{
name|SolrServer
name|solrServer
init|=
literal|null
decl_stmt|;
try|try
block|{
name|solrServer
operator|=
name|SolrCoreManager
operator|.
name|getInstance
argument_list|(
name|bundleContext
argument_list|,
name|managedSolrServer
argument_list|)
operator|.
name|getServer
argument_list|(
name|ldProgramName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StoreException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SearchException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|executeSolrQuery
argument_list|(
name|solrServer
argument_list|,
name|solrQuery
argument_list|)
return|;
block|}
specifier|private
name|QueryResponse
name|executeSolrQuery
parameter_list|(
name|SolrServer
name|solrServer
parameter_list|,
name|SolrParams
name|solrQuery
parameter_list|)
throws|throws
name|SearchException
block|{
try|try
block|{
return|return
name|solrServer
operator|.
name|query
argument_list|(
name|solrQuery
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|SolrServerException
name|e
parameter_list|)
block|{
name|String
name|msg
init|=
literal|"Failed to execute solr query"
decl_stmt|;
name|log
operator|.
name|error
argument_list|(
name|msg
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|SearchException
argument_list|(
name|msg
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

