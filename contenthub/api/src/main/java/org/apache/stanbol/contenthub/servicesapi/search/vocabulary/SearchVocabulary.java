begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|vocabulary
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|engine
operator|.
name|SearchEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|ClassResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|DocumentResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|ExternalResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|IndividualResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|Keyword
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|QueryKeyword
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|contenthub
operator|.
name|servicesapi
operator|.
name|search
operator|.
name|execution
operator|.
name|SearchContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|graph
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|ResourceFactory
import|;
end_import

begin_comment
comment|/**  * RDF Vocabulary for Apache Stanbol search component. Inspired by com.hp.hpl.jena.vocabulary.RDF class  * {@link SearchContext} is implemented as a Jena graph. Any information of the search context is kept as a  * triple inside the context graph. Accessing any information of the context (i.e. search results) is actually  * executing a filter on the Jena graph, which is the context itself.  *   * @author cihancimen  *   */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|SearchVocabulary
block|{
specifier|private
specifier|static
specifier|final
name|String
name|URI
init|=
literal|"http://stanbol.apache.org/search/"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|getUri
parameter_list|()
block|{
return|return
name|URI
return|;
block|}
specifier|private
specifier|static
name|Resource
name|resource
parameter_list|(
name|String
name|local
parameter_list|)
block|{
return|return
name|ResourceFactory
operator|.
name|createResource
argument_list|(
name|URI
operator|+
name|local
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Property
name|property
parameter_list|(
name|String
name|local
parameter_list|)
block|{
return|return
name|ResourceFactory
operator|.
name|createProperty
argument_list|(
name|URI
argument_list|,
name|local
argument_list|)
return|;
block|}
comment|/**      * Represents a keyword directly entered in query string      */
specifier|public
specifier|static
specifier|final
name|Resource
name|QUERY_KEYWORD
init|=
name|resource
argument_list|(
literal|"queryKeyword"
argument_list|)
decl_stmt|;
comment|/**      * Represents a {@link Keyword} that is related to a {@link QueryKeyword}. Generally found by a      * {@link SearchEngine}.      */
specifier|public
specifier|static
specifier|final
name|Resource
name|KEYWORD
init|=
name|resource
argument_list|(
literal|"keyword"
argument_list|)
decl_stmt|;
comment|/**      * Represents an OWL Class found by a {@link SearchEngine}.      */
specifier|public
specifier|static
specifier|final
name|Resource
name|CLASS_RESOURCE
init|=
name|resource
argument_list|(
literal|"classResource"
argument_list|)
decl_stmt|;
comment|/**      * Represents an OWL Individual found by a search engine.      */
specifier|public
specifier|static
specifier|final
name|Resource
name|INDIVIDUAL_RESOURCE
init|=
name|resource
argument_list|(
literal|"individualResource"
argument_list|)
decl_stmt|;
comment|/**      * Represents a Document in Enhancer Store, found by a {@link SearchEngine}.      */
specifier|public
specifier|static
specifier|final
name|Resource
name|DOCUMENT_RESOURCE
init|=
name|resource
argument_list|(
literal|"documentResource"
argument_list|)
decl_stmt|;
comment|/**      * Represents an external entity found by a {@link SearchEngine}      */
specifier|public
specifier|static
specifier|final
name|Resource
name|EXTERNAL_RESOURCE
init|=
name|resource
argument_list|(
literal|"externalResource"
argument_list|)
decl_stmt|;
comment|/**      * Represents the score of a resource.      */
specifier|public
specifier|static
specifier|final
name|Property
name|SCORE
init|=
name|property
argument_list|(
literal|"score"
argument_list|)
decl_stmt|;
comment|/**      * Represent the weight of a resource. Weight is used to update the score of the resource.      */
specifier|public
specifier|static
specifier|final
name|Property
name|WEIGHT
init|=
name|property
argument_list|(
literal|"weight"
argument_list|)
decl_stmt|;
comment|/**      * Represents the original string of a {@link Keyword}.      */
specifier|public
specifier|static
specifier|final
name|Property
name|KEYWORD_STRING
init|=
name|property
argument_list|(
literal|"keywordString"
argument_list|)
decl_stmt|;
comment|/**      * Represents relationship between a resource and a {@link Keyword}      */
specifier|public
specifier|static
specifier|final
name|Property
name|RELATED_KEYWORD
init|=
name|property
argument_list|(
literal|"relatedKeyword"
argument_list|)
decl_stmt|;
comment|/**      * Represents relationship between a resource and a {@link QueryKeyword}      */
specifier|public
specifier|static
specifier|final
name|Property
name|RELATED_QUERY_KEYWORD
init|=
name|property
argument_list|(
literal|"relatedQueryKeyword"
argument_list|)
decl_stmt|;
comment|/**      * Represents relationship between a resource and a {@link ClassResource}.      */
specifier|public
specifier|static
specifier|final
name|Property
name|RELATED_CLASS
init|=
name|property
argument_list|(
literal|"relatedClass"
argument_list|)
decl_stmt|;
comment|/**      * Represents relationship between a resource and a {@link IndividualResource}.      */
specifier|public
specifier|static
specifier|final
name|Property
name|RELATED_INDIVIDUAL
init|=
name|property
argument_list|(
literal|"relatedIndividual"
argument_list|)
decl_stmt|;
comment|/**      * Represents the URI of a {@link ClassResource}.      */
specifier|public
specifier|static
specifier|final
name|Property
name|CLASS_URI
init|=
name|property
argument_list|(
literal|"classURI"
argument_list|)
decl_stmt|;
comment|/**      * Represents the URI of an {@link IndividualResource}.      */
specifier|public
specifier|static
specifier|final
name|Property
name|INDIVIDUAL_URI
init|=
name|property
argument_list|(
literal|"individualURI"
argument_list|)
decl_stmt|;
comment|/**      * Represents the URI of an {@link ExternalResource}.      */
specifier|public
specifier|static
specifier|final
name|Property
name|DEREFENCEABLE_URI
init|=
name|property
argument_list|(
literal|"dereferenceableURI"
argument_list|)
decl_stmt|;
comment|/**      * Represents the special property which is used by Lucene while creating the index. At the beginning of a      * search operation, user ontology is processed to add this special property to each class and individual      * resource by using their local names.      */
specifier|public
specifier|static
specifier|final
name|Property
name|HAS_LOCAL_NAME
init|=
name|property
argument_list|(
literal|"hasLocalName"
argument_list|)
decl_stmt|;
comment|/**      * Represents relationship between a resource and a {@link DocumentResource}.      */
specifier|public
specifier|static
specifier|final
name|Property
name|RELATED_DOCUMENT
init|=
name|property
argument_list|(
literal|"relatedDocument"
argument_list|)
decl_stmt|;
comment|/**      * Represents the text of a {@link DocumentResource}.      */
specifier|public
specifier|static
specifier|final
name|Property
name|SELECTION_TEXT
init|=
name|property
argument_list|(
literal|"selectionText"
argument_list|)
decl_stmt|;
comment|/**      * Represents relationship between an {@link ExternalResource} and the entity which is externally      * referenced.      */
specifier|public
specifier|static
specifier|final
name|Property
name|EXTERNAL_ENTITY
init|=
name|property
argument_list|(
literal|"externalEntity"
argument_list|)
decl_stmt|;
comment|/**      * Represents the path of a {@link DocumentResource}. This is the path which specifically identifies the      * content item inside the content reposiroy.      */
specifier|public
specifier|static
specifier|final
name|Property
name|CONTENT_REPOSITORY_ITEM
init|=
name|property
argument_list|(
literal|"contentRepositoryItem"
argument_list|)
decl_stmt|;
comment|/**      * Special class to manage the conversion between {@link Resource} and {@link Node}.      *       * @author cihan      *       */
comment|// Nodes
specifier|public
specifier|static
specifier|final
class|class
name|Nodes
block|{
specifier|private
name|Nodes
parameter_list|()
block|{          }
comment|/**          * @see SearchVocabulary#QUERY_KEYWORD          */
specifier|public
specifier|static
specifier|final
name|Node
name|QUERY_KEYWORD
init|=
name|SearchVocabulary
operator|.
name|QUERY_KEYWORD
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#KEYWORD          */
specifier|public
specifier|static
specifier|final
name|Node
name|KEYWORD
init|=
name|SearchVocabulary
operator|.
name|KEYWORD
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#CLASS_RESOURCE          */
specifier|public
specifier|static
specifier|final
name|Node
name|CLASS_RESOURCE
init|=
name|SearchVocabulary
operator|.
name|CLASS_RESOURCE
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#INDIVIDUAL_RESOURCE          */
specifier|public
specifier|static
specifier|final
name|Node
name|INDIVIDUAL_RESOURCE
init|=
name|SearchVocabulary
operator|.
name|INDIVIDUAL_RESOURCE
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#DOCUMENT_RESOURCE          */
specifier|public
specifier|static
specifier|final
name|Node
name|DOCUMENT_RESOURCE
init|=
name|SearchVocabulary
operator|.
name|DOCUMENT_RESOURCE
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#EXTERNAL_RESOURCE          */
specifier|public
specifier|static
specifier|final
name|Node
name|EXTERNAL_RESOURCE
init|=
name|SearchVocabulary
operator|.
name|EXTERNAL_RESOURCE
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#KEYWORD_STRING          */
specifier|public
specifier|static
specifier|final
name|Node
name|KEYWORD_STRING
init|=
name|SearchVocabulary
operator|.
name|KEYWORD_STRING
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#RELATED_CLASS          */
specifier|public
specifier|static
specifier|final
name|Node
name|RELATED_CLASS
init|=
name|SearchVocabulary
operator|.
name|RELATED_CLASS
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#RELATED_INDIVIDUAL          */
specifier|public
specifier|static
specifier|final
name|Node
name|RELATED_INDIVIDUAL
init|=
name|SearchVocabulary
operator|.
name|RELATED_INDIVIDUAL
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#INDIVIDUAL_URI          */
specifier|public
specifier|static
specifier|final
name|Node
name|INDIVIDUAL_URI
init|=
name|SearchVocabulary
operator|.
name|INDIVIDUAL_URI
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#CLASS_URI          */
specifier|public
specifier|static
specifier|final
name|Node
name|CLASS_URI
init|=
name|SearchVocabulary
operator|.
name|CLASS_URI
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#DEREFENCEABLE_URI          */
specifier|public
specifier|static
specifier|final
name|Node
name|DEREFERENCEABLE_URI
init|=
name|SearchVocabulary
operator|.
name|DEREFENCEABLE_URI
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#RELATED_KEYWORD          */
specifier|public
specifier|static
specifier|final
name|Node
name|RELATED_KEYWORD
init|=
name|SearchVocabulary
operator|.
name|RELATED_KEYWORD
operator|.
name|asNode
argument_list|()
decl_stmt|;
comment|/**          * @see SearchVocabulary#RELATED_QUERY_KEYWORD          */
specifier|public
specifier|static
specifier|final
name|Node
name|RELATED_QUERY_KEYWORD
init|=
name|SearchVocabulary
operator|.
name|RELATED_QUERY_KEYWORD
operator|.
name|asNode
argument_list|()
decl_stmt|;
block|}
specifier|private
name|SearchVocabulary
parameter_list|()
block|{      }
block|}
end_class

end_unit

