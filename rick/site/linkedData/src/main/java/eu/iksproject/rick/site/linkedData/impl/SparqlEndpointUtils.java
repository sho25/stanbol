begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|rick
operator|.
name|site
operator|.
name|linkedData
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriBuilder
import|;
end_import

begin_class
specifier|public
class|class
name|SparqlEndpointUtils
block|{
specifier|public
specifier|static
specifier|final
name|String
name|SPARQL_RESULT_JSON
init|=
literal|"application/sparql-results+json"
decl_stmt|;
specifier|public
name|SparqlEndpointUtils
parameter_list|()
block|{
comment|/* Do not create instances of utility classes*/
block|}
comment|/**      * Sends an SPARQL Request to the accessUri. Please note that based on the      * type of the SPARQL query different content are supported by the Site      * @param accessUri the uri of the SPARQL endpoint      * @param contentType the contentType of the returned RDF graph      * @param query the SPARQL Construct query      * @return the results as input stream      * @throws IOException      * @throws MalformedURLException      */
specifier|public
specifier|static
name|InputStream
name|sendSparqlRequest
parameter_list|(
name|String
name|accessUri
parameter_list|,
name|String
name|query
parameter_list|,
name|String
name|contentType
parameter_list|)
throws|throws
name|IOException
throws|,
name|MalformedURLException
block|{
specifier|final
name|URI
name|dereferenceUri
init|=
name|UriBuilder
operator|.
name|fromUri
argument_list|(
name|accessUri
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"query"
argument_list|,
literal|"{query}"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"format"
argument_list|,
literal|"{format}"
argument_list|)
operator|.
name|build
argument_list|(
name|query
operator|.
name|toString
argument_list|()
argument_list|,
name|contentType
argument_list|)
decl_stmt|;
specifier|final
name|URLConnection
name|con
init|=
name|dereferenceUri
operator|.
name|toURL
argument_list|()
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|con
operator|.
name|addRequestProperty
argument_list|(
literal|"Accept"
argument_list|,
name|contentType
argument_list|)
expr_stmt|;
return|return
name|con
operator|.
name|getInputStream
argument_list|()
return|;
block|}
block|}
end_class

end_unit

