begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|rick
operator|.
name|jersey
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|access
operator|.
name|TcManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|serializedform
operator|.
name|Serializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|http
operator|.
name|HttpService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|http
operator|.
name|NamespaceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|spi
operator|.
name|container
operator|.
name|servlet
operator|.
name|ServletContainer
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|rick
operator|.
name|servicesapi
operator|.
name|Rick
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|rick
operator|.
name|servicesapi
operator|.
name|site
operator|.
name|ReferencedSiteManager
import|;
end_import

begin_comment
comment|/**  * Jersey-based RESTful endpoint for the Rick  *  * This OSGi component serves as a bridge between the OSGi context and the  * Servlet context available to JAX-RS resources.  *  * NOTE: Original Code taken from the FISE  * @author Rupert Westenthaler  */
end_comment

begin_class
annotation|@
name|Component
argument_list|(
name|immediate
operator|=
literal|true
argument_list|,
name|metatype
operator|=
literal|true
argument_list|)
specifier|public
class|class
name|JerseyEndpoint
block|{
specifier|private
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|value
operator|=
literal|"/rick"
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|ALIAS_PROPERTY
init|=
literal|"eu.iksproject.rick.jersey.alias"
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|value
operator|=
literal|"/rick/static"
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|STATIC_RESOURCES_URL_ROOT_PROPERTY
init|=
literal|"eu.iksproject.rick.jersey.static.url"
decl_stmt|;
annotation|@
name|Property
argument_list|(
name|value
operator|=
literal|"/rick/META-INF/static"
argument_list|)
specifier|public
specifier|static
specifier|final
name|String
name|STATIC_RESOURCES_CLASSPATH_PROPERTY
init|=
literal|"eu.iksproject.rick.jersey.static.classpath"
decl_stmt|;
comment|//@Property(value = "/META-INF/templates")
comment|//public static final String FREEMARKER_TEMPLATE_CLASSPATH_PROPERTY = "eu.iksproject.rick.jersey.templates.classpath";
annotation|@
name|Reference
name|TcManager
name|tcManager
decl_stmt|;
annotation|@
name|Reference
name|Rick
name|rick
decl_stmt|;
annotation|@
name|Reference
name|ReferencedSiteManager
name|referencedSiteManager
decl_stmt|;
annotation|@
name|Reference
name|HttpService
name|httpService
decl_stmt|;
annotation|@
name|Reference
name|Serializer
name|serializer
decl_stmt|;
specifier|protected
name|ServletContext
name|servletContext
decl_stmt|;
specifier|public
name|Dictionary
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getInitParams
parameter_list|()
block|{
comment|// pass configuration for Jersey resource
comment|// TODO: make the list of enabled JAX-RS resources and providers
comment|// configurable using an OSGi service
name|Dictionary
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|initParams
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|initParams
operator|.
name|put
argument_list|(
literal|"javax.ws.rs.Application"
argument_list|,
name|JerseyEndpointApplication
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// make jersey automatically turn resources into Viewable models and
comment|// hence lookup matching freemarker templates
comment|//initParams.put("com.sun.jersey.config.feature.ImplicitViewables","true");
return|return
name|initParams
return|;
block|}
specifier|protected
name|void
name|activate
parameter_list|(
name|ComponentContext
name|ctx
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
throws|,
name|NamespaceException
block|{
comment|// register the JAX-RS resources as a servlet under configurable alias
name|ServletContainer
name|container
init|=
operator|new
name|ServletContainer
argument_list|()
decl_stmt|;
name|String
name|alias
init|=
operator|(
name|String
operator|)
name|ctx
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|ALIAS_PROPERTY
argument_list|)
decl_stmt|;
name|String
name|staticUrlRoot
init|=
operator|(
name|String
operator|)
name|ctx
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|STATIC_RESOURCES_URL_ROOT_PROPERTY
argument_list|)
decl_stmt|;
name|String
name|staticClasspath
init|=
operator|(
name|String
operator|)
name|ctx
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|STATIC_RESOURCES_CLASSPATH_PROPERTY
argument_list|)
decl_stmt|;
comment|//String freemakerTemplates = (String) ctx.getProperties().get(
comment|//        FREEMARKER_TEMPLATE_CLASSPATH_PROPERTY);
name|log
operator|.
name|info
argument_list|(
literal|"Registering servlets with HTTP service "
operator|+
name|httpService
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ClassLoader
name|classLoader
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setContextClassLoader
argument_list|(
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|httpService
operator|.
name|registerServlet
argument_list|(
name|alias
argument_list|,
name|container
argument_list|,
name|getInitParams
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|httpService
operator|.
name|registerResources
argument_list|(
name|staticUrlRoot
argument_list|,
name|staticClasspath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setContextClassLoader
argument_list|(
name|classLoader
argument_list|)
expr_stmt|;
block|}
comment|// forward the main FISE OSGi components to the servlet context so that
comment|// they can be looked up by the JAX-RS resources
name|servletContext
operator|=
name|container
operator|.
name|getServletContext
argument_list|()
expr_stmt|;
comment|//servletContext.setAttribute(EnhancementJobManager.class.getName(),
comment|//        referencedSiteManager);
name|servletContext
operator|.
name|setAttribute
argument_list|(
name|Rick
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|rick
argument_list|)
expr_stmt|;
name|servletContext
operator|.
name|setAttribute
argument_list|(
name|BundleContext
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|ctx
operator|.
name|getBundleContext
argument_list|()
argument_list|)
expr_stmt|;
name|servletContext
operator|.
name|setAttribute
argument_list|(
name|Serializer
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
name|servletContext
operator|.
name|setAttribute
argument_list|(
name|TcManager
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|tcManager
argument_list|)
expr_stmt|;
name|servletContext
operator|.
name|setAttribute
argument_list|(
name|ReferencedSiteManager
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|referencedSiteManager
argument_list|)
expr_stmt|;
name|servletContext
operator|.
name|setAttribute
argument_list|(
name|STATIC_RESOURCES_URL_ROOT_PROPERTY
argument_list|,
name|staticUrlRoot
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Jersey servlet registered at {}"
argument_list|,
name|alias
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|deactivate
parameter_list|(
name|ComponentContext
name|ctx
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Deactivating jersey bundle"
argument_list|)
expr_stmt|;
name|String
name|alias
init|=
operator|(
name|String
operator|)
name|ctx
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|ALIAS_PROPERTY
argument_list|)
decl_stmt|;
name|httpService
operator|.
name|unregister
argument_list|(
name|alias
argument_list|)
expr_stmt|;
name|servletContext
operator|=
literal|null
expr_stmt|;
block|}
specifier|protected
name|void
name|bindRick
parameter_list|(
name|Rick
name|rick
parameter_list|)
block|{
name|this
operator|.
name|rick
operator|=
name|rick
expr_stmt|;
if|if
condition|(
name|servletContext
operator|!=
literal|null
condition|)
block|{
name|servletContext
operator|.
name|setAttribute
argument_list|(
name|Rick
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|rick
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|unbindRick
parameter_list|(
name|Rick
name|rick
parameter_list|)
block|{
name|this
operator|.
name|rick
operator|=
literal|null
expr_stmt|;
if|if
condition|(
name|servletContext
operator|!=
literal|null
condition|)
block|{
name|servletContext
operator|.
name|removeAttribute
argument_list|(
name|Rick
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|bindReferencedSiteManager
parameter_list|(
name|ReferencedSiteManager
name|referencedSiteManager
parameter_list|)
block|{
name|this
operator|.
name|referencedSiteManager
operator|=
name|referencedSiteManager
expr_stmt|;
if|if
condition|(
name|servletContext
operator|!=
literal|null
condition|)
block|{
name|servletContext
operator|.
name|setAttribute
argument_list|(
name|ReferencedSiteManager
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|referencedSiteManager
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|unbindReferencedSiteManager
parameter_list|(
name|ReferencedSiteManager
name|referencedSiteManager
parameter_list|)
block|{
name|this
operator|.
name|referencedSiteManager
operator|=
literal|null
expr_stmt|;
if|if
condition|(
name|servletContext
operator|!=
literal|null
condition|)
block|{
name|servletContext
operator|.
name|removeAttribute
argument_list|(
name|ReferencedSiteManager
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|bindHttpService
parameter_list|(
name|HttpService
name|httpService
parameter_list|)
block|{
name|this
operator|.
name|httpService
operator|=
name|httpService
expr_stmt|;
block|}
specifier|protected
name|void
name|unbindHttpService
parameter_list|(
name|HttpService
name|httpService
parameter_list|)
block|{
name|this
operator|.
name|httpService
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit

