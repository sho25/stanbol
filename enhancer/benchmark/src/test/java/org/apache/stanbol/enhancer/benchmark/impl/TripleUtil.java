begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements. See the NOTICE file distributed with this  * work for additional information regarding copyright ownership. The ASF  * licenses this file to You under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|benchmark
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|commons
operator|.
name|rdf
operator|.
name|Triple
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|commons
operator|.
name|rdf
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|commons
operator|.
name|rdf
operator|.
name|impl
operator|.
name|utils
operator|.
name|TripleImpl
import|;
end_import

begin_class
specifier|public
class|class
name|TripleUtil
block|{
specifier|static
name|Triple
name|uriTriple
parameter_list|(
name|String
name|subject
parameter_list|,
name|String
name|predicate
parameter_list|,
name|String
name|object
parameter_list|)
block|{
return|return
operator|new
name|TripleImpl
argument_list|(
operator|new
name|IRI
argument_list|(
name|subject
argument_list|)
argument_list|,
operator|new
name|IRI
argument_list|(
name|predicate
argument_list|)
argument_list|,
operator|new
name|IRI
argument_list|(
name|object
argument_list|)
argument_list|)
return|;
block|}
specifier|static
name|Set
argument_list|<
name|IRI
argument_list|>
name|uriRefSet
parameter_list|(
name|String
modifier|...
name|uri
parameter_list|)
block|{
specifier|final
name|Set
argument_list|<
name|IRI
argument_list|>
name|result
init|=
operator|new
name|HashSet
argument_list|<
name|IRI
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|str
range|:
name|uri
control|)
block|{
name|result
operator|.
name|add
argument_list|(
operator|new
name|IRI
argument_list|(
name|str
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

