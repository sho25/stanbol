begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|autotagging
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|autotagging
operator|.
name|jena
operator|.
name|ModelIndexer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|autotagging
operator|.
name|jena
operator|.
name|ModelResampler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|autotagging
operator|.
name|jena
operator|.
name|ResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|ModelFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Resource
import|;
end_import

begin_class
specifier|public
class|class
name|ModelResamplerTest
block|{
specifier|protected
name|Model
name|srcModel
decl_stmt|;
specifier|protected
name|Model
name|targetModel
decl_stmt|;
specifier|protected
name|Resource
index|[]
name|r
decl_stmt|;
specifier|protected
name|Property
name|p
decl_stmt|;
specifier|protected
name|Property
name|score
decl_stmt|;
specifier|protected
name|Resource
name|personClass
decl_stmt|;
specifier|protected
name|Property
name|type
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|makeModels
parameter_list|()
block|{
name|srcModel
operator|=
name|ModelFactory
operator|.
name|createDefaultModel
argument_list|()
expr_stmt|;
name|targetModel
operator|=
name|ModelFactory
operator|.
name|createDefaultModel
argument_list|()
expr_stmt|;
comment|// create properties and resources
name|p
operator|=
name|srcModel
operator|.
name|createProperty
argument_list|(
literal|"urn:p"
argument_list|)
expr_stmt|;
name|score
operator|=
name|srcModel
operator|.
name|createProperty
argument_list|(
name|ModelIndexer
operator|.
name|POPULARITY_SCORE_PROPERTY
argument_list|)
expr_stmt|;
name|type
operator|=
name|srcModel
operator|.
name|createProperty
argument_list|(
literal|"http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
argument_list|)
expr_stmt|;
name|personClass
operator|=
name|srcModel
operator|.
name|createResource
argument_list|(
literal|"http://dbpedia.org/ontology/Person"
argument_list|)
expr_stmt|;
name|r
operator|=
operator|new
name|Resource
index|[
literal|10
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|r
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|r
index|[
name|i
index|]
operator|=
name|srcModel
operator|.
name|createResource
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"urn:%d"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|srcModel
operator|.
name|add
argument_list|(
name|r
index|[
name|i
index|]
argument_list|,
name|type
argument_list|,
name|personClass
argument_list|)
expr_stmt|;
block|}
comment|// connect resources with p
name|srcModel
operator|.
name|add
argument_list|(
name|r
index|[
literal|0
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|srcModel
operator|.
name|add
argument_list|(
name|r
index|[
literal|2
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|srcModel
operator|.
name|add
argument_list|(
name|r
index|[
literal|3
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|srcModel
operator|.
name|add
argument_list|(
name|r
index|[
literal|9
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|srcModel
operator|.
name|add
argument_list|(
name|r
index|[
literal|0
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|srcModel
operator|.
name|add
argument_list|(
name|r
index|[
literal|4
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|srcModel
operator|.
name|add
argument_list|(
name|r
index|[
literal|9
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|srcModel
operator|.
name|add
argument_list|(
name|r
index|[
literal|1
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|5
index|]
argument_list|)
expr_stmt|;
name|srcModel
operator|.
name|add
argument_list|(
name|r
index|[
literal|4
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|5
index|]
argument_list|)
expr_stmt|;
name|srcModel
operator|.
name|add
argument_list|(
name|r
index|[
literal|8
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|4
index|]
argument_list|)
expr_stmt|;
name|srcModel
operator|.
name|add
argument_list|(
name|r
index|[
literal|4
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|8
index|]
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testResampling
parameter_list|()
throws|throws
name|FileNotFoundException
throws|,
name|IOException
block|{
name|ModelResampler
name|sampler
init|=
operator|new
name|ModelResampler
argument_list|()
operator|.
name|withMaxTopResources
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|Iterator
argument_list|<
name|ResourceInfo
argument_list|>
name|samplerIterator
init|=
name|sampler
operator|.
name|samplerIterator
argument_list|(
name|srcModel
argument_list|,
name|targetModel
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|samplerIterator
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|ResourceInfo
name|ri
init|=
name|samplerIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|r
index|[
literal|1
index|]
argument_list|,
name|ri
operator|.
name|resource
argument_list|)
expr_stmt|;
name|double
name|r1Score
init|=
name|ri
operator|.
name|score
operator|.
name|doubleValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1.0
argument_list|,
name|r1Score
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|samplerIterator
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|ri
operator|=
name|samplerIterator
operator|.
name|next
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|r
index|[
literal|2
index|]
argument_list|,
name|ri
operator|.
name|resource
argument_list|)
expr_stmt|;
name|double
name|r2Score
init|=
name|ri
operator|.
name|score
operator|.
name|doubleValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0.86
argument_list|,
name|r2Score
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|samplerIterator
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|targetModel
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|targetModel
operator|.
name|contains
argument_list|(
name|r
index|[
literal|1
index|]
argument_list|,
name|type
argument_list|,
name|personClass
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|targetModel
operator|.
name|contains
argument_list|(
name|r
index|[
literal|1
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|5
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|targetModel
operator|.
name|containsLiteral
argument_list|(
name|r
index|[
literal|1
index|]
argument_list|,
name|score
argument_list|,
name|r1Score
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|targetModel
operator|.
name|contains
argument_list|(
name|r
index|[
literal|2
index|]
argument_list|,
name|type
argument_list|,
name|personClass
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|targetModel
operator|.
name|contains
argument_list|(
name|r
index|[
literal|2
index|]
argument_list|,
name|p
argument_list|,
name|r
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|targetModel
operator|.
name|containsLiteral
argument_list|(
name|r
index|[
literal|2
index|]
argument_list|,
name|score
argument_list|,
name|r2Score
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

