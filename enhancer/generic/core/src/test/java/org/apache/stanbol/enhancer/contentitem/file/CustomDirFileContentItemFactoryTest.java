begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|contentitem
operator|.
name|file
package|;
end_package

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|Blob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ContentItemFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|impl
operator|.
name|StringSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|test
operator|.
name|ContentItemFactoryTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|CustomDirFileContentItemFactoryTest
extends|extends
name|ContentItemFactoryTest
block|{
specifier|private
specifier|static
name|File
name|customDir
decl_stmt|;
specifier|private
specifier|static
name|ContentItemFactory
name|factory
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|init
parameter_list|()
block|{
name|String
name|prefix
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"basedir"
argument_list|,
literal|"."
argument_list|)
decl_stmt|;
name|File
name|targetDir
init|=
operator|new
name|File
argument_list|(
name|prefix
argument_list|,
literal|"target"
argument_list|)
decl_stmt|;
name|customDir
operator|=
operator|new
name|File
argument_list|(
name|targetDir
argument_list|,
literal|"fileContentItem"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|ContentItemFactory
name|createContentItemFactory
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|factory
operator|==
literal|null
condition|)
block|{
name|factory
operator|=
operator|new
name|FileContentItemFactory
argument_list|(
name|customDir
argument_list|)
expr_stmt|;
block|}
return|return
name|factory
return|;
block|}
comment|/**      * Tests that the specified directory is actually used!      */
annotation|@
name|Test
specifier|public
name|void
name|testCustomDir
parameter_list|()
throws|throws
name|IOException
block|{
name|assertTrue
argument_list|(
literal|"The custom dir '"
operator|+
name|customDir
operator|+
literal|"'MUST exist"
argument_list|,
name|customDir
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"The custom dir '"
operator|+
name|customDir
operator|+
literal|"'MUST be an directory"
argument_list|,
name|customDir
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|numFiles
init|=
name|customDir
operator|.
name|list
argument_list|()
operator|.
name|length
decl_stmt|;
name|Blob
name|blob
init|=
name|contentItemFactory
operator|.
name|createBlob
argument_list|(
operator|new
name|StringSource
argument_list|(
literal|"ensure a file exist"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|blob
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Creating a new Blob has not increased the "
operator|+
literal|"number of files by one!"
argument_list|,
name|numFiles
argument_list|,
name|customDir
operator|.
name|list
argument_list|()
operator|.
name|length
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

