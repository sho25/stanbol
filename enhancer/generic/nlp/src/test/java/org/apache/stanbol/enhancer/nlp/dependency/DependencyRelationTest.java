begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|nlp
operator|.
name|dependency
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|commons
operator|.
name|rdf
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|contentitem
operator|.
name|inmemory
operator|.
name|InMemoryContentItemFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|nlp
operator|.
name|model
operator|.
name|AnalysedText
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|nlp
operator|.
name|model
operator|.
name|AnalysedTextFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|Blob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ContentItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ContentItemFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|ContentItemHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|impl
operator|.
name|StringSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_class
specifier|public
class|class
name|DependencyRelationTest
block|{
comment|/**      * Empty AnalysedText instance created before each test      */
specifier|private
specifier|static
name|AnalysedText
name|at
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|ContentItemFactory
name|ciFactory
init|=
name|InMemoryContentItemFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|AnalysedTextFactory
name|atFactory
init|=
name|AnalysedTextFactory
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|ContentItem
name|ci
decl_stmt|;
specifier|private
specifier|static
name|Entry
argument_list|<
name|IRI
argument_list|,
name|Blob
argument_list|>
name|textBlob
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setup
parameter_list|()
throws|throws
name|IOException
block|{
name|ci
operator|=
name|ciFactory
operator|.
name|createContentItem
argument_list|(
operator|new
name|StringSource
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|textBlob
operator|=
name|ContentItemHelper
operator|.
name|getBlob
argument_list|(
name|ci
argument_list|,
name|Collections
operator|.
name|singleton
argument_list|(
literal|"text/plain"
argument_list|)
argument_list|)
expr_stmt|;
name|at
operator|=
name|atFactory
operator|.
name|createAnalysedText
argument_list|(
name|textBlob
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSimpleGrammaticalRelationInit
parameter_list|()
block|{
name|GrammaticalRelationTag
name|gramRelationTag
init|=
operator|new
name|GrammaticalRelationTag
argument_list|(
literal|"agent"
argument_list|,
name|GrammaticalRelation
operator|.
name|Agent
argument_list|)
decl_stmt|;
name|DependencyRelation
name|depRelation
init|=
operator|new
name|DependencyRelation
argument_list|(
name|gramRelationTag
argument_list|,
literal|false
argument_list|,
name|at
operator|.
name|addToken
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"agent"
argument_list|,
name|depRelation
operator|.
name|getGrammaticalRelationTag
argument_list|()
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|GrammaticalRelation
name|relation
init|=
name|depRelation
operator|.
name|getGrammaticalRelationTag
argument_list|()
operator|.
name|getGrammaticalRelation
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|GrammaticalRelation
operator|.
name|Agent
argument_list|,
name|relation
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|relation
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|GrammaticalRelationCategory
operator|.
name|Argument
argument_list|,
name|relation
operator|.
name|getCategory
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGrammaticalRelationWithHierarchyInit
parameter_list|()
block|{
name|GrammaticalRelationTag
name|gramRelationTag
init|=
operator|new
name|GrammaticalRelationTag
argument_list|(
literal|"abbrev"
argument_list|,
name|GrammaticalRelation
operator|.
name|AbbreviationModifier
argument_list|)
decl_stmt|;
name|DependencyRelation
name|depRelation
init|=
operator|new
name|DependencyRelation
argument_list|(
name|gramRelationTag
argument_list|,
literal|false
argument_list|,
name|at
operator|.
name|addToken
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"abbrev"
argument_list|,
name|depRelation
operator|.
name|getGrammaticalRelationTag
argument_list|()
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|GrammaticalRelation
name|relation
init|=
name|depRelation
operator|.
name|getGrammaticalRelationTag
argument_list|()
operator|.
name|getGrammaticalRelation
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|GrammaticalRelation
operator|.
name|AbbreviationModifier
argument_list|,
name|relation
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|GrammaticalRelation
operator|.
name|Modifier
argument_list|,
name|relation
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|GrammaticalRelation
argument_list|>
name|expectedHierarcy
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|GrammaticalRelation
operator|.
name|Dependent
argument_list|,
name|GrammaticalRelation
operator|.
name|Modifier
argument_list|,
name|GrammaticalRelation
operator|.
name|AbbreviationModifier
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|GrammaticalRelation
argument_list|>
name|hierarchy
init|=
name|relation
operator|.
name|hierarchy
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedHierarcy
argument_list|,
name|hierarchy
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

