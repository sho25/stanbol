begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|nlp
operator|.
name|pos
operator|.
name|olia
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|nlp
operator|.
name|TagSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|nlp
operator|.
name|pos
operator|.
name|LexicalCategory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|nlp
operator|.
name|pos
operator|.
name|PosTag
import|;
end_import

begin_comment
comment|/**  * Defines {@link TagSet}s for the German language.<p>  * TODO: this is currently done manually but it should be able to generate this  * based on the<a herf="http://nlp2rdf.lod2.eu/olia/">OLIA</a> Ontologies  *   * @author Rupert Westenthaler  *  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|German
block|{
specifier|private
name|German
parameter_list|()
block|{}
specifier|public
specifier|static
specifier|final
name|TagSet
argument_list|<
name|PosTag
argument_list|>
name|STTS
init|=
operator|new
name|TagSet
argument_list|<
name|PosTag
argument_list|>
argument_list|(
literal|"STTS"
argument_list|,
literal|"de"
argument_list|)
decl_stmt|;
static|static
block|{
comment|//TODO: define constants for annotation model and linking model
name|STTS
operator|.
name|getProperties
argument_list|()
operator|.
name|put
argument_list|(
literal|"olia.annotationModel"
argument_list|,
operator|new
name|UriRef
argument_list|(
literal|"http://purl.org/olia/stts.owl"
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|getProperties
argument_list|()
operator|.
name|put
argument_list|(
literal|"olia.linkingModel"
argument_list|,
operator|new
name|UriRef
argument_list|(
literal|"http://purl.org/olia/stts-link.rdf"
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"ADJA"
argument_list|,
name|LexicalCategory
operator|.
name|Adjective
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"ADJD"
argument_list|,
name|LexicalCategory
operator|.
name|Adjective
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"ADV"
argument_list|,
name|LexicalCategory
operator|.
name|Adverb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"APPR"
argument_list|,
name|LexicalCategory
operator|.
name|Adposition
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"APPRART"
argument_list|,
name|LexicalCategory
operator|.
name|Adposition
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"APPO"
argument_list|,
name|LexicalCategory
operator|.
name|Adposition
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"APZR"
argument_list|,
name|LexicalCategory
operator|.
name|Adposition
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"ART"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"CARD"
argument_list|,
name|LexicalCategory
operator|.
name|Quantifier
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"FM"
argument_list|,
name|LexicalCategory
operator|.
name|Noun
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"ITJ"
argument_list|,
name|LexicalCategory
operator|.
name|Interjection
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"KOUI"
argument_list|,
name|LexicalCategory
operator|.
name|Conjuction
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"KOUS"
argument_list|,
name|LexicalCategory
operator|.
name|Conjuction
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"KON"
argument_list|,
name|LexicalCategory
operator|.
name|Conjuction
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"KOKOM"
argument_list|,
name|LexicalCategory
operator|.
name|Conjuction
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"NN"
argument_list|,
name|LexicalCategory
operator|.
name|Noun
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"NE"
argument_list|,
name|LexicalCategory
operator|.
name|Noun
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PDS"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PDAT"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PIS"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PIAT"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PIDAT"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PPER"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PPOSS"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PPOSAT"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PRELS"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PRELAT"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PRF"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PWS"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PWAT"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PWAV"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PAV"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
comment|//Tiger-STTS for PAV
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PROAV"
argument_list|,
name|LexicalCategory
operator|.
name|PronounOrDeterminer
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PTKA"
argument_list|,
name|LexicalCategory
operator|.
name|Unique
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PTKANT"
argument_list|,
name|LexicalCategory
operator|.
name|Unique
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PTKNEG"
argument_list|,
name|LexicalCategory
operator|.
name|Unique
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PTKVZ"
argument_list|,
name|LexicalCategory
operator|.
name|Unique
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"PTKZU"
argument_list|,
name|LexicalCategory
operator|.
name|Unique
argument_list|)
argument_list|)
expr_stmt|;
comment|//particle "zu"  e.g. "zu [gehen]".
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"TRUNC"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|//e.g. An- [und Abreise]
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"VVIMP"
argument_list|,
name|LexicalCategory
operator|.
name|Verb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"VVINF"
argument_list|,
name|LexicalCategory
operator|.
name|Verb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"VVFIN"
argument_list|,
name|LexicalCategory
operator|.
name|Verb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"VVIZU"
argument_list|,
name|LexicalCategory
operator|.
name|Verb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"VVPP"
argument_list|,
name|LexicalCategory
operator|.
name|Verb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"VAFIN"
argument_list|,
name|LexicalCategory
operator|.
name|Verb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"VAIMP"
argument_list|,
name|LexicalCategory
operator|.
name|Verb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"VAINF"
argument_list|,
name|LexicalCategory
operator|.
name|Verb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"VAPP"
argument_list|,
name|LexicalCategory
operator|.
name|Verb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"VMFIN"
argument_list|,
name|LexicalCategory
operator|.
name|Verb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"VMINF"
argument_list|,
name|LexicalCategory
operator|.
name|Verb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"VMPP"
argument_list|,
name|LexicalCategory
operator|.
name|Verb
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"XY"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|//non words (e.g. H20, 3:7 ...)
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"$."
argument_list|,
name|LexicalCategory
operator|.
name|Punctuation
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"$,"
argument_list|,
name|LexicalCategory
operator|.
name|Punctuation
argument_list|)
argument_list|)
expr_stmt|;
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"$("
argument_list|,
name|LexicalCategory
operator|.
name|Punctuation
argument_list|)
argument_list|)
expr_stmt|;
comment|//Normal nouns in named entities (not in stts 1999)
name|STTS
operator|.
name|addTag
argument_list|(
operator|new
name|PosTag
argument_list|(
literal|"NNE"
argument_list|,
name|LexicalCategory
operator|.
name|Noun
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

