begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|nlp
operator|.
name|dependency
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|nlp
operator|.
name|model
operator|.
name|Token
import|;
end_import

begin_comment
comment|/**  * Represents the list of dependency(grammatical) relations that a {@link Token}  * has with other {@link Token}s from the same {@link Sentence}.  *   * It is attached to a {@link Token} via {@link DEPENDENCY_ANNOTATION}.  *   * @author Cristian Petroaca  *   */
end_comment

begin_class
specifier|public
class|class
name|DependencyFeatures
block|{
comment|/** 	 * The set of grammatical relations 	 */
specifier|private
name|Set
argument_list|<
name|DependencyRelation
argument_list|>
name|relations
decl_stmt|;
specifier|public
name|DependencyFeatures
parameter_list|()
block|{
name|this
operator|.
name|relations
operator|=
operator|new
name|HashSet
argument_list|<
name|DependencyRelation
argument_list|>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|DependencyFeatures
parameter_list|(
name|Set
argument_list|<
name|DependencyRelation
argument_list|>
name|relations
parameter_list|)
block|{
name|this
operator|.
name|relations
operator|=
name|relations
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|DependencyRelation
argument_list|>
name|getRelations
parameter_list|()
block|{
return|return
name|relations
return|;
block|}
comment|//TODO: IMO annotations
specifier|public
name|void
name|addRelation
parameter_list|(
name|DependencyRelation
name|relation
parameter_list|)
block|{
name|this
operator|.
name|relations
operator|.
name|add
argument_list|(
name|relation
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
operator|(
operator|(
name|relations
operator|!=
literal|null
operator|)
condition|?
name|relations
operator|.
name|hashCode
argument_list|()
else|:
literal|0
operator|)
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
operator|&&
operator|(
name|obj
operator|instanceof
name|DependencyFeatures
operator|)
operator|&&
operator|(
name|this
operator|.
name|relations
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|DependencyFeatures
operator|)
name|obj
operator|)
operator|.
name|getRelations
argument_list|()
argument_list|)
operator|)
return|;
block|}
block|}
end_class

end_unit

