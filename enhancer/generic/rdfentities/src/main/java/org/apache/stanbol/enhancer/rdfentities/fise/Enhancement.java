begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|rdfentities
operator|.
name|fise
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|rdfentities
operator|.
name|Rdf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|rdfentities
operator|.
name|RdfEntity
import|;
end_import

begin_comment
comment|/**  * This Interface represents a Stanbol Enhancer enhancement.  *<p>  * To create an instance of this interface use the following code  *<code><pre>  *  ContentItem ci;  *     MGraph graph = ci.getMetadata();  *  RdfEntityFactory factory = RdfEntityFactory.createInstance(graph);  *    String enhancementId = "http://wwww.example.com/iks-project/enhancer/example-enhancement";  *    UriRef enhancementNode = new UriRef(enhancementId);  *    Enhancement enhancement = factory.getProxy(enhancementNode, Enhancement.class);  *    enhancement.setCreator("Rupert Westenthaler");  *  enhancement.setCreated(new Date());  *  ...  *</pre></code>  *  * @author Rupert Westenthaler  */
end_comment

begin_interface
annotation|@
name|Rdf
argument_list|(
name|id
operator|=
literal|"http://fise.iks-project.eu/ontology/Enhancement"
argument_list|)
specifier|public
interface|interface
name|Enhancement
extends|extends
name|RdfEntity
block|{
annotation|@
name|Rdf
argument_list|(
name|id
operator|=
literal|"http://purl.org/dc/terms/creator"
argument_list|)
name|UriRef
name|getCreator
parameter_list|()
function_decl|;
annotation|@
name|Rdf
argument_list|(
name|id
operator|=
literal|"http://purl.org/dc/terms/creator"
argument_list|)
name|void
name|setCreator
parameter_list|(
name|UriRef
name|creator
parameter_list|)
function_decl|;
annotation|@
name|Rdf
argument_list|(
name|id
operator|=
literal|"http://purl.org/dc/terms/created"
argument_list|)
name|void
name|setCreated
parameter_list|(
name|Date
name|date
parameter_list|)
function_decl|;
annotation|@
name|Rdf
argument_list|(
name|id
operator|=
literal|"http://purl.org/dc/terms/created"
argument_list|)
name|Date
name|getCreated
parameter_list|()
function_decl|;
comment|//    @Rdf(id="http://purl.org/dc/terms/type")
comment|//    void setDcType(Collection<URI> types);
annotation|@
name|Rdf
argument_list|(
name|id
operator|=
literal|"http://purl.org/dc/terms/type"
argument_list|)
name|Collection
argument_list|<
name|UriRef
argument_list|>
name|getDcType
parameter_list|()
function_decl|;
annotation|@
name|Rdf
argument_list|(
name|id
operator|=
literal|"http://fise.iks-project.eu/ontology/confidence"
argument_list|)
name|Double
name|getConfidence
parameter_list|()
function_decl|;
annotation|@
name|Rdf
argument_list|(
name|id
operator|=
literal|"http://fise.iks-project.eu/ontology/confidence"
argument_list|)
name|void
name|setConfidence
parameter_list|(
name|Double
name|value
parameter_list|)
function_decl|;
annotation|@
name|Rdf
argument_list|(
name|id
operator|=
literal|"http://fise.iks-project.eu/ontology/extracted-from"
argument_list|)
name|UriRef
name|getExtractedFrom
parameter_list|()
function_decl|;
annotation|@
name|Rdf
argument_list|(
name|id
operator|=
literal|"http://fise.iks-project.eu/ontology/extracted-from"
argument_list|)
name|void
name|setExtractedFrom
parameter_list|(
name|UriRef
name|contentItem
parameter_list|)
function_decl|;
annotation|@
name|Rdf
argument_list|(
name|id
operator|=
literal|"http://purl.org/dc/terms/requires"
argument_list|)
name|Collection
argument_list|<
name|Enhancement
argument_list|>
name|getRequires
parameter_list|()
function_decl|;
comment|//    @Rdf(id="http://purl.org/dc/terms/requires")
comment|//    void setRequires(Collection<Enhancement> required);
annotation|@
name|Rdf
argument_list|(
name|id
operator|=
literal|"http://purl.org/dc/terms/relation"
argument_list|)
name|Collection
argument_list|<
name|Enhancement
argument_list|>
name|getRelations
parameter_list|()
function_decl|;
comment|//    @Rdf(id="http://purl.org/dc/terms/relation")
comment|//    void setRelation(Collection<Enhancement> related);
block|}
end_interface

end_unit

