begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ContentSource
import|;
end_import

begin_comment
comment|/**  * Allows to use a String as a Source for Content.  * @author Rupert Westenthaler  *  */
end_comment

begin_class
specifier|public
class|class
name|StringSource
extends|extends
name|ByteArraySource
implements|implements
name|ContentSource
block|{
comment|//TODO: validate that parsed MediaTypes to NOT contain the charset parameter
specifier|public
specifier|static
specifier|final
name|Charset
name|UTF8
init|=
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TEXT_PLAIN
init|=
literal|"text/plain"
decl_stmt|;
comment|/**      * Creates a String source with the content type "text/plain".      * @param value      */
specifier|public
name|StringSource
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
argument_list|(
name|value
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**      * Allows to creates a StringSource with an other media type that text/plain      * @param value the value      * @param mt the MediaType. Do not use the "charset" parameter as this will      * be set to the internally used charset used to convert the parsed value      * to an byte array.      */
specifier|public
name|StringSource
parameter_list|(
name|String
name|value
parameter_list|,
name|String
name|mt
parameter_list|)
block|{
name|super
argument_list|(
name|value
operator|==
literal|null
condition|?
literal|null
else|:
name|value
operator|.
name|getBytes
argument_list|(
name|UTF8
argument_list|)
argument_list|,
operator|(
name|mt
operator|!=
literal|null
condition|?
name|mt
else|:
name|TEXT_PLAIN
operator|)
operator|+
literal|"; charset="
operator|+
name|UTF8
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Allows to creates a StringSource with an other media type that text/plain      * and an custom {@link Charset} used to encode the String      * @param value the value      * @param charset the charset or<code>null</code> to use the default      * "UTF-8". To use the System default parse       *<code>{@link Charset#defaultCharset()}</code>      * @param mt the MediaType. Do not use the "charset" parameter as this will      * be set to the internally used charset used to convert the parsed value      * to an byte array.      */
specifier|public
name|StringSource
parameter_list|(
name|String
name|value
parameter_list|,
name|Charset
name|charset
parameter_list|,
name|String
name|mt
parameter_list|)
block|{
name|super
argument_list|(
name|value
operator|==
literal|null
condition|?
literal|null
else|:
name|value
operator|.
name|getBytes
argument_list|(
name|charset
operator|==
literal|null
condition|?
name|UTF8
else|:
name|charset
argument_list|)
argument_list|,
operator|(
name|mt
operator|!=
literal|null
condition|?
name|mt
else|:
name|TEXT_PLAIN
operator|)
operator|+
literal|"; charset="
operator|+
operator|(
name|charset
operator|==
literal|null
condition|?
name|UTF8
else|:
name|charset
operator|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

