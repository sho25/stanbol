begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|serviceapi
operator|.
name|helper
package|;
end_package

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|Language
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|LiteralFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|indexedgraph
operator|.
name|IndexedMGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ContentItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|EngineException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|EnhancementEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|EnhancementEngineHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|EnhancementEngineHelperTest
block|{
specifier|private
specifier|static
specifier|final
name|LiteralFactory
name|lf
init|=
name|LiteralFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
comment|/**      * internally used as argument for {@link EnhancementEngineHelper} methods      */
specifier|private
specifier|static
specifier|final
name|EnhancementEngine
name|dummyEngine
init|=
operator|new
name|EnhancementEngine
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|canEnhance
parameter_list|(
name|ContentItem
name|ci
parameter_list|)
throws|throws
name|EngineException
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|computeEnhancements
parameter_list|(
name|ContentItem
name|ci
parameter_list|)
throws|throws
name|EngineException
block|{         }
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"DummyEngine"
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testTextAnnotationNewModel
parameter_list|()
block|{
name|String
name|content
init|=
literal|"The Stanbol Enhancer can extract Entities form parsed Text."
decl_stmt|;
name|Language
name|lang
init|=
operator|new
name|Language
argument_list|(
literal|"en"
argument_list|)
decl_stmt|;
name|int
name|start
init|=
name|content
operator|.
name|indexOf
argument_list|(
literal|"Stanbol"
argument_list|)
decl_stmt|;
name|int
name|end
init|=
name|start
operator|+
literal|"Stanbol Enhancer"
operator|.
name|length
argument_list|()
decl_stmt|;
name|UriRef
name|ciUri
init|=
operator|new
name|UriRef
argument_list|(
literal|"http://www.example.org/contentItem#1"
argument_list|)
decl_stmt|;
name|MGraph
name|metadata
init|=
operator|new
name|IndexedMGraph
argument_list|()
decl_stmt|;
name|UriRef
name|ta
init|=
name|EnhancementEngineHelper
operator|.
name|createTextEnhancement
argument_list|(
name|metadata
argument_list|,
name|dummyEngine
argument_list|,
name|ciUri
argument_list|)
decl_stmt|;
name|EnhancementEngineHelper
operator|.
name|setOccurrence
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|content
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|lang
argument_list|,
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"The "
argument_list|,
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTION_PREFIX
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Stanbol Enhancer"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTED_TEXT
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|" can extra"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTION_SUFFIX
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|start
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|get
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_START
argument_list|,
name|Integer
operator|.
name|class
argument_list|,
name|lf
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|end
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|get
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_END
argument_list|,
name|Integer
operator|.
name|class
argument_list|,
name|lf
argument_list|)
argument_list|)
expr_stmt|;
comment|//head and tail should be null
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTION_HEAD
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTION_TAIL
argument_list|)
argument_list|)
expr_stmt|;
name|content
operator|=
literal|"Ich habe den Schlüssel fürs Donaudampfschiffahrtsgesellschaftskapitänskajütenschloss verlohren."
expr_stmt|;
name|start
operator|=
name|content
operator|.
name|indexOf
argument_list|(
literal|"Donaudampfschi"
argument_list|)
expr_stmt|;
name|end
operator|=
name|content
operator|.
name|indexOf
argument_list|(
literal|" verlohren"
argument_list|)
expr_stmt|;
name|ta
operator|=
name|EnhancementEngineHelper
operator|.
name|createTextEnhancement
argument_list|(
name|metadata
argument_list|,
name|dummyEngine
argument_list|,
name|ciUri
argument_list|)
expr_stmt|;
name|EnhancementEngineHelper
operator|.
name|setOccurrence
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|content
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|lang
argument_list|,
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ssel fürs "
argument_list|,
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTION_PREFIX
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|" verlohren"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTION_SUFFIX
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|start
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|get
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_START
argument_list|,
name|Integer
operator|.
name|class
argument_list|,
name|lf
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|end
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|get
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_END
argument_list|,
name|Integer
operator|.
name|class
argument_list|,
name|lf
argument_list|)
argument_list|)
expr_stmt|;
comment|//selected text is expected to be null
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTED_TEXT
argument_list|)
argument_list|)
expr_stmt|;
comment|//tail and head should be present
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Donaudampf"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTION_HEAD
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"tenschloss"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTION_TAIL
argument_list|)
argument_list|)
expr_stmt|;
comment|//finally the same but deactivating head/tail
name|ta
operator|=
name|EnhancementEngineHelper
operator|.
name|createTextEnhancement
argument_list|(
name|metadata
argument_list|,
name|dummyEngine
argument_list|,
name|ciUri
argument_list|)
expr_stmt|;
name|EnhancementEngineHelper
operator|.
name|setOccurrence
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|content
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|lang
argument_list|,
operator|-
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Donaudampfschiffahrtsgesellschaftskapitänskajütenschloss"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTED_TEXT
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTION_HEAD
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|metadata
argument_list|,
name|ta
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTION_TAIL
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Tests positive cases for {@link EnhancementEngineHelper#parseConfigValues(Object, Class, boolean)}      */
annotation|@
name|Test
specifier|public
name|void
name|testConfigValues
parameter_list|()
block|{
name|Object
name|value
init|=
operator|new
name|String
index|[]
block|{
literal|"23"
block|,
literal|"27.25"
block|,
literal|"-23"
block|}
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Float
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|Float
operator|.
name|valueOf
argument_list|(
literal|27.25f
argument_list|)
argument_list|,
name|Float
operator|.
name|valueOf
argument_list|(
operator|-
literal|23
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|Float
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|Double
operator|.
name|valueOf
argument_list|(
literal|27.25f
argument_list|)
argument_list|,
name|Double
operator|.
name|valueOf
argument_list|(
operator|-
literal|23
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"23"
argument_list|,
literal|"27.25"
argument_list|,
literal|"-23"
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
operator|new
name|float
index|[]
block|{
literal|23f
block|,
literal|27.25f
block|,
operator|-
literal|23f
block|}
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Float
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|Float
operator|.
name|valueOf
argument_list|(
literal|27.25f
argument_list|)
argument_list|,
name|Float
operator|.
name|valueOf
argument_list|(
operator|-
literal|23
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|Float
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|Double
operator|.
name|valueOf
argument_list|(
literal|27.25f
argument_list|)
argument_list|,
name|Double
operator|.
name|valueOf
argument_list|(
operator|-
literal|23
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"23.0"
argument_list|,
literal|"27.25"
argument_list|,
literal|"-23.0"
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
operator|new
name|String
index|[]
block|{
literal|"23"
block|,
literal|"27.25"
block|,
literal|null
block|,
literal|"-23"
block|}
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Float
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|Float
operator|.
name|valueOf
argument_list|(
literal|27.25f
argument_list|)
argument_list|,
name|Float
operator|.
name|valueOf
argument_list|(
operator|-
literal|23
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|Float
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Float
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|Float
operator|.
name|valueOf
argument_list|(
literal|27.25f
argument_list|)
argument_list|,
literal|null
argument_list|,
name|Float
operator|.
name|valueOf
argument_list|(
operator|-
literal|23
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|Float
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
literal|"23"
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Float
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|Float
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"23"
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
literal|null
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|//This tests parsing an Set
name|value
operator|=
operator|new
name|String
index|[]
block|{
literal|"23"
block|,
literal|"27"
block|,
literal|"-23"
block|,
literal|"27"
block|}
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|<
name|Integer
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
literal|27
argument_list|)
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
operator|-
literal|23
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|,
operator|new
name|HashSet
argument_list|<
name|Integer
argument_list|>
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"23"
argument_list|,
literal|"27"
argument_list|,
literal|"-23"
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|,
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
comment|//This tests parsing a Set the the config values method that allows to parse
comment|//a custom collection
name|value
operator|=
operator|new
name|String
index|[]
block|{
literal|"23"
block|,
literal|"27"
block|,
literal|null
block|,
literal|"-23"
block|,
literal|"27"
block|,
literal|null
block|}
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|<
name|Integer
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
literal|27
argument_list|)
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
operator|-
literal|23
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|,
operator|new
name|HashSet
argument_list|<
name|Integer
argument_list|>
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"23"
argument_list|,
literal|"27"
argument_list|,
literal|"-23"
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|,
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|<
name|Integer
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|null
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
literal|27
argument_list|)
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
operator|-
literal|23
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|,
operator|new
name|HashSet
argument_list|<
name|Integer
argument_list|>
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|null
argument_list|,
literal|"23"
argument_list|,
literal|"27"
argument_list|,
literal|"-23"
argument_list|)
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseConfigValues
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|,
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Tests positive cases for {@link EnhancementEngineHelper#parseFirstConfigValue(Object, Class)}      */
annotation|@
name|Test
specifier|public
name|void
name|testFirstConfigValue
parameter_list|()
block|{
name|Object
name|value
init|=
literal|null
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
operator|new
name|String
index|[]
block|{
literal|null
block|}
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
operator|new
name|String
index|[]
block|{
literal|null
block|,
literal|null
block|,
literal|null
block|}
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|(
name|String
operator|)
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
literal|"23"
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"23"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|BigInteger
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
operator|new
name|String
index|[]
block|{
literal|"23"
block|}
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"23"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|BigInteger
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
operator|new
name|int
index|[]
block|{
literal|23
block|}
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"23"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|BigInteger
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
operator|new
name|String
index|[]
block|{
literal|"23"
block|,
literal|"24"
block|}
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"23"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|BigInteger
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
operator|new
name|int
index|[]
block|{
literal|23
block|,
literal|24
block|}
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"23"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|BigInteger
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
operator|new
name|String
index|[]
block|{
literal|null
block|,
literal|"23"
block|}
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"23"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|BigInteger
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"23"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"23"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|BigInteger
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"23"
argument_list|,
literal|"24"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"23"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|BigInteger
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|null
argument_list|,
literal|"23"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"23"
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|Double
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|23
argument_list|)
argument_list|,
name|EnhancementEngineHelper
operator|.
name|parseFirstConfigValue
argument_list|(
name|value
argument_list|,
name|BigInteger
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

