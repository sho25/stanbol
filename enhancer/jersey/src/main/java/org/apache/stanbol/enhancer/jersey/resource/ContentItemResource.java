begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|jersey
operator|.
name|resource
package|;
end_package

begin_import
import|import static
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
operator|.
name|TEXT_HTML
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|web
operator|.
name|base
operator|.
name|CorsHelper
operator|.
name|addCORSOrigin
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|EnhancementEngineHelper
operator|.
name|getReference
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|EnhancementEngineHelper
operator|.
name|getReferences
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|EnhancementEngineHelper
operator|.
name|getString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|OntologicalClasses
operator|.
name|DBPEDIA_ORGANISATION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|OntologicalClasses
operator|.
name|DBPEDIA_PERSON
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|OntologicalClasses
operator|.
name|DBPEDIA_PLACE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|OntologicalClasses
operator|.
name|SKOS_CONCEPT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|Properties
operator|.
name|DC_RELATION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|Properties
operator|.
name|DC_TYPE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|Properties
operator|.
name|ENHANCER_CONFIDENCE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|Properties
operator|.
name|ENHANCER_ENTITY_LABEL
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|Properties
operator|.
name|ENHANCER_ENTITY_REFERENCE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|Properties
operator|.
name|GEO_LAT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|Properties
operator|.
name|GEO_LONG
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|TechnicalClasses
operator|.
name|ENHANCER_ENTITYANNOTATION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|TechnicalClasses
operator|.
name|ENHANCER_TEXTANNOTATION
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
operator|.
name|ResponseBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|Language
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|Literal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|LiteralFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|NonLiteral
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|PlainLiteral
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|Triple
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|TripleCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|access
operator|.
name|TcManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|impl
operator|.
name|SimpleMGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|impl
operator|.
name|TripleImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|serializedform
operator|.
name|Serializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|serializedform
operator|.
name|SupportedFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|sparql
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|ontologies
operator|.
name|RDF
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|indexedgraph
operator|.
name|IndexedMGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|web
operator|.
name|base
operator|.
name|resource
operator|.
name|BaseStanbolResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|Blob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ContentItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|NoSuchPartException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|ContentItemHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|EnhancementEngineHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|ExecutionMetadataHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|ExecutionPlanHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|ExecutionMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|ExecutionPlan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|view
operator|.
name|Viewable
import|;
end_import

begin_class
specifier|public
class|class
name|ContentItemResource
extends|extends
name|BaseStanbolResource
block|{
specifier|private
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
comment|// TODO make this configurable trough a property
specifier|public
specifier|static
specifier|final
name|UriRef
name|SUMMARY
init|=
operator|new
name|UriRef
argument_list|(
literal|"http://www.w3.org/2000/01/rdf-schema#comment"
argument_list|)
decl_stmt|;
comment|// TODO make this configurable trough a property
specifier|public
specifier|static
specifier|final
name|UriRef
name|THUMBNAIL
init|=
operator|new
name|UriRef
argument_list|(
literal|"http://dbpedia.org/ontology/thumbnail"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|UriRef
name|DEPICTION
init|=
operator|new
name|UriRef
argument_list|(
literal|"http://xmlns.com/foaf/0.1/depiction"
argument_list|)
decl_stmt|;
specifier|public
specifier|final
name|Map
argument_list|<
name|UriRef
argument_list|,
name|String
argument_list|>
name|defaultThumbnails
init|=
operator|new
name|HashMap
argument_list|<
name|UriRef
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|ContentItem
name|contentItem
decl_stmt|;
specifier|protected
name|String
name|localId
decl_stmt|;
specifier|protected
name|String
name|textContent
decl_stmt|;
specifier|protected
name|URI
name|imageSrc
decl_stmt|;
specifier|protected
name|URI
name|downloadHref
decl_stmt|;
specifier|protected
name|URI
name|metadataHref
decl_stmt|;
specifier|protected
specifier|final
name|TcManager
name|tcManager
decl_stmt|;
specifier|protected
specifier|final
name|Serializer
name|serializer
decl_stmt|;
specifier|protected
name|String
name|serializationFormat
init|=
name|SupportedFormat
operator|.
name|RDF_XML
decl_stmt|;
comment|/**      * Map holding the extraction mapped by {@link Properties#DC_TYPE} and the      * {@link Properties#ENHANCER_SELECTED_TEXT}.      * This map is initialised by {@link #initOccurrences()}.      */
specifier|protected
name|Map
argument_list|<
name|UriRef
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|EntityExtractionSummary
argument_list|>
argument_list|>
name|extractionsByTypeMap
init|=
operator|new
name|HashMap
argument_list|<
name|UriRef
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|EntityExtractionSummary
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|MGraph
name|executionMetadata
decl_stmt|;
specifier|private
name|ChainExecution
name|chainExecution
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|jersey
operator|.
name|resource
operator|.
name|ContentItemResource
operator|.
name|Execution
argument_list|>
name|engineExecutions
decl_stmt|;
specifier|public
name|ContentItemResource
parameter_list|(
name|String
name|localId
parameter_list|,
name|ContentItem
name|ci
parameter_list|,
name|UriInfo
name|uriInfo
parameter_list|,
name|String
name|storePath
parameter_list|,
name|TcManager
name|tcManager
parameter_list|,
name|Serializer
name|serializer
parameter_list|,
name|ServletContext
name|servletContext
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|contentItem
operator|=
name|ci
expr_stmt|;
name|this
operator|.
name|localId
operator|=
name|localId
expr_stmt|;
name|this
operator|.
name|uriInfo
operator|=
name|uriInfo
expr_stmt|;
name|this
operator|.
name|tcManager
operator|=
name|tcManager
expr_stmt|;
name|this
operator|.
name|serializer
operator|=
name|serializer
expr_stmt|;
name|this
operator|.
name|servletContext
operator|=
name|servletContext
expr_stmt|;
if|if
condition|(
name|localId
operator|!=
literal|null
condition|)
block|{
name|URI
name|rawURI
init|=
name|uriInfo
operator|.
name|getBaseUriBuilder
argument_list|()
operator|.
name|path
argument_list|(
name|storePath
argument_list|)
operator|.
name|path
argument_list|(
literal|"raw"
argument_list|)
operator|.
name|path
argument_list|(
name|localId
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Entry
argument_list|<
name|UriRef
argument_list|,
name|Blob
argument_list|>
name|plainTextContentPart
init|=
name|ContentItemHelper
operator|.
name|getBlob
argument_list|(
name|contentItem
argument_list|,
name|Collections
operator|.
name|singleton
argument_list|(
literal|"text/plain"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|plainTextContentPart
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|textContent
operator|=
name|ContentItemHelper
operator|.
name|getText
argument_list|(
name|plainTextContentPart
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ci
operator|.
name|getMimeType
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"image/"
argument_list|)
condition|)
block|{
name|this
operator|.
name|imageSrc
operator|=
name|rawURI
expr_stmt|;
block|}
name|this
operator|.
name|downloadHref
operator|=
name|rawURI
expr_stmt|;
name|this
operator|.
name|metadataHref
operator|=
name|uriInfo
operator|.
name|getBaseUriBuilder
argument_list|()
operator|.
name|path
argument_list|(
name|storePath
argument_list|)
operator|.
name|path
argument_list|(
literal|"metadata"
argument_list|)
operator|.
name|path
argument_list|(
name|localId
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|defaultThumbnails
operator|.
name|put
argument_list|(
name|DBPEDIA_PERSON
argument_list|,
name|getStaticRootUrl
argument_list|()
operator|+
literal|"/home/images/user_48.png"
argument_list|)
expr_stmt|;
name|defaultThumbnails
operator|.
name|put
argument_list|(
name|DBPEDIA_ORGANISATION
argument_list|,
name|getStaticRootUrl
argument_list|()
operator|+
literal|"/home/images/organization_48.png"
argument_list|)
expr_stmt|;
name|defaultThumbnails
operator|.
name|put
argument_list|(
name|DBPEDIA_PLACE
argument_list|,
name|getStaticRootUrl
argument_list|()
operator|+
literal|"/home/images/compass_48.png"
argument_list|)
expr_stmt|;
name|defaultThumbnails
operator|.
name|put
argument_list|(
name|SKOS_CONCEPT
argument_list|,
name|getStaticRootUrl
argument_list|()
operator|+
literal|"/home/images/black_gear_48.png"
argument_list|)
expr_stmt|;
name|defaultThumbnails
operator|.
name|put
argument_list|(
literal|null
argument_list|,
name|getStaticRootUrl
argument_list|()
operator|+
literal|"/home/images/unknown_48.png"
argument_list|)
expr_stmt|;
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|initOccurrences
argument_list|()
expr_stmt|;
comment|//init ExecutionMetadata
try|try
block|{
name|executionMetadata
operator|=
name|ci
operator|.
name|getPart
argument_list|(
name|ExecutionMetadata
operator|.
name|CHAIN_EXECUTION
argument_list|,
name|MGraph
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchPartException
name|e
parameter_list|)
block|{
name|executionMetadata
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|executionMetadata
operator|!=
literal|null
condition|)
block|{
name|NonLiteral
name|ce
init|=
name|ExecutionMetadataHelper
operator|.
name|getChainExecution
argument_list|(
name|executionMetadata
argument_list|,
name|ci
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ce
operator|!=
literal|null
condition|)
block|{
name|chainExecution
operator|=
operator|new
name|ChainExecution
argument_list|(
name|executionMetadata
argument_list|,
name|ce
argument_list|)
expr_stmt|;
name|engineExecutions
operator|=
operator|new
name|ArrayList
argument_list|<
name|Execution
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|NonLiteral
name|ex
range|:
name|ExecutionMetadataHelper
operator|.
name|getExecutions
argument_list|(
name|executionMetadata
argument_list|,
name|ce
argument_list|)
control|)
block|{
name|engineExecutions
operator|.
name|add
argument_list|(
operator|new
name|Execution
argument_list|(
name|chainExecution
argument_list|,
name|executionMetadata
argument_list|,
name|ex
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Collections
operator|.
name|sort
argument_list|(
name|engineExecutions
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|chainExecution
operator|=
literal|null
expr_stmt|;
name|engineExecutions
operator|=
literal|null
expr_stmt|;
block|}
block|}
name|log
operator|.
name|info
argument_list|(
literal|" ... {}ms fro parsing Enhancement Reuslts"
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|start
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getRdfMetadata
parameter_list|(
name|String
name|mediatype
parameter_list|)
throws|throws
name|UnsupportedEncodingException
block|{
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|serialize
argument_list|(
name|out
argument_list|,
name|contentItem
operator|.
name|getMetadata
argument_list|()
argument_list|,
name|mediatype
argument_list|)
expr_stmt|;
return|return
name|out
operator|.
name|toString
argument_list|(
literal|"utf-8"
argument_list|)
return|;
block|}
specifier|public
name|String
name|getRdfMetadata
parameter_list|()
throws|throws
name|UnsupportedEncodingException
block|{
return|return
name|getRdfMetadata
argument_list|(
name|serializationFormat
argument_list|)
return|;
block|}
specifier|public
name|ContentItem
name|getContentItem
parameter_list|()
block|{
return|return
name|contentItem
return|;
block|}
specifier|public
name|String
name|getLocalId
parameter_list|()
block|{
return|return
name|localId
return|;
block|}
specifier|public
name|String
name|getTextContent
parameter_list|()
block|{
return|return
name|textContent
return|;
block|}
specifier|public
name|URI
name|getImageSrc
parameter_list|()
block|{
return|return
name|imageSrc
return|;
block|}
specifier|public
name|URI
name|getDownloadHref
parameter_list|()
block|{
return|return
name|downloadHref
return|;
block|}
specifier|public
name|URI
name|getMetadataHref
parameter_list|()
block|{
return|return
name|metadataHref
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|EntityExtractionSummary
argument_list|>
name|getOccurrences
parameter_list|(
name|UriRef
name|type
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|EntityExtractionSummary
argument_list|>
name|typeMap
init|=
name|extractionsByTypeMap
operator|.
name|get
argument_list|(
name|type
argument_list|)
decl_stmt|;
name|Collection
argument_list|<
name|EntityExtractionSummary
argument_list|>
name|typeOccurrences
decl_stmt|;
if|if
condition|(
name|typeMap
operator|!=
literal|null
condition|)
block|{
name|typeOccurrences
operator|=
name|typeMap
operator|.
name|values
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|typeOccurrences
operator|=
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
return|return
name|typeOccurrences
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|EntityExtractionSummary
argument_list|>
name|getPersonOccurrences
parameter_list|()
throws|throws
name|ParseException
block|{
return|return
name|getOccurrences
argument_list|(
name|DBPEDIA_PERSON
argument_list|)
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|EntityExtractionSummary
argument_list|>
name|getOtherOccurrences
parameter_list|()
throws|throws
name|ParseException
block|{
return|return
name|getOccurrences
argument_list|(
literal|null
argument_list|)
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|EntityExtractionSummary
argument_list|>
name|getOrganizationOccurrences
parameter_list|()
throws|throws
name|ParseException
block|{
return|return
name|getOccurrences
argument_list|(
name|DBPEDIA_ORGANISATION
argument_list|)
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|EntityExtractionSummary
argument_list|>
name|getPlaceOccurrences
parameter_list|()
throws|throws
name|ParseException
block|{
return|return
name|getOccurrences
argument_list|(
name|DBPEDIA_PLACE
argument_list|)
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|EntityExtractionSummary
argument_list|>
name|getConceptOccurrences
parameter_list|()
throws|throws
name|ParseException
block|{
return|return
name|getOccurrences
argument_list|(
name|SKOS_CONCEPT
argument_list|)
return|;
block|}
enum|enum
name|EAProps
block|{
name|label
block|,
name|entity
block|,
name|confidence
block|}
specifier|private
name|void
name|initOccurrences
parameter_list|()
block|{
name|MGraph
name|graph
init|=
name|contentItem
operator|.
name|getMetadata
argument_list|()
decl_stmt|;
name|LiteralFactory
name|lf
init|=
name|LiteralFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|UriRef
argument_list|,
name|Collection
argument_list|<
name|NonLiteral
argument_list|>
argument_list|>
name|suggestionMap
init|=
operator|new
name|HashMap
argument_list|<
name|UriRef
argument_list|,
name|Collection
argument_list|<
name|NonLiteral
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
comment|// 1) get Entity Annotations
name|Map
argument_list|<
name|NonLiteral
argument_list|,
name|Map
argument_list|<
name|EAProps
argument_list|,
name|Object
argument_list|>
argument_list|>
name|entitySuggestionMap
init|=
operator|new
name|HashMap
argument_list|<
name|NonLiteral
argument_list|,
name|Map
argument_list|<
name|EAProps
argument_list|,
name|Object
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|Triple
argument_list|>
name|entityAnnotations
init|=
name|graph
operator|.
name|filter
argument_list|(
literal|null
argument_list|,
name|RDF
operator|.
name|type
argument_list|,
name|ENHANCER_ENTITYANNOTATION
argument_list|)
decl_stmt|;
while|while
condition|(
name|entityAnnotations
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|NonLiteral
name|entityAnnotation
init|=
name|entityAnnotations
operator|.
name|next
argument_list|()
operator|.
name|getSubject
argument_list|()
decl_stmt|;
comment|//to avoid multiple lookups (e.g. if one entityAnnotation links to+
comment|//several TextAnnotations) we cache the data in an intermediate Map
name|Map
argument_list|<
name|EAProps
argument_list|,
name|Object
argument_list|>
name|eaData
init|=
operator|new
name|EnumMap
argument_list|<
name|EAProps
argument_list|,
name|Object
argument_list|>
argument_list|(
name|EAProps
operator|.
name|class
argument_list|)
decl_stmt|;
name|eaData
operator|.
name|put
argument_list|(
name|EAProps
operator|.
name|entity
argument_list|,
name|getReference
argument_list|(
name|graph
argument_list|,
name|entityAnnotation
argument_list|,
name|ENHANCER_ENTITY_REFERENCE
argument_list|)
argument_list|)
expr_stmt|;
name|eaData
operator|.
name|put
argument_list|(
name|EAProps
operator|.
name|label
argument_list|,
name|getString
argument_list|(
name|graph
argument_list|,
name|entityAnnotation
argument_list|,
name|ENHANCER_ENTITY_LABEL
argument_list|)
argument_list|)
expr_stmt|;
name|eaData
operator|.
name|put
argument_list|(
name|EAProps
operator|.
name|confidence
argument_list|,
name|EnhancementEngineHelper
operator|.
name|get
argument_list|(
name|graph
argument_list|,
name|entityAnnotation
argument_list|,
name|ENHANCER_CONFIDENCE
argument_list|,
name|Double
operator|.
name|class
argument_list|,
name|lf
argument_list|)
argument_list|)
expr_stmt|;
name|entitySuggestionMap
operator|.
name|put
argument_list|(
name|entityAnnotation
argument_list|,
name|eaData
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|UriRef
argument_list|>
name|textAnnotations
init|=
name|getReferences
argument_list|(
name|graph
argument_list|,
name|entityAnnotation
argument_list|,
name|DC_RELATION
argument_list|)
decl_stmt|;
while|while
condition|(
name|textAnnotations
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|UriRef
name|textAnnotation
init|=
name|textAnnotations
operator|.
name|next
argument_list|()
decl_stmt|;
name|Collection
argument_list|<
name|NonLiteral
argument_list|>
name|suggestions
init|=
name|suggestionMap
operator|.
name|get
argument_list|(
name|textAnnotation
argument_list|)
decl_stmt|;
if|if
condition|(
name|suggestions
operator|==
literal|null
condition|)
block|{
name|suggestions
operator|=
operator|new
name|ArrayList
argument_list|<
name|NonLiteral
argument_list|>
argument_list|()
expr_stmt|;
name|suggestionMap
operator|.
name|put
argument_list|(
name|textAnnotation
argument_list|,
name|suggestions
argument_list|)
expr_stmt|;
block|}
name|suggestions
operator|.
name|add
argument_list|(
name|entityAnnotation
argument_list|)
expr_stmt|;
block|}
block|}
comment|// 2) get the TextAnnotations
name|Iterator
argument_list|<
name|Triple
argument_list|>
name|textAnnotations
init|=
name|graph
operator|.
name|filter
argument_list|(
literal|null
argument_list|,
name|RDF
operator|.
name|type
argument_list|,
name|ENHANCER_TEXTANNOTATION
argument_list|)
decl_stmt|;
while|while
condition|(
name|textAnnotations
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|NonLiteral
name|textAnnotation
init|=
name|textAnnotations
operator|.
name|next
argument_list|()
operator|.
name|getSubject
argument_list|()
decl_stmt|;
if|if
condition|(
name|graph
operator|.
name|filter
argument_list|(
name|textAnnotation
argument_list|,
name|DC_RELATION
argument_list|,
literal|null
argument_list|)
operator|.
name|hasNext
argument_list|()
condition|)
block|{
comment|// this is not the most specific occurrence of this name: skip
continue|continue;
block|}
name|String
name|text
init|=
name|getString
argument_list|(
name|graph
argument_list|,
name|textAnnotation
argument_list|,
name|Properties
operator|.
name|ENHANCER_SELECTED_TEXT
argument_list|)
decl_stmt|;
if|if
condition|(
name|text
operator|==
literal|null
condition|)
block|{
comment|//ignore text annotations without text
continue|continue;
block|}
name|Iterator
argument_list|<
name|UriRef
argument_list|>
name|types
init|=
name|getReferences
argument_list|(
name|graph
argument_list|,
name|textAnnotation
argument_list|,
name|DC_TYPE
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|types
operator|.
name|hasNext
argument_list|()
condition|)
block|{
comment|//create an iterator over null in case no types are present
name|types
operator|=
name|Collections
operator|.
name|singleton
argument_list|(
operator|(
name|UriRef
operator|)
literal|null
argument_list|)
operator|.
name|iterator
argument_list|()
expr_stmt|;
block|}
while|while
condition|(
name|types
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|UriRef
name|type
init|=
name|types
operator|.
name|next
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|EntityExtractionSummary
argument_list|>
name|occurrenceMap
init|=
name|extractionsByTypeMap
operator|.
name|get
argument_list|(
name|type
argument_list|)
decl_stmt|;
if|if
condition|(
name|occurrenceMap
operator|==
literal|null
condition|)
block|{
name|occurrenceMap
operator|=
operator|new
name|TreeMap
argument_list|<
name|String
argument_list|,
name|EntityExtractionSummary
argument_list|>
argument_list|(
name|String
operator|.
name|CASE_INSENSITIVE_ORDER
argument_list|)
expr_stmt|;
name|extractionsByTypeMap
operator|.
name|put
argument_list|(
name|type
argument_list|,
name|occurrenceMap
argument_list|)
expr_stmt|;
block|}
name|EntityExtractionSummary
name|entity
init|=
name|occurrenceMap
operator|.
name|get
argument_list|(
name|text
argument_list|)
decl_stmt|;
if|if
condition|(
name|entity
operator|==
literal|null
condition|)
block|{
name|entity
operator|=
operator|new
name|EntityExtractionSummary
argument_list|(
name|text
argument_list|,
name|type
argument_list|,
name|defaultThumbnails
argument_list|)
expr_stmt|;
name|occurrenceMap
operator|.
name|put
argument_list|(
name|text
argument_list|,
name|entity
argument_list|)
expr_stmt|;
block|}
name|Collection
argument_list|<
name|NonLiteral
argument_list|>
name|suggestions
init|=
name|suggestionMap
operator|.
name|get
argument_list|(
name|textAnnotation
argument_list|)
decl_stmt|;
if|if
condition|(
name|suggestions
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|NonLiteral
name|entityAnnotation
range|:
name|suggestions
control|)
block|{
name|Map
argument_list|<
name|EAProps
argument_list|,
name|Object
argument_list|>
name|eaData
init|=
name|entitySuggestionMap
operator|.
name|get
argument_list|(
name|entityAnnotation
argument_list|)
decl_stmt|;
name|entity
operator|.
name|addSuggestion
argument_list|(
operator|(
name|UriRef
operator|)
name|eaData
operator|.
name|get
argument_list|(
name|EAProps
operator|.
name|entity
argument_list|)
argument_list|,
operator|(
name|String
operator|)
name|eaData
operator|.
name|get
argument_list|(
name|EAProps
operator|.
name|label
argument_list|)
argument_list|,
operator|(
name|Double
operator|)
name|eaData
operator|.
name|get
argument_list|(
name|EAProps
operator|.
name|confidence
argument_list|)
argument_list|,
name|graph
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
specifier|public
name|ChainExecution
name|getChainExecution
parameter_list|()
block|{
return|return
name|chainExecution
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|Execution
argument_list|>
name|getEngineExecutions
parameter_list|()
block|{
return|return
name|engineExecutions
return|;
block|}
specifier|public
specifier|static
class|class
name|EntityExtractionSummary
implements|implements
name|Comparable
argument_list|<
name|EntityExtractionSummary
argument_list|>
block|{
specifier|protected
specifier|final
name|String
name|name
decl_stmt|;
specifier|protected
specifier|final
name|UriRef
name|type
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|EntitySuggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|EntitySuggestion
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|mentions
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
specifier|final
name|Map
argument_list|<
name|UriRef
argument_list|,
name|String
argument_list|>
name|defaultThumbnails
decl_stmt|;
specifier|public
name|EntityExtractionSummary
parameter_list|(
name|String
name|name
parameter_list|,
name|UriRef
name|type
parameter_list|,
name|Map
argument_list|<
name|UriRef
argument_list|,
name|String
argument_list|>
name|defaultThumbnails
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|mentions
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|this
operator|.
name|defaultThumbnails
operator|=
name|defaultThumbnails
expr_stmt|;
block|}
specifier|public
name|void
name|addSuggestion
parameter_list|(
name|UriRef
name|uri
parameter_list|,
name|String
name|label
parameter_list|,
name|Double
name|confidence
parameter_list|,
name|TripleCollection
name|properties
parameter_list|)
block|{
name|EntitySuggestion
name|suggestion
init|=
operator|new
name|EntitySuggestion
argument_list|(
name|uri
argument_list|,
name|type
argument_list|,
name|label
argument_list|,
name|confidence
argument_list|,
name|properties
argument_list|,
name|defaultThumbnails
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|suggestions
operator|.
name|contains
argument_list|(
name|suggestion
argument_list|)
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
name|suggestion
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|suggestions
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
name|EntitySuggestion
name|bestGuess
init|=
name|getBestGuess
argument_list|()
decl_stmt|;
if|if
condition|(
name|bestGuess
operator|!=
literal|null
condition|)
block|{
return|return
name|bestGuess
operator|.
name|getLabel
argument_list|()
return|;
block|}
return|return
name|name
return|;
block|}
specifier|public
name|String
name|getUri
parameter_list|()
block|{
name|EntitySuggestion
name|bestGuess
init|=
name|getBestGuess
argument_list|()
decl_stmt|;
if|if
condition|(
name|bestGuess
operator|!=
literal|null
condition|)
block|{
return|return
name|bestGuess
operator|.
name|getUri
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getSummary
parameter_list|()
block|{
if|if
condition|(
name|suggestions
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
literal|""
return|;
block|}
return|return
name|suggestions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSummary
argument_list|()
return|;
block|}
specifier|public
name|String
name|getThumbnailSrc
parameter_list|()
block|{
if|if
condition|(
name|suggestions
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|defaultThumbnails
operator|.
name|get
argument_list|(
name|type
argument_list|)
return|;
block|}
return|return
name|suggestions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getThumbnailSrc
argument_list|()
return|;
block|}
specifier|public
name|String
name|getMissingThumbnailSrc
parameter_list|()
block|{
return|return
name|defaultThumbnails
operator|.
name|get
argument_list|(
name|type
argument_list|)
return|;
block|}
specifier|public
name|EntitySuggestion
name|getBestGuess
parameter_list|()
block|{
if|if
condition|(
name|suggestions
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|suggestions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|EntitySuggestion
argument_list|>
name|getSuggestions
parameter_list|()
block|{
return|return
name|suggestions
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getMentions
parameter_list|()
block|{
return|return
name|mentions
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|EntityExtractionSummary
name|o
parameter_list|)
block|{
return|return
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|EntityExtractionSummary
name|that
init|=
operator|(
name|EntityExtractionSummary
operator|)
name|o
decl_stmt|;
return|return
operator|!
operator|(
name|name
operator|!=
literal|null
condition|?
operator|!
name|name
operator|.
name|equals
argument_list|(
name|that
operator|.
name|name
argument_list|)
else|:
name|that
operator|.
name|name
operator|!=
literal|null
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|name
operator|!=
literal|null
condition|?
name|name
operator|.
name|hashCode
argument_list|()
else|:
literal|0
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|EntitySuggestion
implements|implements
name|Comparable
argument_list|<
name|EntitySuggestion
argument_list|>
block|{
specifier|protected
specifier|final
name|UriRef
name|uri
decl_stmt|;
specifier|protected
specifier|final
name|UriRef
name|type
decl_stmt|;
specifier|protected
specifier|final
name|String
name|label
decl_stmt|;
specifier|protected
specifier|final
name|Double
name|confidence
decl_stmt|;
specifier|protected
name|TripleCollection
name|entityProperties
decl_stmt|;
specifier|protected
specifier|final
name|Map
argument_list|<
name|UriRef
argument_list|,
name|String
argument_list|>
name|defaultThumbnails
decl_stmt|;
specifier|public
name|EntitySuggestion
parameter_list|(
name|UriRef
name|uri
parameter_list|,
name|UriRef
name|type
parameter_list|,
name|String
name|label
parameter_list|,
name|Double
name|confidence
parameter_list|,
name|TripleCollection
name|entityProperties
parameter_list|,
name|Map
argument_list|<
name|UriRef
argument_list|,
name|String
argument_list|>
name|defaultThumbnails
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
name|this
operator|.
name|label
operator|=
name|label
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|confidence
operator|=
name|confidence
operator|!=
literal|null
condition|?
name|confidence
else|:
literal|0.0
expr_stmt|;
name|this
operator|.
name|entityProperties
operator|=
name|entityProperties
expr_stmt|;
name|this
operator|.
name|defaultThumbnails
operator|=
name|defaultThumbnails
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|EntitySuggestion
name|o
parameter_list|)
block|{
comment|// order suggestions by decreasing confidence
return|return
operator|-
name|confidence
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|confidence
argument_list|)
return|;
block|}
specifier|public
name|String
name|getUri
parameter_list|()
block|{
return|return
name|uri
operator|.
name|getUnicodeString
argument_list|()
return|;
block|}
specifier|public
name|Double
name|getConfidence
parameter_list|()
block|{
return|return
name|confidence
return|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|label
return|;
block|}
specifier|public
name|String
name|getThumbnailSrc
parameter_list|()
block|{
name|Iterator
argument_list|<
name|Triple
argument_list|>
name|thumbnails
init|=
name|entityProperties
operator|.
name|filter
argument_list|(
name|uri
argument_list|,
name|THUMBNAIL
argument_list|,
literal|null
argument_list|)
decl_stmt|;
while|while
condition|(
name|thumbnails
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Resource
name|object
init|=
name|thumbnails
operator|.
name|next
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|instanceof
name|UriRef
condition|)
block|{
return|return
operator|(
operator|(
name|UriRef
operator|)
name|object
operator|)
operator|.
name|getUnicodeString
argument_list|()
return|;
block|}
block|}
comment|//if no dbpedia ontology thumbnail was found. try the same with foaf:depiction
name|thumbnails
operator|=
name|entityProperties
operator|.
name|filter
argument_list|(
name|uri
argument_list|,
name|DEPICTION
argument_list|,
literal|null
argument_list|)
expr_stmt|;
while|while
condition|(
name|thumbnails
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Resource
name|object
init|=
name|thumbnails
operator|.
name|next
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|instanceof
name|UriRef
condition|)
block|{
return|return
operator|(
operator|(
name|UriRef
operator|)
name|object
operator|)
operator|.
name|getUnicodeString
argument_list|()
return|;
block|}
block|}
return|return
name|defaultThumbnails
operator|.
name|get
argument_list|(
name|type
argument_list|)
return|;
block|}
specifier|public
name|String
name|getMissingThumbnailSrc
parameter_list|()
block|{
return|return
name|defaultThumbnails
operator|.
name|get
argument_list|(
name|type
argument_list|)
return|;
block|}
specifier|public
name|String
name|getSummary
parameter_list|()
block|{
name|Iterator
argument_list|<
name|Triple
argument_list|>
name|abstracts
init|=
name|entityProperties
operator|.
name|filter
argument_list|(
name|uri
argument_list|,
name|SUMMARY
argument_list|,
literal|null
argument_list|)
decl_stmt|;
while|while
condition|(
name|abstracts
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Resource
name|object
init|=
name|abstracts
operator|.
name|next
argument_list|()
operator|.
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|instanceof
name|PlainLiteral
condition|)
block|{
name|PlainLiteral
name|abstract_
init|=
operator|(
name|PlainLiteral
operator|)
name|object
decl_stmt|;
if|if
condition|(
operator|new
name|Language
argument_list|(
literal|"en"
argument_list|)
operator|.
name|equals
argument_list|(
name|abstract_
operator|.
name|getLanguage
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|abstract_
operator|.
name|getLexicalForm
argument_list|()
return|;
block|}
block|}
block|}
return|return
literal|""
return|;
block|}
comment|// consider entities with same URI as equal even if we have alternate
comment|// label values
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
specifier|final
name|int
name|prime
init|=
literal|31
decl_stmt|;
name|int
name|result
init|=
literal|1
decl_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|uri
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|uri
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|obj
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getClass
argument_list|()
operator|!=
name|obj
operator|.
name|getClass
argument_list|()
condition|)
return|return
literal|false
return|;
name|EntitySuggestion
name|other
init|=
operator|(
name|EntitySuggestion
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|uri
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|uri
operator|!=
literal|null
condition|)
return|return
literal|false
return|;
block|}
elseif|else
if|if
condition|(
operator|!
name|uri
operator|.
name|equals
argument_list|(
name|other
operator|.
name|uri
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
block|}
specifier|public
name|void
name|setRdfSerializationFormat
parameter_list|(
name|String
name|format
parameter_list|)
block|{
name|serializationFormat
operator|=
name|format
expr_stmt|;
block|}
comment|/**      * @return an RDF/JSON descriptions of places for the word map widget      */
specifier|public
name|String
name|getPlacesAsJSON
parameter_list|()
throws|throws
name|ParseException
throws|,
name|UnsupportedEncodingException
block|{
name|MGraph
name|g
init|=
operator|new
name|IndexedMGraph
argument_list|()
decl_stmt|;
name|LiteralFactory
name|lf
init|=
name|LiteralFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|MGraph
name|metadata
init|=
name|contentItem
operator|.
name|getMetadata
argument_list|()
decl_stmt|;
for|for
control|(
name|EntityExtractionSummary
name|p
range|:
name|getPlaceOccurrences
argument_list|()
control|)
block|{
name|EntitySuggestion
name|bestGuess
init|=
name|p
operator|.
name|getBestGuess
argument_list|()
decl_stmt|;
if|if
condition|(
name|bestGuess
operator|==
literal|null
condition|)
block|{
continue|continue;
block|}
name|UriRef
name|uri
init|=
operator|new
name|UriRef
argument_list|(
name|bestGuess
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|Iterator
argument_list|<
name|Triple
argument_list|>
name|latitudes
init|=
name|metadata
operator|.
name|filter
argument_list|(
name|uri
argument_list|,
name|GEO_LAT
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|latitudes
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|g
operator|.
name|add
argument_list|(
name|latitudes
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Iterator
argument_list|<
name|Triple
argument_list|>
name|longitutes
init|=
name|metadata
operator|.
name|filter
argument_list|(
name|uri
argument_list|,
name|GEO_LONG
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|longitutes
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|g
operator|.
name|add
argument_list|(
name|longitutes
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|g
operator|.
name|add
argument_list|(
operator|new
name|TripleImpl
argument_list|(
name|uri
argument_list|,
name|Properties
operator|.
name|RDFS_LABEL
argument_list|,
name|lf
operator|.
name|createTypedLiteral
argument_list|(
name|bestGuess
operator|.
name|getLabel
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|serialize
argument_list|(
name|out
argument_list|,
name|g
argument_list|,
name|SupportedFormat
operator|.
name|RDF_JSON
argument_list|)
expr_stmt|;
name|String
name|rdfString
init|=
name|out
operator|.
name|toString
argument_list|(
literal|"utf-8"
argument_list|)
decl_stmt|;
return|return
name|rdfString
return|;
block|}
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
name|TEXT_HTML
argument_list|)
specifier|public
name|Response
name|get
parameter_list|(
annotation|@
name|Context
name|HttpHeaders
name|headers
parameter_list|)
block|{
name|ResponseBuilder
name|rb
init|=
name|Response
operator|.
name|ok
argument_list|(
operator|new
name|Viewable
argument_list|(
literal|"index"
argument_list|,
name|this
argument_list|)
argument_list|)
decl_stmt|;
name|rb
operator|.
name|header
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_TYPE
argument_list|,
name|TEXT_HTML
operator|+
literal|"; charset=utf-8"
argument_list|)
expr_stmt|;
name|addCORSOrigin
argument_list|(
name|servletContext
argument_list|,
name|rb
argument_list|,
name|headers
argument_list|)
expr_stmt|;
return|return
name|rb
operator|.
name|build
argument_list|()
return|;
block|}
specifier|public
class|class
name|ExecutionNode
block|{
specifier|private
specifier|final
name|NonLiteral
name|node
decl_stmt|;
specifier|private
specifier|final
name|TripleCollection
name|ep
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|optional
decl_stmt|;
specifier|private
specifier|final
name|String
name|engineName
decl_stmt|;
specifier|public
name|ExecutionNode
parameter_list|(
name|TripleCollection
name|executionPlan
parameter_list|,
name|NonLiteral
name|node
parameter_list|)
block|{
name|this
operator|.
name|node
operator|=
name|node
expr_stmt|;
name|this
operator|.
name|ep
operator|=
name|executionPlan
expr_stmt|;
name|this
operator|.
name|optional
operator|=
name|ExecutionPlanHelper
operator|.
name|isOptional
argument_list|(
name|ep
argument_list|,
name|node
argument_list|)
expr_stmt|;
name|this
operator|.
name|engineName
operator|=
name|ExecutionPlanHelper
operator|.
name|getEngine
argument_list|(
name|ep
argument_list|,
name|node
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isOptional
parameter_list|()
block|{
return|return
name|optional
return|;
block|}
specifier|public
name|String
name|getEngineName
parameter_list|()
block|{
return|return
name|engineName
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|node
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|o
operator|instanceof
name|ExecutionNode
operator|&&
operator|(
operator|(
name|ExecutionNode
operator|)
name|o
operator|)
operator|.
name|node
operator|.
name|equals
argument_list|(
name|node
argument_list|)
return|;
block|}
block|}
specifier|public
class|class
name|Execution
implements|implements
name|Comparable
argument_list|<
name|Execution
argument_list|>
block|{
specifier|protected
name|DateFormat
name|format
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"HH-mm-ss.SSS"
argument_list|)
decl_stmt|;
specifier|protected
specifier|final
name|NonLiteral
name|node
decl_stmt|;
specifier|private
specifier|final
name|ExecutionNode
name|executionNode
decl_stmt|;
specifier|private
specifier|final
name|UriRef
name|status
decl_stmt|;
specifier|protected
specifier|final
name|TripleCollection
name|graph
decl_stmt|;
specifier|private
specifier|final
name|Date
name|started
decl_stmt|;
specifier|private
specifier|final
name|Date
name|completed
decl_stmt|;
specifier|private
specifier|final
name|Long
name|duration
decl_stmt|;
specifier|private
name|ChainExecution
name|chain
decl_stmt|;
specifier|public
name|Execution
parameter_list|(
name|ChainExecution
name|parent
parameter_list|,
name|TripleCollection
name|graph
parameter_list|,
name|NonLiteral
name|node
parameter_list|)
block|{
name|this
operator|.
name|chain
operator|=
name|parent
expr_stmt|;
name|this
operator|.
name|graph
operator|=
name|graph
expr_stmt|;
name|this
operator|.
name|node
operator|=
name|node
expr_stmt|;
name|NonLiteral
name|executionNode
init|=
name|ExecutionMetadataHelper
operator|.
name|getExecutionNode
argument_list|(
name|graph
argument_list|,
name|node
argument_list|)
decl_stmt|;
if|if
condition|(
name|executionNode
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|executionNode
operator|=
operator|new
name|ExecutionNode
argument_list|(
name|graph
argument_list|,
name|executionNode
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|executionNode
operator|=
literal|null
expr_stmt|;
block|}
name|this
operator|.
name|status
operator|=
name|getReference
argument_list|(
name|graph
argument_list|,
name|node
argument_list|,
name|ExecutionMetadata
operator|.
name|STATUS
argument_list|)
expr_stmt|;
name|this
operator|.
name|started
operator|=
name|ExecutionMetadataHelper
operator|.
name|getStarted
argument_list|(
name|graph
argument_list|,
name|node
argument_list|)
expr_stmt|;
name|this
operator|.
name|completed
operator|=
name|ExecutionMetadataHelper
operator|.
name|getCompleted
argument_list|(
name|graph
argument_list|,
name|node
argument_list|)
expr_stmt|;
if|if
condition|(
name|started
operator|!=
literal|null
operator|&&
name|completed
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|duration
operator|=
name|completed
operator|.
name|getTime
argument_list|()
operator|-
name|started
operator|.
name|getTime
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|duration
operator|=
literal|null
expr_stmt|;
block|}
block|}
comment|/**          * @return the executionNode          */
specifier|public
name|ExecutionNode
name|getExecutionNode
parameter_list|()
block|{
return|return
name|executionNode
return|;
block|}
specifier|public
name|String
name|getStatusText
parameter_list|()
block|{
if|if
condition|(
name|ExecutionMetadata
operator|.
name|STATUS_COMPLETED
operator|.
name|equals
argument_list|(
name|status
argument_list|)
condition|)
block|{
return|return
literal|"completed"
return|;
block|}
elseif|else
if|if
condition|(
name|ExecutionMetadata
operator|.
name|STATUS_FAILED
operator|.
name|equals
argument_list|(
name|status
argument_list|)
condition|)
block|{
return|return
literal|"failed"
return|;
block|}
elseif|else
if|if
condition|(
name|ExecutionMetadata
operator|.
name|STATUS_IN_PROGRESS
operator|.
name|equals
argument_list|(
name|status
argument_list|)
condition|)
block|{
return|return
literal|"in-progress"
return|;
block|}
elseif|else
if|if
condition|(
name|ExecutionMetadata
operator|.
name|STATUS_SCHEDULED
operator|.
name|equals
argument_list|(
name|status
argument_list|)
condition|)
block|{
return|return
literal|"scheduled"
return|;
block|}
elseif|else
if|if
condition|(
name|ExecutionMetadata
operator|.
name|STATUS_SKIPPED
operator|.
name|equals
argument_list|(
name|status
argument_list|)
condition|)
block|{
return|return
literal|"skipped"
return|;
block|}
else|else
block|{
return|return
literal|"unknown"
return|;
block|}
block|}
specifier|public
name|Date
name|getStart
parameter_list|()
block|{
return|return
name|started
return|;
block|}
specifier|public
name|Date
name|getCompleted
parameter_list|()
block|{
return|return
name|completed
return|;
block|}
specifier|public
name|boolean
name|isFailed
parameter_list|()
block|{
return|return
name|ExecutionMetadata
operator|.
name|STATUS_FAILED
operator|.
name|equals
argument_list|(
name|status
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isCompleted
parameter_list|()
block|{
return|return
name|ExecutionMetadata
operator|.
name|STATUS_COMPLETED
operator|.
name|equals
argument_list|(
name|status
argument_list|)
return|;
block|}
specifier|public
name|String
name|getOffsetText
parameter_list|()
block|{
if|if
condition|(
name|chain
operator|==
literal|null
operator|||
name|chain
operator|.
name|getStart
argument_list|()
operator|==
literal|null
operator|||
name|started
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
else|else
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"%6dms"
argument_list|,
name|started
operator|.
name|getTime
argument_list|()
operator|-
name|chain
operator|.
name|getStart
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
name|String
name|getDurationText
parameter_list|()
block|{
if|if
condition|(
name|duration
operator|==
literal|null
condition|)
block|{
return|return
literal|"[duration not available]"
return|;
block|}
elseif|else
if|if
condition|(
name|duration
operator|<
literal|1025
condition|)
block|{
return|return
name|duration
operator|+
literal|"ms"
return|;
block|}
else|else
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"%.2fsec"
argument_list|,
operator|(
name|duration
operator|.
name|floatValue
argument_list|()
operator|/
literal|1000
operator|)
argument_list|)
return|;
block|}
block|}
specifier|public
name|String
name|getStartTime
parameter_list|()
block|{
if|if
condition|(
name|started
operator|!=
literal|null
condition|)
block|{
return|return
name|format
operator|.
name|format
argument_list|(
name|started
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|"unknown"
return|;
block|}
block|}
specifier|public
name|String
name|getCompletionTime
parameter_list|()
block|{
if|if
condition|(
name|completed
operator|!=
literal|null
condition|)
block|{
return|return
name|format
operator|.
name|format
argument_list|(
name|completed
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|"unknown"
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|node
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|o
operator|instanceof
name|ExecutionNode
operator|&&
operator|(
operator|(
name|ExecutionNode
operator|)
name|o
operator|)
operator|.
name|node
operator|.
name|equals
argument_list|(
name|node
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|Execution
name|e2
parameter_list|)
block|{
if|if
condition|(
name|started
operator|!=
literal|null
operator|&&
name|e2
operator|.
name|started
operator|!=
literal|null
condition|)
block|{
name|int
name|result
init|=
name|started
operator|.
name|compareTo
argument_list|(
name|e2
operator|.
name|started
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|completed
operator|!=
literal|null
operator|&&
name|e2
operator|.
name|completed
operator|!=
literal|null
condition|)
block|{
name|result
operator|=
name|started
operator|.
name|compareTo
argument_list|(
name|e2
operator|.
name|completed
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|==
literal|0
condition|)
block|{
return|return
name|node
operator|.
name|toString
argument_list|()
operator|.
name|compareTo
argument_list|(
name|e2
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|result
return|;
block|}
block|}
elseif|else
if|if
condition|(
name|completed
operator|==
literal|null
operator|&&
name|e2
operator|.
name|completed
operator|==
literal|null
condition|)
block|{
return|return
name|node
operator|.
name|toString
argument_list|()
operator|.
name|compareTo
argument_list|(
name|e2
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|completed
operator|==
literal|null
condition|?
operator|-
literal|1
else|:
literal|1
return|;
block|}
block|}
else|else
block|{
return|return
name|result
return|;
block|}
block|}
elseif|else
if|if
condition|(
name|started
operator|==
literal|null
operator|&&
name|e2
operator|.
name|started
operator|==
literal|null
condition|)
block|{
return|return
name|node
operator|.
name|toString
argument_list|()
operator|.
name|compareTo
argument_list|(
name|e2
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|started
operator|==
literal|null
condition|?
operator|-
literal|1
else|:
literal|1
return|;
block|}
block|}
block|}
specifier|public
class|class
name|ChainExecution
extends|extends
name|Execution
block|{
specifier|private
specifier|final
name|String
name|chainName
decl_stmt|;
specifier|public
name|ChainExecution
parameter_list|(
name|TripleCollection
name|graph
parameter_list|,
name|NonLiteral
name|node
parameter_list|)
block|{
name|super
argument_list|(
literal|null
argument_list|,
name|graph
argument_list|,
name|node
argument_list|)
expr_stmt|;
name|NonLiteral
name|ep
init|=
name|ExecutionMetadataHelper
operator|.
name|getExecutionPlanNode
argument_list|(
name|graph
argument_list|,
name|node
argument_list|)
decl_stmt|;
if|if
condition|(
name|ep
operator|!=
literal|null
condition|)
block|{
name|chainName
operator|=
name|EnhancementEngineHelper
operator|.
name|getString
argument_list|(
name|graph
argument_list|,
name|ep
argument_list|,
name|ExecutionPlan
operator|.
name|CHAIN
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|chainName
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getChainName
parameter_list|()
block|{
return|return
name|chainName
return|;
block|}
block|}
block|}
end_class

end_unit

