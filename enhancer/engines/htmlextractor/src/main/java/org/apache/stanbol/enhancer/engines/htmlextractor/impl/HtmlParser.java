begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|engines
operator|.
name|htmlextractor
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|tidy
operator|.
name|Tidy
import|;
end_import

begin_comment
comment|/**  * HtmlParser.java  *  * @author<a href="mailto:kasper@dfki.de">Walter Kasper</a>  *  */
end_comment

begin_class
specifier|public
class|class
name|HtmlParser
block|{
comment|/**      * This contains the logger.      */
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|HtmlParser
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Tidy
name|htmlToXmlParser
decl_stmt|;
specifier|public
name|HtmlParser
parameter_list|()
block|{
name|this
operator|.
name|htmlToXmlParser
operator|=
operator|new
name|Tidy
argument_list|()
expr_stmt|;
name|this
operator|.
name|htmlToXmlParser
operator|.
name|setTidyMark
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|this
operator|.
name|htmlToXmlParser
operator|.
name|setDropEmptyParas
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|htmlToXmlParser
operator|.
name|setQuiet
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|htmlToXmlParser
operator|.
name|setQuoteAmpersand
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|htmlToXmlParser
operator|.
name|setShowWarnings
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|this
operator|.
name|htmlToXmlParser
operator|.
name|setShowErrors
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|this
operator|.
name|htmlToXmlParser
operator|.
name|setNumEntities
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|htmlToXmlParser
operator|.
name|setHideComments
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|htmlToXmlParser
operator|.
name|setOutputEncoding
argument_list|(
literal|"UTF-8"
argument_list|)
expr_stmt|;
name|this
operator|.
name|htmlToXmlParser
operator|.
name|setXmlOut
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Document
name|getDOM
parameter_list|(
name|String
name|html
parameter_list|)
block|{
if|if
condition|(
name|html
operator|!=
literal|null
condition|)
block|{
return|return
name|getDOM
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|html
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|synchronized
name|Document
name|getDOM
parameter_list|(
name|InputStream
name|html
parameter_list|,
name|String
name|charset
parameter_list|)
block|{
if|if
condition|(
name|charset
operator|!=
literal|null
condition|)
block|{
name|htmlToXmlParser
operator|.
name|setInputEncoding
argument_list|(
name|charset
argument_list|)
expr_stmt|;
block|}
name|Document
name|doc
init|=
name|htmlToXmlParser
operator|.
name|parseDOM
argument_list|(
name|html
argument_list|,
literal|null
argument_list|)
decl_stmt|;
return|return
name|doc
return|;
block|}
block|}
end_class

end_unit

