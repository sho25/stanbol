# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


stanbol.enhancer.engine.name.name=Name
stanbol.enhancer.engine.name.description=The name of the enhancement engine as \
used in the RESTful interface '/engine/<name>'

service.ranking.name=Ranking
service.ranking.description=If two enhancement engines with the same name are active the \
one with the higher ranking will be used to process parsed content items.

#===============================================================================
#Properties and Options used to configure LangIdEnhancementEngine
#===============================================================================

org.apache.stanbol.enhancer.engines.refactor.RefactorEnhancementEngine.name=Apache \
Stanbol Enhancer Engine: Refactor
org.apache.stanbol.enhancer.engines.refactor.RefactorEnhancementEngine.description=Allows \
to refactor the metadata produced by other enhancement engines e.g. to align the \
output of the Stanbol Enhancer to schema.org.

engine.refactor.scope.name=Scope
engine.refactor.scope.description=The scope used to perform the refactoring

engine.refactor.recipe.id.name=Recipe ID
engine.refactor.recipe.id.description=The ID used for internally identifying the recipe used to transform the metadata of \
processed content items.

engine.refactor.recipe.location.name=Recipe Location
engine.refactor.recipe.location.description=The location from which the recipe of rules will be loaded. \  
It could be either a URL or a file system location. If not filled the default recipe will be loaded.

engine.refactor.recipe.id.name=Recipe ID
engine.refactor.recipe.id.description=The ID used for identifying the recipe in the RuleStore.

engine.refactor.scope.core.ontology.name=Resolvable Ontologies
engine.refactor.scope.core.ontology.description=To fix a set of resolvable ontology \
URIs for the scope's ontologies.

engine.refactor.append.graphs.name=Append Graphs
engine.refactor.append.graphs.description=If true: the previously generated RDF is \
deleted and substituted with the new one. If false: the new one is appended to the \
old RDF. Possible value: true or false.

engine.refactor.entityhub.name=Use Entityhub
engine.refactor.entityhub.description=If true: entities are fetched via the EntityHub. \
If false: entities are fetched on-line. Possible value: true or false.

