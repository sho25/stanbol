begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|engines
operator|.
name|metaxa
operator|.
name|core
operator|.
name|mp3
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ontoware
operator|.
name|rdf2go
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ontoware
operator|.
name|rdf2go
operator|.
name|model
operator|.
name|node
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ontoware
operator|.
name|rdf2go
operator|.
name|model
operator|.
name|node
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ontoware
operator|.
name|rdf2go
operator|.
name|vocabulary
operator|.
name|RDF
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticdesktop
operator|.
name|aperture
operator|.
name|extractor
operator|.
name|AbstractFileExtractor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticdesktop
operator|.
name|aperture
operator|.
name|extractor
operator|.
name|ExtractorException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticdesktop
operator|.
name|aperture
operator|.
name|rdf
operator|.
name|RDFContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticdesktop
operator|.
name|aperture
operator|.
name|rdf
operator|.
name|util
operator|.
name|ModelUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticdesktop
operator|.
name|aperture
operator|.
name|vocabulary
operator|.
name|NCO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticdesktop
operator|.
name|aperture
operator|.
name|vocabulary
operator|.
name|NID3
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mpatric
operator|.
name|mp3agic
operator|.
name|ID3Wrapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mpatric
operator|.
name|mp3agic
operator|.
name|ID3v1
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mpatric
operator|.
name|mp3agic
operator|.
name|ID3v2
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mpatric
operator|.
name|mp3agic
operator|.
name|InvalidDataException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mpatric
operator|.
name|mp3agic
operator|.
name|Mp3File
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mpatric
operator|.
name|mp3agic
operator|.
name|UnsupportedTagException
import|;
end_import

begin_comment
comment|/**  *  * @author<a href="mailto:kasper@dfki.de">Walter Kasper</a>  *   */
end_comment

begin_class
specifier|public
class|class
name|MP3FileExtractor
extends|extends
name|AbstractFileExtractor
block|{
specifier|private
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MP3FileExtractor
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|performExtraction
parameter_list|(
name|URI
name|arg0
parameter_list|,
name|File
name|arg1
parameter_list|,
name|Charset
name|arg2
parameter_list|,
name|String
name|arg3
parameter_list|,
name|RDFContainer
name|result
parameter_list|)
throws|throws
name|ExtractorException
block|{
try|try
block|{
name|Mp3File
name|mp3File
init|=
operator|new
name|Mp3File
argument_list|(
name|arg1
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|ID3v1
name|id3v1
init|=
name|mp3File
operator|.
name|getId3v1Tag
argument_list|()
decl_stmt|;
name|ID3v2
name|id3v2
init|=
name|mp3File
operator|.
name|getId3v2Tag
argument_list|()
decl_stmt|;
name|ID3Wrapper
name|wrapper
init|=
operator|new
name|ID3Wrapper
argument_list|(
name|id3v1
argument_list|,
name|id3v2
argument_list|)
decl_stmt|;
name|addId3Fields
argument_list|(
name|wrapper
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
name|RDF
operator|.
name|type
argument_list|,
name|NID3
operator|.
name|ID3Audio
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedTagException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ExtractorException
argument_list|(
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|InvalidDataException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ExtractorException
argument_list|(
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ExtractorException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|addId3Fields
parameter_list|(
name|ID3Wrapper
name|wrapper
parameter_list|,
name|RDFContainer
name|result
parameter_list|)
block|{
name|String
name|value
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
name|value
operator|=
name|wrapper
operator|.
name|getAlbum
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|result
operator|.
name|add
argument_list|(
name|NID3
operator|.
name|albumTitle
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|value
operator|=
name|wrapper
operator|.
name|getArtist
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|addSimpleContact
argument_list|(
name|NID3
operator|.
name|originalArtist
argument_list|,
name|value
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|value
operator|=
name|wrapper
operator|.
name|getComment
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|result
operator|.
name|add
argument_list|(
name|NID3
operator|.
name|comments
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|value
operator|=
name|wrapper
operator|.
name|getComposer
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|addSimpleContact
argument_list|(
name|NID3
operator|.
name|composer
argument_list|,
name|value
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|value
operator|=
name|wrapper
operator|.
name|getCopyright
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|result
operator|.
name|add
argument_list|(
name|NID3
operator|.
name|copyrightMessage
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|value
operator|=
name|wrapper
operator|.
name|getEncoder
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|addSimpleContact
argument_list|(
name|NID3
operator|.
name|encodedBy
argument_list|,
name|value
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|value
operator|=
name|wrapper
operator|.
name|getGenreDescription
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|result
operator|.
name|add
argument_list|(
name|NID3
operator|.
name|contentType
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|value
operator|=
name|wrapper
operator|.
name|getTitle
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|result
operator|.
name|add
argument_list|(
name|NID3
operator|.
name|title
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|value
operator|=
name|wrapper
operator|.
name|getOriginalArtist
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|addSimpleContact
argument_list|(
name|NID3
operator|.
name|originalArtist
argument_list|,
name|value
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|value
operator|=
name|wrapper
operator|.
name|getTrack
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|addSimpleContact
argument_list|(
name|NID3
operator|.
name|trackNumber
argument_list|,
name|value
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|value
operator|=
name|wrapper
operator|.
name|getYear
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|int
name|year
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|result
operator|.
name|add
argument_list|(
name|NID3
operator|.
name|recordingYear
argument_list|,
name|year
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{}
block|}
block|}
specifier|protected
name|void
name|addSimpleContact
parameter_list|(
name|URI
name|property
parameter_list|,
name|String
name|fullname
parameter_list|,
name|RDFContainer
name|container
parameter_list|)
block|{
name|Model
name|model
init|=
name|container
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|Resource
name|resource
init|=
name|ModelUtil
operator|.
name|generateRandomResource
argument_list|(
name|model
argument_list|)
decl_stmt|;
name|model
operator|.
name|addStatement
argument_list|(
name|resource
argument_list|,
name|RDF
operator|.
name|type
argument_list|,
name|NCO
operator|.
name|Contact
argument_list|)
expr_stmt|;
name|model
operator|.
name|addStatement
argument_list|(
name|resource
argument_list|,
name|NCO
operator|.
name|fullname
argument_list|,
name|fullname
argument_list|)
expr_stmt|;
name|model
operator|.
name|addStatement
argument_list|(
name|container
operator|.
name|getDescribedUri
argument_list|()
argument_list|,
name|property
argument_list|,
name|resource
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

