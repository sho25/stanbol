begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|jobmanager
operator|.
name|event
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|jobmanager
operator|.
name|event
operator|.
name|Constants
operator|.
name|TOPIC_JOB_MANAGER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|EnhancementEngineHelper
operator|.
name|getString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|ExecutionPlanHelper
operator|.
name|getExecutable
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|ExecutionPlan
operator|.
name|ENGINE
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|Graph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|NonLiteral
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Deactivate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|Chain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ChainException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ChainManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ContentItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|EngineException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|EnhancementEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|EnhancementEngineManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|EnhancementJobManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|EnginesTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|ExecutionPlanHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceRegistration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|event
operator|.
name|EventAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|event
operator|.
name|EventHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
annotation|@
name|Component
argument_list|(
name|immediate
operator|=
literal|true
argument_list|,
name|metatype
operator|=
literal|true
argument_list|)
annotation|@
name|Service
annotation|@
name|Properties
argument_list|(
name|value
operator|=
block|{
comment|//register with a ranking lower than 0 to allow easy overriding by specific
annotation|@
name|Property
argument_list|(
name|name
operator|=
name|Constants
operator|.
name|SERVICE_RANKING
argument_list|,
name|intValue
operator|=
name|EventJobManagerImpl
operator|.
name|DEFAULT_SERVICE_RANKING
argument_list|)
block|}
argument_list|)
specifier|public
class|class
name|EventJobManagerImpl
implements|implements
name|EnhancementJobManager
block|{
specifier|private
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|EventJobManagerImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_SERVICE_RANKING
init|=
literal|0
decl_stmt|;
annotation|@
name|Reference
specifier|protected
name|ChainManager
name|chainManager
decl_stmt|;
annotation|@
name|Reference
specifier|protected
name|EnhancementEngineManager
name|engineManager
decl_stmt|;
annotation|@
name|Reference
specifier|protected
name|EventAdmin
name|eventAdmin
decl_stmt|;
specifier|private
name|ServiceRegistration
name|jobHandlerRegistration
decl_stmt|;
specifier|private
name|EnhancementJobHandler
name|jobHandler
decl_stmt|;
comment|/**      * Instantiates and registers the {@link EnhancementJobHandler} as      * {@link EventHandler} for the topic       * {@link org.apache.stanbol.enhancer.jobmanager.event.Constants#TOPIC_JOB_MANAGER}      * @param ctx      */
annotation|@
name|Activate
specifier|protected
name|void
name|activate
parameter_list|(
name|ComponentContext
name|ctx
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"activate {}"
argument_list|,
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|jobHandler
operator|=
operator|new
name|EnhancementJobHandler
argument_list|(
name|eventAdmin
argument_list|,
name|engineManager
argument_list|)
expr_stmt|;
name|Dictionary
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|event
operator|.
name|EventConstants
operator|.
name|EVENT_TOPIC
argument_list|,
name|TOPIC_JOB_MANAGER
argument_list|)
expr_stmt|;
name|jobHandlerRegistration
operator|=
name|ctx
operator|.
name|getBundleContext
argument_list|()
operator|.
name|registerService
argument_list|(
name|EventHandler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|jobHandler
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
comment|/**      * Unregisters the {@link EnhancementJobHandler}      * @param ctx      */
annotation|@
name|Deactivate
specifier|protected
name|void
name|deactivate
parameter_list|(
name|ComponentContext
name|ctx
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"deactivate {}"
argument_list|,
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|EnhancementJobHandler
name|jobHandler
init|=
name|this
operator|.
name|jobHandler
decl_stmt|;
comment|//set first the field to null
name|this
operator|.
name|jobHandler
operator|=
literal|null
expr_stmt|;
comment|//and than close the instance to ensure that running jobs are shut down
comment|//correctly
name|jobHandler
operator|.
name|close
argument_list|()
expr_stmt|;
name|jobHandlerRegistration
operator|.
name|unregister
argument_list|()
expr_stmt|;
name|jobHandlerRegistration
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|enhanceContent
parameter_list|(
name|ContentItem
name|ci
parameter_list|)
throws|throws
name|EngineException
throws|,
name|ChainException
block|{
name|Chain
name|defaultChain
init|=
name|chainManager
operator|.
name|getDefault
argument_list|()
decl_stmt|;
if|if
condition|(
name|defaultChain
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ChainException
argument_list|(
literal|"Unable to enhance ContentItem '"
operator|+
name|ci
operator|.
name|getUri
argument_list|()
operator|+
literal|"' because currently no enhancement chain is active. Please"
operator|+
literal|"configure a Chain or enable the default chain"
argument_list|)
throw|;
block|}
name|enhanceContent
argument_list|(
name|ci
argument_list|,
name|defaultChain
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|enhanceContent
parameter_list|(
name|ContentItem
name|ci
parameter_list|,
name|Chain
name|chain
parameter_list|)
throws|throws
name|EngineException
throws|,
name|ChainException
block|{
if|if
condition|(
name|ci
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"The parsed contentItem MUST NOT be NULL!"
argument_list|)
throw|;
block|}
if|if
condition|(
name|chain
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unable to enhance ContentItem '"
operator|+
name|ci
operator|.
name|getUri
argument_list|()
operator|+
literal|"' because NULL was parsed as enhancement chain"
argument_list|)
throw|;
block|}
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|EnhancementJob
name|job
init|=
operator|new
name|EnhancementJob
argument_list|(
name|ci
argument_list|,
name|chain
operator|.
name|getName
argument_list|()
argument_list|,
name|chain
operator|.
name|getExecutionPlan
argument_list|()
argument_list|)
decl_stmt|;
comment|//start the execution
comment|//wait for the results
name|Object
name|object
init|=
name|jobHandler
operator|.
name|register
argument_list|(
name|job
argument_list|)
decl_stmt|;
while|while
condition|(
operator|!
name|job
operator|.
name|isFinished
argument_list|()
operator|&
name|jobHandler
operator|!=
literal|null
condition|)
block|{
synchronized|synchronized
init|(
name|object
init|)
block|{
try|try
block|{
name|object
operator|.
name|wait
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Interupped for EnhancementJob if ContentItem {}"
argument_list|,
name|job
operator|.
name|getContentItem
argument_list|()
operator|.
name|getUri
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|log
operator|.
name|info
argument_list|(
literal|"{} EnhancementJob for ContentItem {} after {}ms"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|job
operator|.
name|isFailed
argument_list|()
condition|?
literal|"Failed"
else|:
literal|"Finished"
block|,
name|job
operator|.
name|getContentItem
argument_list|()
operator|.
name|getUri
argument_list|()
block|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|start
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|job
operator|.
name|isFailed
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|ChainException
argument_list|(
name|job
operator|.
name|getErrorMessage
argument_list|()
argument_list|,
name|job
operator|.
name|getError
argument_list|()
argument_list|)
throw|;
block|}
if|if
condition|(
operator|!
name|job
operator|.
name|isFinished
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|ChainException
argument_list|(
literal|"EnhancementJobManager was deactivated while"
operator|+
literal|"enhancing the parsed ContentItem "
operator|+
name|job
operator|.
name|getContentItem
argument_list|()
operator|+
literal|"(EnhancementJobManager type: "
operator|+
name|getClass
argument_list|()
operator|+
literal|")!"
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|EnhancementEngine
argument_list|>
name|getActiveEngines
parameter_list|()
block|{
comment|//This implementation return the list of active engined for the default
comment|//Chain in the order they would be executed
name|Chain
name|defaultChain
init|=
name|chainManager
operator|.
name|getDefault
argument_list|()
decl_stmt|;
if|if
condition|(
name|defaultChain
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Currently no enhancement chain is "
operator|+
literal|"active. Please configure a Chain or enable the default chain"
argument_list|)
throw|;
block|}
name|Graph
name|ep
decl_stmt|;
try|try
block|{
name|ep
operator|=
name|defaultChain
operator|.
name|getExecutionPlan
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ChainException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Unable to get Execution Plan for "
operator|+
literal|"default enhancement chain (name: '"
operator|+
name|defaultChain
operator|.
name|getName
argument_list|()
operator|+
literal|"'| class: '"
operator|+
name|defaultChain
operator|.
name|getClass
argument_list|()
operator|+
literal|"')!"
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
name|ExecutionPlanHelper
operator|.
name|getActiveEngines
argument_list|(
name|engineManager
argument_list|,
name|ep
argument_list|)
return|;
block|}
block|}
end_class

end_unit

