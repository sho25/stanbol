begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|interaction
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Box
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextArea
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SwingUtilities
import|;
end_import

begin_comment
comment|/*  * Copyright 2010  * German Research Center for Artificial Intelligence (DFKI)  * Department of Intelligent User Interfaces  * Germany  *  *     http://www.dfki.de/web/forschung/iui  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  * Authors:  *     Sebastian Germesin  *     Massimo Romanelli  *     Tilman Becker  */
end_comment

begin_class
specifier|public
class|class
name|ResultPanel
extends|extends
name|JPanel
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|5932078826093367287L
decl_stmt|;
specifier|private
name|JComboBox
name|resultDocuments
decl_stmt|;
specifier|private
name|ResultDocumentsListener
name|resultDocumentsListener
decl_stmt|;
specifier|private
name|JTextArea
name|documentArea
decl_stmt|;
specifier|public
name|ResultPanel
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|init
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|init
parameter_list|()
block|{
name|resultDocuments
operator|=
operator|new
name|JComboBox
argument_list|()
expr_stmt|;
name|resultDocumentsListener
operator|=
operator|new
name|ResultDocumentsListener
argument_list|()
expr_stmt|;
name|resultDocuments
operator|.
name|addActionListener
argument_list|(
name|resultDocumentsListener
argument_list|)
expr_stmt|;
name|Box
name|resultBox
init|=
name|Box
operator|.
name|createHorizontalBox
argument_list|()
decl_stmt|;
name|resultBox
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"Found documents:"
argument_list|)
argument_list|)
expr_stmt|;
name|resultBox
operator|.
name|add
argument_list|(
name|resultDocuments
argument_list|)
expr_stmt|;
name|documentArea
operator|=
operator|new
name|JTextArea
argument_list|()
expr_stmt|;
name|documentArea
operator|.
name|setLineWrap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|documentArea
operator|.
name|setWrapStyleWord
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|BorderLayout
operator|.
name|NORTH
argument_list|,
name|resultBox
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|BorderLayout
operator|.
name|CENTER
argument_list|,
operator|new
name|JScrollPane
argument_list|(
name|documentArea
argument_list|,
name|JScrollPane
operator|.
name|VERTICAL_SCROLLBAR_AS_NEEDED
argument_list|,
name|JScrollPane
operator|.
name|HORIZONTAL_SCROLLBAR_AS_NEEDED
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addContent
parameter_list|(
specifier|final
name|String
name|title
parameter_list|,
specifier|final
name|String
name|content
parameter_list|)
block|{
name|Runnable
name|runner
init|=
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|documentArea
operator|.
name|setText
argument_list|(
name|content
argument_list|)
expr_stmt|;
comment|//TODO!
block|}
block|}
decl_stmt|;
name|resultDocumentsListener
operator|.
name|addCase
argument_list|(
name|title
argument_list|,
name|runner
argument_list|)
expr_stmt|;
name|resultDocuments
operator|.
name|addItem
argument_list|(
name|title
argument_list|)
expr_stmt|;
block|}
class|class
name|ResultDocumentsListener
implements|implements
name|ActionListener
block|{
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Runnable
argument_list|>
name|cases
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Runnable
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|String
name|item
init|=
call|(
name|String
call|)
argument_list|(
operator|(
name|JComboBox
operator|)
name|e
operator|.
name|getSource
argument_list|()
argument_list|)
operator|.
name|getSelectedItem
argument_list|()
decl_stmt|;
name|Runnable
name|runner
init|=
name|cases
operator|.
name|get
argument_list|(
name|item
argument_list|)
decl_stmt|;
if|if
condition|(
name|runner
operator|!=
literal|null
condition|)
block|{
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
name|runner
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addCase
parameter_list|(
name|String
name|item
parameter_list|,
name|Runnable
name|runner
parameter_list|)
block|{
name|cases
operator|.
name|put
argument_list|(
name|item
argument_list|,
name|runner
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|cases
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|removeCase
parameter_list|(
name|String
name|item
parameter_list|)
block|{
name|cases
operator|.
name|remove
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

