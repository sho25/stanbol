begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_comment
comment|/*  * To change this template, choose Tools | Templates  * and open the template in the editor.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|manager
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|api
operator|.
name|ONManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|ontologymanager
operator|.
name|ontonet
operator|.
name|impl
operator|.
name|ONManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|base
operator|.
name|api
operator|.
name|RuleStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|manager
operator|.
name|changes
operator|.
name|LoadRuleFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|manager
operator|.
name|changes
operator|.
name|RuleStoreImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|apibinding
operator|.
name|OWLManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLAxiom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLClassAssertionAxiom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLDataFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLDataProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLDataPropertyAssertionAxiom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLNamedIndividual
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLObjectProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLObjectPropertyAssertionAxiom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyStorageException
import|;
end_import

begin_comment
comment|/**  *  * @author elvio  */
end_comment

begin_class
specifier|public
class|class
name|LoadRuleFileTest
block|{
specifier|public
name|LoadRuleFileTest
parameter_list|()
block|{     }
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUpClass
parameter_list|()
throws|throws
name|Exception
block|{     }
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDownClass
parameter_list|()
throws|throws
name|Exception
block|{     }
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{     }
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{     }
comment|/**      * Test of LoadRuleFile method, of class LoadRuleFile.      */
annotation|@
name|Test
specifier|public
name|void
name|testKReSLoadRuleFile
parameter_list|()
throws|throws
name|OWLOntologyStorageException
block|{
name|Dictionary
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|configuration
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|ONManager
name|onm
init|=
operator|new
name|ONManagerImpl
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|configuration
argument_list|)
decl_stmt|;
name|Dictionary
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|configuration2
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|//    	configuration2.put(RuleStoreImpl.RULE_ONTOLOGY, "");
name|configuration2
operator|.
name|put
argument_list|(
name|RuleStore
operator|.
name|RULE_NAMESPACE
argument_list|,
literal|"http://kres.iks-project.eu/ontology/meta/rmi.owl#"
argument_list|)
expr_stmt|;
name|RuleStore
name|store
init|=
operator|new
name|RuleStoreImpl
argument_list|(
name|onm
argument_list|,
name|configuration2
argument_list|,
literal|"./src/main/resources/RuleOntology/TestKReSOntologyRules.owl"
argument_list|)
decl_stmt|;
name|RuleStore
name|newstore
init|=
operator|new
name|RuleStoreImpl
argument_list|(
operator|new
name|ONManagerImpl
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|configuration
argument_list|)
argument_list|,
name|configuration2
argument_list|,
name|store
operator|.
name|getOntology
argument_list|()
argument_list|)
decl_stmt|;
comment|//Load the example file
name|LoadRuleFile
name|load
init|=
operator|new
name|LoadRuleFile
argument_list|(
literal|"./src/main/resources/RuleOntology/TestRuleFileExample.txt"
argument_list|,
name|store
argument_list|)
decl_stmt|;
name|OWLOntology
name|result
init|=
name|load
operator|.
name|getStore
argument_list|()
operator|.
name|getOntology
argument_list|()
decl_stmt|;
comment|////////////////////////////////////////////////////////////////////
comment|//Create ontology
name|OWLOntologyManager
name|owlmanager
init|=
name|OWLManager
operator|.
name|createOWLOntologyManager
argument_list|()
decl_stmt|;
name|OWLOntology
name|owlmodel
init|=
name|newstore
operator|.
name|getOntology
argument_list|()
decl_stmt|;
name|OWLDataFactory
name|factory
init|=
name|owlmanager
operator|.
name|getOWLDataFactory
argument_list|()
decl_stmt|;
name|String
name|ID
init|=
name|owlmodel
operator|.
name|getOntologyID
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<"
argument_list|,
literal|""
argument_list|)
operator|.
name|replace
argument_list|(
literal|">"
argument_list|,
literal|""
argument_list|)
operator|+
literal|"#"
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|ID
argument_list|)
expr_stmt|;
comment|//KReSRule
name|OWLClass
name|ontocls
init|=
name|factory
operator|.
name|getOWLClass
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"KReSRule"
argument_list|)
argument_list|)
decl_stmt|;
comment|//MyRuleX
name|String
name|rule
init|=
literal|"PREFIX var http://kres.iksproject.eu/rules# ."
operator|+
literal|"PREFIX dbs http://andriry.altervista.org/tesiSpecialistica/dbs_l1.owl# ."
operator|+
literal|"PREFIX lmm http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl# ."
operator|+
literal|"rule1[dbs:Table(?x) -> lmm:Meaning(?x)]"
decl_stmt|;
name|OWLNamedIndividual
name|ontoind
init|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleX"
argument_list|)
argument_list|)
decl_stmt|;
name|OWLClassAssertionAxiom
name|classAssertion
init|=
name|factory
operator|.
name|getOWLClassAssertionAxiom
argument_list|(
name|ontocls
argument_list|,
name|ontoind
argument_list|)
decl_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|classAssertion
argument_list|)
expr_stmt|;
name|OWLDataProperty
name|dataprop
init|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasDescription"
argument_list|)
argument_list|)
decl_stmt|;
name|OWLDataPropertyAssertionAxiom
name|dataPropAssertion
init|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"My comment to the rule X"
argument_list|)
decl_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasBodyAndHead"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
name|rule
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
comment|//MyRuleA
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleA"
argument_list|)
argument_list|)
expr_stmt|;
name|classAssertion
operator|=
name|factory
operator|.
name|getOWLClassAssertionAxiom
argument_list|(
name|ontocls
argument_list|,
name|ontoind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|classAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasDescription"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"My comment to the rule A"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasBodyAndHead"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"MyRuleABody -> MyRuleAHead"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
comment|//MyRuleB
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleB"
argument_list|)
argument_list|)
expr_stmt|;
name|classAssertion
operator|=
name|factory
operator|.
name|getOWLClassAssertionAxiom
argument_list|(
name|ontocls
argument_list|,
name|ontoind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|classAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasDescription"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"My comment to the rule B"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasBodyAndHead"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"MyRuleBBody -> MyRuleBHead"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
comment|//MyRuleC
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleC"
argument_list|)
argument_list|)
expr_stmt|;
name|classAssertion
operator|=
name|factory
operator|.
name|getOWLClassAssertionAxiom
argument_list|(
name|ontocls
argument_list|,
name|ontoind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|classAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasDescription"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"My comment to the rule C"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasBodyAndHead"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"MyRuleCBody -> MyRuleCHead"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
comment|//MyRuleD
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleD"
argument_list|)
argument_list|)
expr_stmt|;
name|classAssertion
operator|=
name|factory
operator|.
name|getOWLClassAssertionAxiom
argument_list|(
name|ontocls
argument_list|,
name|ontoind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|classAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasDescription"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"My comment to the rule D"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasBodyAndHead"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"MyRuleDBody -> MyRuleDHead"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
comment|//MyRuleE
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleE"
argument_list|)
argument_list|)
expr_stmt|;
name|classAssertion
operator|=
name|factory
operator|.
name|getOWLClassAssertionAxiom
argument_list|(
name|ontocls
argument_list|,
name|ontoind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|classAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasDescription"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"My comment to the rule E"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasBodyAndHead"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"MyRuleEBody -> MyRuleEHead"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
comment|//MyRuleF
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleF"
argument_list|)
argument_list|)
expr_stmt|;
name|classAssertion
operator|=
name|factory
operator|.
name|getOWLClassAssertionAxiom
argument_list|(
name|ontocls
argument_list|,
name|ontoind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|classAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasDescription"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"My comment to the rule F"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasBodyAndHead"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"MyRuleFBody -> MyRuleFHead"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
comment|//Recipe
name|ontocls
operator|=
name|factory
operator|.
name|getOWLClass
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"Recipe"
argument_list|)
argument_list|)
expr_stmt|;
comment|//Add sequence
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRecipe"
argument_list|)
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasDescription"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"My comment to the recipe"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
name|OWLObjectProperty
name|objprop
init|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasRule"
argument_list|)
argument_list|)
decl_stmt|;
name|OWLNamedIndividual
name|ruleind
init|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleC"
argument_list|)
argument_list|)
decl_stmt|;
name|OWLObjectPropertyAssertionAxiom
name|objectPropAssertion
init|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
decl_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|ruleind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleB"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|ruleind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleA"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|objprop
operator|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"startWith"
argument_list|)
argument_list|)
expr_stmt|;
name|ruleind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleC"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|objprop
operator|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"endWith"
argument_list|)
argument_list|)
expr_stmt|;
name|ruleind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleA"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|objprop
operator|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
literal|"http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#directlyPrecedes"
argument_list|)
argument_list|)
expr_stmt|;
name|OWLNamedIndividual
name|ruleindp
init|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleC"
argument_list|)
argument_list|)
decl_stmt|;
name|OWLNamedIndividual
name|ruleindf
init|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleB"
argument_list|)
argument_list|)
decl_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ruleindp
argument_list|,
name|ruleindf
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|ruleindp
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleB"
argument_list|)
argument_list|)
expr_stmt|;
name|ruleindf
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleA"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ruleindp
argument_list|,
name|ruleindf
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRecipe"
argument_list|)
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasSequence"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"http://kres.iks-project.eu/ontology/meta/rmi.owl#MyRuleC, http://kres.iks-project.eu/ontology/meta/rmi.owl#MyRuleB, http://kres.iks-project.eu/ontology/meta/rmi.owl#MyRuleA"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
comment|//Add sequence
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRecipe2"
argument_list|)
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasDescription"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"My comment to the recipe 2"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
name|objprop
operator|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasRule"
argument_list|)
argument_list|)
expr_stmt|;
name|ruleind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleD"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|ruleind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleE"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|objprop
operator|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"startWith"
argument_list|)
argument_list|)
expr_stmt|;
name|ruleind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleE"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|objprop
operator|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"endWith"
argument_list|)
argument_list|)
expr_stmt|;
name|ruleind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleD"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|objprop
operator|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
literal|"http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#directlyPrecedes"
argument_list|)
argument_list|)
expr_stmt|;
name|ruleindp
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleE"
argument_list|)
argument_list|)
expr_stmt|;
name|ruleindf
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleD"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ruleindp
argument_list|,
name|ruleindf
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRecipe2"
argument_list|)
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasSequence"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"http://kres.iks-project.eu/ontology/meta/rmi.owl#MyRuleE, http://kres.iks-project.eu/ontology/meta/rmi.owl#MyRuleD"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
comment|//Add sequence
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRecipe3"
argument_list|)
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasDescription"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"My comment to the recipe 3"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
name|objprop
operator|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasRule"
argument_list|)
argument_list|)
expr_stmt|;
name|ruleind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleF"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|objprop
operator|=
name|factory
operator|.
name|getOWLObjectProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"startWith"
argument_list|)
argument_list|)
expr_stmt|;
name|ruleind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRuleF"
argument_list|)
argument_list|)
expr_stmt|;
name|objectPropAssertion
operator|=
name|factory
operator|.
name|getOWLObjectPropertyAssertionAxiom
argument_list|(
name|objprop
argument_list|,
name|ontoind
argument_list|,
name|ruleind
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|objectPropAssertion
argument_list|)
expr_stmt|;
name|ontoind
operator|=
name|factory
operator|.
name|getOWLNamedIndividual
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"MyRecipe3"
argument_list|)
argument_list|)
expr_stmt|;
name|dataprop
operator|=
name|factory
operator|.
name|getOWLDataProperty
argument_list|(
name|IRI
operator|.
name|create
argument_list|(
name|ID
operator|+
literal|"hasSequence"
argument_list|)
argument_list|)
expr_stmt|;
name|dataPropAssertion
operator|=
name|factory
operator|.
name|getOWLDataPropertyAssertionAxiom
argument_list|(
name|dataprop
argument_list|,
name|ontoind
argument_list|,
literal|"http://kres.iks-project.eu/ontology/meta/rmi.owl#MyRuleF"
argument_list|)
expr_stmt|;
name|owlmanager
operator|.
name|addAxiom
argument_list|(
name|owlmodel
argument_list|,
name|dataPropAssertion
argument_list|)
expr_stmt|;
comment|////////////////////////////////////////////////////////////////////
comment|//Get axiom
name|int
name|numexp
init|=
name|owlmodel
operator|.
name|getAxiomCount
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|OWLAxiom
argument_list|>
name|expaxiom
init|=
name|owlmodel
operator|.
name|getAxioms
argument_list|()
decl_stmt|;
name|int
name|numres
init|=
name|result
operator|.
name|getAxiomCount
argument_list|()
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
name|int
name|num
init|=
literal|0
decl_stmt|;
name|Iterator
argument_list|<
name|OWLAxiom
argument_list|>
name|axiom
init|=
name|result
operator|.
name|getAxioms
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|axiom
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|OWLAxiom
name|ax
init|=
name|axiom
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|expaxiom
operator|.
name|contains
argument_list|(
name|ax
argument_list|)
condition|)
name|num
operator|++
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|numexp
operator|+
literal|" "
operator|+
name|numres
operator|+
literal|" "
operator|+
name|num
operator|+
literal|" "
operator|+
name|numres
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|numexp
operator|-
name|numres
argument_list|,
name|num
operator|-
name|numres
argument_list|)
expr_stmt|;
comment|//assertEquals(numexp,(numres+12));
comment|// TODO review the generated test code and remove the default call to fail.
block|}
else|else
block|{
name|fail
argument_list|(
literal|"Some problem accours"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

