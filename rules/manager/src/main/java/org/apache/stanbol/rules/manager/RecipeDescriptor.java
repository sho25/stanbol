begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|manager
package|;
end_package

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|ModelFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|Resource
import|;
end_import

begin_class
specifier|public
class|class
name|RecipeDescriptor
block|{
comment|/**<p>The RDF model that holds the vocabulary terms</p> */
specifier|private
specifier|static
name|Model
name|m_model
init|=
name|ModelFactory
operator|.
name|createDefaultModel
argument_list|()
decl_stmt|;
comment|/**<p>The namespace of the vocabulary as a string</p> */
specifier|public
specifier|static
specifier|final
name|String
name|NS
init|=
literal|"http://stlab.istc.cnr.it/software/semion/ontologies/recipeDescriptor.owl#"
decl_stmt|;
comment|/**<p>The namespace of the vocabulary as a string</p>      *  @see #NS */
specifier|public
specifier|static
name|String
name|getURI
parameter_list|()
block|{
return|return
name|NS
return|;
block|}
comment|/**<p>The namespace of the vocabulary as a resource</p> */
specifier|public
specifier|static
specifier|final
name|Resource
name|NAMESPACE
init|=
name|m_model
operator|.
name|createResource
argument_list|(
name|NS
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Resource
name|Recipe
init|=
name|m_model
operator|.
name|createResource
argument_list|(
name|NS
operator|+
literal|"Recipe"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Resource
name|Model
init|=
name|m_model
operator|.
name|createResource
argument_list|(
name|NS
operator|+
literal|"Model"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Resource
name|RuleSet
init|=
name|m_model
operator|.
name|createResource
argument_list|(
name|NS
operator|+
literal|"RuleSet"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
name|hasRuleSet
init|=
name|m_model
operator|.
name|createProperty
argument_list|(
name|NS
operator|+
literal|"hasRuleSet"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
name|isRuleSetOf
init|=
name|m_model
operator|.
name|createProperty
argument_list|(
name|NS
operator|+
literal|"isRuleSetOf"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
name|hasInputModel
init|=
name|m_model
operator|.
name|createProperty
argument_list|(
name|NS
operator|+
literal|"hasInputModel"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
name|isInputModelOf
init|=
name|m_model
operator|.
name|createProperty
argument_list|(
name|NS
operator|+
literal|"isInputModelOf"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
name|hasTargetModel
init|=
name|m_model
operator|.
name|createProperty
argument_list|(
name|NS
operator|+
literal|"hasTargetModel"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
name|isTargetModelOf
init|=
name|m_model
operator|.
name|createProperty
argument_list|(
name|NS
operator|+
literal|"isTargetModelOf"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
name|hasURI
init|=
name|m_model
operator|.
name|createProperty
argument_list|(
name|NS
operator|+
literal|"hasURI"
argument_list|)
decl_stmt|;
block|}
end_class

end_unit

