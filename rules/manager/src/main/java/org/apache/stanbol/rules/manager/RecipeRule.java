begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|manager
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|commons
operator|.
name|rdf
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|base
operator|.
name|api
operator|.
name|Recipe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|base
operator|.
name|api
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|base
operator|.
name|api
operator|.
name|util
operator|.
name|AtomList
import|;
end_import

begin_comment
comment|/**  * Instances of this class are {@link Rule} objects bound to recipes.<br/>  * When a rule is bound to a recipe, that it is an instance of this class.  *   * @author anuzzolese  *   */
end_comment

begin_class
specifier|public
class|class
name|RecipeRule
extends|extends
name|RuleImpl
block|{
specifier|public
name|RecipeRule
parameter_list|(
name|Recipe
name|recipe
parameter_list|,
name|IRI
name|ruleID
parameter_list|,
name|String
name|ruleName
parameter_list|,
name|AtomList
name|body
parameter_list|,
name|AtomList
name|head
parameter_list|)
block|{
name|super
argument_list|(
name|ruleID
argument_list|,
name|ruleName
argument_list|,
name|body
argument_list|,
name|head
argument_list|)
expr_stmt|;
name|bindToRecipe
argument_list|(
name|recipe
argument_list|)
expr_stmt|;
block|}
specifier|public
name|RecipeRule
parameter_list|(
name|Recipe
name|recipe
parameter_list|,
name|Rule
name|rule
parameter_list|)
block|{
name|this
argument_list|(
name|recipe
argument_list|,
name|rule
operator|.
name|getRuleID
argument_list|()
argument_list|,
name|rule
operator|.
name|getRuleName
argument_list|()
argument_list|,
name|rule
operator|.
name|getBody
argument_list|()
argument_list|,
name|rule
operator|.
name|getHead
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

