begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|adapters
operator|.
name|sparql
operator|.
name|atoms
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|adapters
operator|.
name|AbstractAdaptableAtom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|adapters
operator|.
name|sparql
operator|.
name|SPARQLFunction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|base
operator|.
name|api
operator|.
name|RuleAtom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|base
operator|.
name|api
operator|.
name|Symbols
import|;
end_import

begin_comment
comment|/**  * It adapts any UObjectAtom to a SPARQL object.  *   * @author anuzzolese  *   */
end_comment

begin_class
specifier|public
class|class
name|UObjectAtom
extends|extends
name|AbstractAdaptableAtom
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|adapt
parameter_list|(
name|RuleAtom
name|ruleAtom
parameter_list|)
block|{
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|manager
operator|.
name|atoms
operator|.
name|UObjectAtom
name|tmp
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|manager
operator|.
name|atoms
operator|.
name|UObjectAtom
operator|)
name|ruleAtom
decl_stmt|;
name|int
name|actualType
init|=
name|tmp
operator|.
name|getActualType
argument_list|()
decl_stmt|;
name|Object
name|argument
init|=
name|tmp
operator|.
name|getArgument
argument_list|()
decl_stmt|;
name|String
name|argumentSPARQL
init|=
literal|null
decl_stmt|;
switch|switch
condition|(
name|actualType
condition|)
block|{
case|case
literal|0
case|:
name|argumentSPARQL
operator|=
literal|"\""
operator|+
name|argument
operator|+
literal|"\"^^<http://www.w3.org/2001/XMLSchema#string>"
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|argumentSPARQL
operator|=
name|argument
operator|.
name|toString
argument_list|()
operator|+
literal|"^^<http://www.w3.org/2001/XMLSchema#int>"
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|argumentSPARQL
operator|=
literal|"?"
operator|+
name|argument
operator|.
name|toString
argument_list|()
operator|.
name|replace
argument_list|(
name|Symbols
operator|.
name|variablesPrefix
argument_list|,
literal|""
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
if|if
condition|(
name|argumentSPARQL
operator|!=
literal|null
condition|)
block|{
return|return
operator|(
name|T
operator|)
operator|new
name|SPARQLFunction
argument_list|(
name|argumentSPARQL
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

