begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|base
operator|.
name|api
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|base
operator|.
name|api
operator|.
name|Recipe
import|;
end_import

begin_class
specifier|public
class|class
name|RecipeIterator
implements|implements
name|Iterator
argument_list|<
name|Recipe
argument_list|>
block|{
specifier|private
name|int
name|currentIndex
decl_stmt|;
specifier|private
name|int
name|listSize
decl_stmt|;
specifier|private
name|Recipe
index|[]
name|recipes
decl_stmt|;
specifier|public
name|RecipeIterator
parameter_list|(
name|RecipeList
name|recipeList
parameter_list|)
block|{
name|this
operator|.
name|listSize
operator|=
name|recipeList
operator|.
name|size
argument_list|()
expr_stmt|;
name|this
operator|.
name|recipes
operator|=
operator|new
name|Recipe
index|[
name|listSize
index|]
expr_stmt|;
name|this
operator|.
name|recipes
operator|=
name|recipeList
operator|.
name|toArray
argument_list|(
name|this
operator|.
name|recipes
argument_list|)
expr_stmt|;
name|this
operator|.
name|currentIndex
operator|=
literal|0
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
if|if
condition|(
name|currentIndex
operator|<
operator|(
name|listSize
operator|-
literal|1
operator|)
condition|)
block|{
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
specifier|public
name|Recipe
name|next
parameter_list|()
block|{
name|Recipe
name|recipe
init|=
name|recipes
index|[
name|currentIndex
index|]
decl_stmt|;
name|currentIndex
operator|++
expr_stmt|;
return|return
name|recipe
return|;
block|}
specifier|public
name|void
name|remove
parameter_list|()
block|{ 		 	}
block|}
end_class

end_unit

