begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|base
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|rules
operator|.
name|base
operator|.
name|api
operator|.
name|util
operator|.
name|RecipeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyStorageException
import|;
end_import

begin_interface
specifier|public
interface|interface
name|RuleStore
block|{
comment|/**      * The key used to configure default namespace of Stanbol rules.      */
name|String
name|RULE_NAMESPACE
init|=
literal|"org.apache.stanbol.rules.base.rule_namespace"
decl_stmt|;
comment|/**      * The key used to configure the path of the default rule ontology.      */
name|String
name|RULE_ONTOLOGY
init|=
literal|"org.apache.stanbol.rules.base.rule_ontology"
decl_stmt|;
name|boolean
name|addRecipe
parameter_list|(
name|IRI
name|recipeIRI
parameter_list|,
name|String
name|recipeDescription
parameter_list|)
function_decl|;
name|Recipe
name|addRuleToRecipe
parameter_list|(
name|Recipe
name|recipe
parameter_list|,
name|String
name|rRuleInKReSSyntax
parameter_list|)
function_decl|;
name|Recipe
name|addRuleToRecipe
parameter_list|(
name|Recipe
name|recipe
parameter_list|,
name|InputStream
name|ruleInKReSSyntax
parameter_list|)
function_decl|;
name|Recipe
name|addRuleToRecipe
parameter_list|(
name|String
name|recipeID
parameter_list|,
name|String
name|ruleInKReSSyntax
parameter_list|)
throws|throws
name|NoSuchRecipeException
function_decl|;
name|Recipe
name|addRuleToRecipe
parameter_list|(
name|String
name|recipeID
parameter_list|,
name|InputStream
name|ruleInKReSSyntax
parameter_list|)
throws|throws
name|NoSuchRecipeException
function_decl|;
name|void
name|createRecipe
parameter_list|(
name|String
name|recipeID
parameter_list|,
name|String
name|rulesInKReSSyntax
parameter_list|)
function_decl|;
name|String
name|getFilePath
parameter_list|()
function_decl|;
name|OWLOntology
name|getOntology
parameter_list|()
function_decl|;
name|Recipe
name|getRecipe
parameter_list|(
name|IRI
name|recipe
parameter_list|)
throws|throws
name|NoSuchRecipeException
function_decl|;
name|String
name|getRuleStoreNamespace
parameter_list|()
function_decl|;
name|Set
argument_list|<
name|IRI
argument_list|>
name|listIRIRecipes
parameter_list|()
function_decl|;
name|RecipeList
name|listRecipes
parameter_list|()
function_decl|;
name|boolean
name|removeRecipe
parameter_list|(
name|IRI
name|recipeIRI
parameter_list|)
function_decl|;
name|boolean
name|removeRecipe
parameter_list|(
name|Recipe
name|recipe
parameter_list|)
function_decl|;
name|boolean
name|removeRule
parameter_list|(
name|Rule
name|rule
parameter_list|)
function_decl|;
name|void
name|saveOntology
parameter_list|()
throws|throws
name|OWLOntologyStorageException
function_decl|;
name|void
name|setStore
parameter_list|(
name|OWLOntology
name|owl
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

