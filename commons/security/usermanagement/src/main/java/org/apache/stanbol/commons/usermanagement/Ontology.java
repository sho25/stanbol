begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|usermanagement
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|Ontology
block|{
comment|/**     * Restrict instantiation     */
specifier|private
name|Ontology
parameter_list|()
block|{}
specifier|public
specifier|final
specifier|static
name|String
name|userManagementBase
init|=
literal|"http://stanbol.apache.org/ontologies/usermanagement#"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|UriRef
name|EditableUser
init|=
operator|new
name|UriRef
argument_list|(
literal|"EditableUser"
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|UriRef
name|Change
init|=
operator|new
name|UriRef
argument_list|(
name|userManagementBase
operator|+
literal|"Change"
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|UriRef
name|predicate
init|=
operator|new
name|UriRef
argument_list|(
name|userManagementBase
operator|+
literal|"predicate"
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|UriRef
name|oldValue
init|=
operator|new
name|UriRef
argument_list|(
name|userManagementBase
operator|+
literal|"oldValue"
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|UriRef
name|newValue
init|=
operator|new
name|UriRef
argument_list|(
name|userManagementBase
operator|+
literal|"newValue"
argument_list|)
decl_stmt|;
block|}
end_class

end_unit

