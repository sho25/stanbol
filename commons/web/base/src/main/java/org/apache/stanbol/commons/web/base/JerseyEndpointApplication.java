begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|web
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|web
operator|.
name|base
operator|.
name|processor
operator|.
name|FreemarkerViewProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|web
operator|.
name|base
operator|.
name|writers
operator|.
name|GraphWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|web
operator|.
name|base
operator|.
name|writers
operator|.
name|JenaModelWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|web
operator|.
name|base
operator|.
name|writers
operator|.
name|ResultSetWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|freemarker
operator|.
name|cache
operator|.
name|MultiTemplateLoader
import|;
end_import

begin_import
import|import
name|freemarker
operator|.
name|cache
operator|.
name|TemplateLoader
import|;
end_import

begin_comment
comment|/**  * Define the list of available resources and providers to be used by the Stanbol JAX-RS Endpoint.  */
end_comment

begin_class
specifier|public
class|class
name|JerseyEndpointApplication
extends|extends
name|Application
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|JerseyEndpointApplication
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|final
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|contributedClasses
init|=
operator|new
name|HashSet
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
specifier|final
name|Set
argument_list|<
name|Object
argument_list|>
name|contributedSingletons
init|=
operator|new
name|HashSet
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|TemplateLoader
argument_list|>
name|templateLoaders
init|=
operator|new
name|ArrayList
argument_list|<
name|TemplateLoader
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|getClasses
parameter_list|()
block|{
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
init|=
operator|new
name|HashSet
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
comment|// resources contributed buy other bundles
name|classes
operator|.
name|addAll
argument_list|(
name|contributedClasses
argument_list|)
expr_stmt|;
comment|// message body writers, hard-coded for now
name|classes
operator|.
name|add
argument_list|(
name|GraphWriter
operator|.
name|class
argument_list|)
expr_stmt|;
name|classes
operator|.
name|add
argument_list|(
name|JenaModelWriter
operator|.
name|class
argument_list|)
expr_stmt|;
name|classes
operator|.
name|add
argument_list|(
name|ResultSetWriter
operator|.
name|class
argument_list|)
expr_stmt|;
return|return
name|classes
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|Object
argument_list|>
name|getSingletons
parameter_list|()
block|{
name|Set
argument_list|<
name|Object
argument_list|>
name|singletons
init|=
operator|new
name|HashSet
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|singletons
operator|.
name|addAll
argument_list|(
name|contributedSingletons
argument_list|)
expr_stmt|;
name|TemplateLoader
index|[]
name|loadersArray
init|=
name|templateLoaders
operator|.
name|toArray
argument_list|(
operator|new
name|TemplateLoader
index|[
name|templateLoaders
operator|.
name|size
argument_list|()
index|]
argument_list|)
decl_stmt|;
name|MultiTemplateLoader
name|templateLoader
init|=
operator|new
name|MultiTemplateLoader
argument_list|(
name|loadersArray
argument_list|)
decl_stmt|;
name|singletons
operator|.
name|add
argument_list|(
operator|new
name|FreemarkerViewProcessor
argument_list|(
name|templateLoader
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|singletons
return|;
block|}
specifier|public
name|void
name|contributeClasses
parameter_list|(
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|)
block|{
name|contributedClasses
operator|.
name|addAll
argument_list|(
name|classes
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|contributeSingletons
parameter_list|(
name|Set
argument_list|<
name|Object
argument_list|>
name|singletons
parameter_list|)
block|{
name|contributedSingletons
operator|.
name|addAll
argument_list|(
name|singletons
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|contributeTemplateLoader
parameter_list|(
name|TemplateLoader
name|templateLoader
parameter_list|)
block|{
if|if
condition|(
name|templateLoader
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|templateLoaders
operator|.
name|add
argument_list|(
name|templateLoader
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

