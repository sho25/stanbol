begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|web
operator|.
name|base
operator|.
name|writers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|LiteralFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|impl
operator|.
name|SimpleMGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|impl
operator|.
name|TripleImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|impl
operator|.
name|util
operator|.
name|W3CDateFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JsonLdSerializerProviderTest
block|{
specifier|private
name|JsonLdSerializerProvider
name|jsonldProvider
decl_stmt|;
specifier|private
name|String
name|formatIdentifier
init|=
literal|"application/json"
decl_stmt|;
specifier|private
name|String
name|expectedW3CFormattedDate
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|jsonldProvider
operator|=
operator|new
name|JsonLdSerializerProvider
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWrongFormat
parameter_list|()
block|{
name|String
name|context
init|=
literal|"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived "
operator|+
literal|"in New Zealand and worked at the University of Otago."
decl_stmt|;
name|MGraph
name|graph
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
name|getTextAnnotation
argument_list|(
name|graph
argument_list|,
literal|"Person"
argument_list|,
literal|"Patrick Marshall"
argument_list|,
name|context
argument_list|,
operator|new
name|UriRef
argument_list|(
name|DBPEDIA
operator|+
literal|"Person"
argument_list|)
argument_list|)
expr_stmt|;
name|OutputStream
name|serializedGraph
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|jsonldProvider
operator|.
name|serialize
argument_list|(
name|serializedGraph
argument_list|,
name|graph
argument_list|,
literal|"application/format+notsupported"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyGraph
parameter_list|()
block|{
name|MGraph
name|emptyGraph
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
name|OutputStream
name|serializedGraph
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|jsonldProvider
operator|.
name|setIndentation
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|serialize
argument_list|(
name|serializedGraph
argument_list|,
name|emptyGraph
argument_list|,
name|formatIdentifier
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{}"
decl_stmt|;
name|String
name|result
init|=
name|serializedGraph
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyGraphWithIndent
parameter_list|()
block|{
name|MGraph
name|emptyGraph
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
name|OutputStream
name|serializedGraph
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|jsonldProvider
operator|.
name|setIndentation
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|serialize
argument_list|(
name|serializedGraph
argument_list|,
name|emptyGraph
argument_list|,
name|formatIdentifier
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\n\n}"
decl_stmt|;
name|String
name|result
init|=
name|serializedGraph
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSingleSubjectSerializeNoNs
parameter_list|()
block|{
name|String
name|context
init|=
literal|"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived "
operator|+
literal|"in New Zealand and worked at the University of Otago."
decl_stmt|;
name|MGraph
name|graph
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
name|getTextAnnotation
argument_list|(
name|graph
argument_list|,
literal|"Person"
argument_list|,
literal|"Patrick Marshall"
argument_list|,
name|context
argument_list|,
operator|new
name|UriRef
argument_list|(
name|DBPEDIA
operator|+
literal|"Person"
argument_list|)
argument_list|)
expr_stmt|;
name|OutputStream
name|serializedGraph
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|jsonldProvider
operator|.
name|setIndentation
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|serialize
argument_list|(
name|serializedGraph
argument_list|,
name|graph
argument_list|,
name|formatIdentifier
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"created\":\"http://purl.org/dc/terms/created\",\"creator\":\"http://purl.org/dc/terms/creator\",\"end\":\"http://fise.iks-project.eu/ontology/end\",\"Enhancement\":\"http://fise.iks-project.eu/ontology/Enhancement\",\"Person\":\"http://dbpedia.org/ontology/Person\",\"selected-text\":\"http://fise.iks-project.eu/ontology/selected-text\",\"selection-context\":\"http://fise.iks-project.eu/ontology/selection-context\",\"start\":\"http://fise.iks-project.eu/ontology/start\",\"TextAnnotation\":\"http://fise.iks-project.eu/ontology/TextAnnotation\",\"type\":\"http://purl.org/dc/terms/type\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"urn:iks-project:enhancer:test:text-annotation:Person\",\"@type\":[\"Enhancement\",\"TextAnnotation\"],\"created\":{\"@type\":\"xsd:dateTime\",\"@value\":\""
operator|+
name|this
operator|.
name|expectedW3CFormattedDate
operator|+
literal|"\"},\"creator\":{\"@id\":\"urn:iks-project:enhancer:test:dummyEngine\"},\"end\":{\"@type\":\"xsd:int\",\"@value\":\"20\"},\"selected-text\":{\"@type\":\"xsd:string\",\"@value\":\"Patrick Marshall\"},\"selection-context\":{\"@type\":\"xsd:string\",\"@value\":\"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived in New Zealand and worked at the University of Otago.\"},\"start\":{\"@type\":\"xsd:int\",\"@value\":\"4\"},\"type\":{\"@id\":\"Person\"}}"
decl_stmt|;
name|String
name|result
init|=
name|serializedGraph
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSingleSubjectSerializeNoNsWithCoercion
parameter_list|()
block|{
name|String
name|context
init|=
literal|"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived "
operator|+
literal|"in New Zealand and worked at the University of Otago."
decl_stmt|;
name|MGraph
name|graph
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
name|getTextAnnotation
argument_list|(
name|graph
argument_list|,
literal|"Person"
argument_list|,
literal|"Patrick Marshall"
argument_list|,
name|context
argument_list|,
operator|new
name|UriRef
argument_list|(
name|DBPEDIA
operator|+
literal|"Person"
argument_list|)
argument_list|)
expr_stmt|;
name|OutputStream
name|serializedGraph
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|jsonldProvider
operator|.
name|setIndentation
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|serialize
argument_list|(
name|serializedGraph
argument_list|,
name|graph
argument_list|,
name|formatIdentifier
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"created\":{\"@id\":\"http://purl.org/dc/terms/created\",\"@type\":\"http://www.w3.org/2001/XMLSchema#dateTime\"},\"creator\":{\"@id\":\"http://purl.org/dc/terms/creator\",\"@type\":\"@id\"},\"end\":{\"@id\":\"http://fise.iks-project.eu/ontology/end\",\"@type\":\"http://www.w3.org/2001/XMLSchema#int\"},\"Enhancement\":\"http://fise.iks-project.eu/ontology/Enhancement\",\"Person\":\"http://dbpedia.org/ontology/Person\",\"selected-text\":{\"@id\":\"http://fise.iks-project.eu/ontology/selected-text\",\"@type\":\"http://www.w3.org/2001/XMLSchema#string\"},\"selection-context\":{\"@id\":\"http://fise.iks-project.eu/ontology/selection-context\",\"@type\":\"http://www.w3.org/2001/XMLSchema#string\"},\"start\":{\"@id\":\"http://fise.iks-project.eu/ontology/start\",\"@type\":\"http://www.w3.org/2001/XMLSchema#int\"},\"TextAnnotation\":\"http://fise.iks-project.eu/ontology/TextAnnotation\",\"type\":{\"@id\":\"http://purl.org/dc/terms/type\",\"@type\":\"@id\"},\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"urn:iks-project:enhancer:test:text-annotation:Person\",\"@type\":[\"Enhancement\",\"TextAnnotation\"],\"created\":\"2010-10-27T12:00:00Z\",\"creator\":\"urn:iks-project:enhancer:test:dummyEngine\",\"end\":20,\"selected-text\":\"Patrick Marshall\",\"selection-context\":\"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived in New Zealand and worked at the University of Otago.\",\"start\":4,\"type\":\"Person\"}"
decl_stmt|;
name|String
name|result
init|=
name|serializedGraph
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSingleSubjectSerializeNoNsWithIndent
parameter_list|()
block|{
name|String
name|context
init|=
literal|"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived in New Zealand and worked at the University of Otago."
decl_stmt|;
name|MGraph
name|graph
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
name|getTextAnnotation
argument_list|(
name|graph
argument_list|,
literal|"Person"
argument_list|,
literal|"Patrick Marshall"
argument_list|,
name|context
argument_list|,
operator|new
name|UriRef
argument_list|(
name|DBPEDIA
operator|+
literal|"Person"
argument_list|)
argument_list|)
expr_stmt|;
name|OutputStream
name|serializedGraph
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|jsonldProvider
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|serialize
argument_list|(
name|serializedGraph
argument_list|,
name|graph
argument_list|,
name|formatIdentifier
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\n  \"@context\": {\n    \"created\": \"http://purl.org/dc/terms/created\",\n    \"creator\": \"http://purl.org/dc/terms/creator\",\n    \"end\": \"http://fise.iks-project.eu/ontology/end\",\n    \"Enhancement\": \"http://fise.iks-project.eu/ontology/Enhancement\",\n    \"Person\": \"http://dbpedia.org/ontology/Person\",\n    \"selected-text\": \"http://fise.iks-project.eu/ontology/selected-text\",\n    \"selection-context\": \"http://fise.iks-project.eu/ontology/selection-context\",\n    \"start\": \"http://fise.iks-project.eu/ontology/start\",\n    \"TextAnnotation\": \"http://fise.iks-project.eu/ontology/TextAnnotation\",\n    \"type\": \"http://purl.org/dc/terms/type\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n  },\n  \"@id\": \"urn:iks-project:enhancer:test:text-annotation:Person\",\n  \"@type\": [\n    \"Enhancement\",\n    \"TextAnnotation\"\n  ],\n  \"created\": {\n    \"@type\": \"xsd:dateTime\",\n    \"@value\": \""
operator|+
name|this
operator|.
name|expectedW3CFormattedDate
operator|+
literal|"\"\n  },\n  \"creator\": {\n    \"@id\": \"urn:iks-project:enhancer:test:dummyEngine\"\n  },\n  \"end\": {\n    \"@type\": \"xsd:int\",\n    \"@value\": \"20\"\n  },\n  \"selected-text\": {\n    \"@type\": \"xsd:string\",\n    \"@value\": \"Patrick Marshall\"\n  },\n  \"selection-context\": {\n    \"@type\": \"xsd:string\",\n    \"@value\": \"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived in New Zealand and worked at the University of Otago.\"\n  },\n  \"start\": {\n    \"@type\": \"xsd:int\",\n    \"@value\": \"4\"\n  },\n  \"type\": {\n    \"@id\": \"Person\"\n  }\n}"
decl_stmt|;
name|String
name|result
init|=
name|serializedGraph
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSingleSubjectSerializeWithNs
parameter_list|()
block|{
name|String
name|context
init|=
literal|"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived in New Zealand and worked at the University of Otago."
decl_stmt|;
name|MGraph
name|graph
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
name|getTextAnnotation
argument_list|(
name|graph
argument_list|,
literal|"Person"
argument_list|,
literal|"Patrick Marshall"
argument_list|,
name|context
argument_list|,
operator|new
name|UriRef
argument_list|(
name|DBPEDIA
operator|+
literal|"Person"
argument_list|)
argument_list|)
expr_stmt|;
name|OutputStream
name|serializedGraph
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nsMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://fise.iks-project.eu/ontology/"
argument_list|,
literal|"enhancer"
argument_list|)
expr_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xmlns"
argument_list|)
expr_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://dbpedia.org/ontology/"
argument_list|,
literal|"dbpedia"
argument_list|)
expr_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://purl.org/dc/terms"
argument_list|,
literal|"dcterms"
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setIndentation
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setNamespacePrefixMap
argument_list|(
name|nsMap
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|serialize
argument_list|(
name|serializedGraph
argument_list|,
name|graph
argument_list|,
name|formatIdentifier
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"/created\":\"http://purl.org/dc/terms/created\",\"/creator\":\"http://purl.org/dc/terms/creator\",\"/type\":\"http://purl.org/dc/terms/type\",\"end\":\"http://fise.iks-project.eu/ontology/end\",\"Enhancement\":\"http://fise.iks-project.eu/ontology/Enhancement\",\"Person\":\"http://dbpedia.org/ontology/Person\",\"selected-text\":\"http://fise.iks-project.eu/ontology/selected-text\",\"selection-context\":\"http://fise.iks-project.eu/ontology/selection-context\",\"start\":\"http://fise.iks-project.eu/ontology/start\",\"TextAnnotation\":\"http://fise.iks-project.eu/ontology/TextAnnotation\",\"xmlns\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"urn:iks-project:enhancer:test:text-annotation:Person\",\"@type\":[\"Enhancement\",\"TextAnnotation\"],\"/created\":{\"@type\":\"xmlns:dateTime\",\"@value\":\""
operator|+
name|this
operator|.
name|expectedW3CFormattedDate
operator|+
literal|"\"},\"/creator\":{\"@id\":\"urn:iks-project:enhancer:test:dummyEngine\"},\"/type\":{\"@id\":\"Person\"},\"end\":{\"@type\":\"xmlns:int\",\"@value\":\"20\"},\"selected-text\":{\"@type\":\"xmlns:string\",\"@value\":\"Patrick Marshall\"},\"selection-context\":{\"@type\":\"xmlns:string\",\"@value\":\"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived in New Zealand and worked at the University of Otago.\"},\"start\":{\"@type\":\"xmlns:int\",\"@value\":\"4\"}}"
decl_stmt|;
name|String
name|result
init|=
name|serializedGraph
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSingleSubjectSerializeWithNsWithCoercion
parameter_list|()
block|{
name|String
name|context
init|=
literal|"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived in New Zealand and worked at the University of Otago."
decl_stmt|;
name|MGraph
name|graph
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
name|getTextAnnotation
argument_list|(
name|graph
argument_list|,
literal|"Person"
argument_list|,
literal|"Patrick Marshall"
argument_list|,
name|context
argument_list|,
operator|new
name|UriRef
argument_list|(
name|DBPEDIA
operator|+
literal|"Person"
argument_list|)
argument_list|)
expr_stmt|;
name|OutputStream
name|serializedGraph
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nsMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://fise.iks-project.eu/ontology/"
argument_list|,
literal|"enhancer"
argument_list|)
expr_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xmlns"
argument_list|)
expr_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://dbpedia.org/ontology/"
argument_list|,
literal|"dbpedia"
argument_list|)
expr_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://purl.org/dc/terms/"
argument_list|,
literal|"dcterms"
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setIndentation
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setNamespacePrefixMap
argument_list|(
name|nsMap
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|serialize
argument_list|(
name|serializedGraph
argument_list|,
name|graph
argument_list|,
name|formatIdentifier
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"created\":{\"@id\":\"http://purl.org/dc/terms/created\",\"@type\":\"http://www.w3.org/2001/XMLSchema#dateTime\"},\"creator\":{\"@id\":\"http://purl.org/dc/terms/creator\",\"@type\":\"@id\"},\"end\":{\"@id\":\"http://fise.iks-project.eu/ontology/end\",\"@type\":\"http://www.w3.org/2001/XMLSchema#int\"},\"Enhancement\":\"http://fise.iks-project.eu/ontology/Enhancement\",\"Person\":\"http://dbpedia.org/ontology/Person\",\"selected-text\":{\"@id\":\"http://fise.iks-project.eu/ontology/selected-text\",\"@type\":\"http://www.w3.org/2001/XMLSchema#string\"},\"selection-context\":{\"@id\":\"http://fise.iks-project.eu/ontology/selection-context\",\"@type\":\"http://www.w3.org/2001/XMLSchema#string\"},\"start\":{\"@id\":\"http://fise.iks-project.eu/ontology/start\",\"@type\":\"http://www.w3.org/2001/XMLSchema#int\"},\"TextAnnotation\":\"http://fise.iks-project.eu/ontology/TextAnnotation\",\"type\":{\"@id\":\"http://purl.org/dc/terms/type\",\"@type\":\"@id\"},\"xmlns\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"urn:iks-project:enhancer:test:text-annotation:Person\",\"@type\":[\"Enhancement\",\"TextAnnotation\"],\"created\":\"2010-10-27T12:00:00Z\",\"creator\":\"urn:iks-project:enhancer:test:dummyEngine\",\"end\":20,\"selected-text\":\"Patrick Marshall\",\"selection-context\":\"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived in New Zealand and worked at the University of Otago.\",\"start\":4,\"type\":\"Person\"}"
decl_stmt|;
name|String
name|result
init|=
name|serializedGraph
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSingleSubjectSerializeWithNsWithIndent
parameter_list|()
block|{
name|String
name|context
init|=
literal|"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived in New Zealand and worked at the University of Otago."
decl_stmt|;
name|MGraph
name|graph
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
name|getTextAnnotation
argument_list|(
name|graph
argument_list|,
literal|"Person"
argument_list|,
literal|"Patrick Marshall"
argument_list|,
name|context
argument_list|,
operator|new
name|UriRef
argument_list|(
name|DBPEDIA
operator|+
literal|"Person"
argument_list|)
argument_list|)
expr_stmt|;
name|OutputStream
name|serializedGraph
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nsMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://fise.iks-project.eu/ontology/"
argument_list|,
literal|"enhancer"
argument_list|)
expr_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xmlns"
argument_list|)
expr_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://dbpedia.org/ontology/"
argument_list|,
literal|"dbpedia"
argument_list|)
expr_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://purl.org/dc/terms/"
argument_list|,
literal|"dcterms"
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setIndentation
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setNamespacePrefixMap
argument_list|(
name|nsMap
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|serialize
argument_list|(
name|serializedGraph
argument_list|,
name|graph
argument_list|,
name|formatIdentifier
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\n    \"@context\": {\n        \"created\": \"http://purl.org/dc/terms/created\",\n        \"creator\": \"http://purl.org/dc/terms/creator\",\n        \"end\": \"http://fise.iks-project.eu/ontology/end\",\n        \"Enhancement\": \"http://fise.iks-project.eu/ontology/Enhancement\",\n        \"Person\": \"http://dbpedia.org/ontology/Person\",\n        \"selected-text\": \"http://fise.iks-project.eu/ontology/selected-text\",\n        \"selection-context\": \"http://fise.iks-project.eu/ontology/selection-context\",\n        \"start\": \"http://fise.iks-project.eu/ontology/start\",\n        \"TextAnnotation\": \"http://fise.iks-project.eu/ontology/TextAnnotation\",\n        \"type\": \"http://purl.org/dc/terms/type\",\n        \"xmlns\": \"http://www.w3.org/2001/XMLSchema#\"\n    },\n    \"@id\": \"urn:iks-project:enhancer:test:text-annotation:Person\",\n    \"@type\": [\n        \"Enhancement\",\n        \"TextAnnotation\"\n    ],\n    \"created\": {\n        \"@type\": \"xmlns:dateTime\",\n        \"@value\": \"2010-10-27T12:00:00Z\"\n    },\n    \"creator\": {\n        \"@id\": \"urn:iks-project:enhancer:test:dummyEngine\"\n    },\n    \"end\": {\n        \"@type\": \"xmlns:int\",\n        \"@value\": \"20\"\n    },\n    \"selected-text\": {\n        \"@type\": \"xmlns:string\",\n        \"@value\": \"Patrick Marshall\"\n    },\n    \"selection-context\": {\n        \"@type\": \"xmlns:string\",\n        \"@value\": \"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived in New Zealand and worked at the University of Otago.\"\n    },\n    \"start\": {\n        \"@type\": \"xmlns:int\",\n        \"@value\": \"4\"\n    },\n    \"type\": {\n        \"@id\": \"Person\"\n    }\n}"
decl_stmt|;
name|String
name|result
init|=
name|serializedGraph
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSingleSubjectSerializeWithNsWithIndentWithCoercion
parameter_list|()
block|{
name|String
name|context
init|=
literal|"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived in New Zealand and worked at the University of Otago."
decl_stmt|;
name|MGraph
name|graph
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
name|getTextAnnotation
argument_list|(
name|graph
argument_list|,
literal|"Person"
argument_list|,
literal|"Patrick Marshall"
argument_list|,
name|context
argument_list|,
operator|new
name|UriRef
argument_list|(
name|DBPEDIA
operator|+
literal|"Person"
argument_list|)
argument_list|)
expr_stmt|;
name|OutputStream
name|serializedGraph
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nsMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://fise.iks-project.eu/ontology/"
argument_list|,
literal|"enhancer"
argument_list|)
expr_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xmlns"
argument_list|)
expr_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://dbpedia.org/ontology/"
argument_list|,
literal|"dbpedia"
argument_list|)
expr_stmt|;
name|nsMap
operator|.
name|put
argument_list|(
literal|"http://purl.org/dc/terms/"
argument_list|,
literal|"dcterms"
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setIndentation
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setNamespacePrefixMap
argument_list|(
name|nsMap
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonldProvider
operator|.
name|serialize
argument_list|(
name|serializedGraph
argument_list|,
name|graph
argument_list|,
name|formatIdentifier
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\n    \"@context\": {\n        \"created\": {\n            \"@id\": \"http://purl.org/dc/terms/created\",\n            \"@type\": \"http://www.w3.org/2001/XMLSchema#dateTime\"\n        },\n        \"creator\": {\n            \"@id\": \"http://purl.org/dc/terms/creator\",\n            \"@type\": \"@id\"\n        },\n        \"end\": {\n            \"@id\": \"http://fise.iks-project.eu/ontology/end\",\n            \"@type\": \"http://www.w3.org/2001/XMLSchema#int\"\n        },\n        \"Enhancement\": \"http://fise.iks-project.eu/ontology/Enhancement\",\n        \"Person\": \"http://dbpedia.org/ontology/Person\",\n        \"selected-text\": {\n            \"@id\": \"http://fise.iks-project.eu/ontology/selected-text\",\n            \"@type\": \"http://www.w3.org/2001/XMLSchema#string\"\n        },\n        \"selection-context\": {\n            \"@id\": \"http://fise.iks-project.eu/ontology/selection-context\",\n            \"@type\": \"http://www.w3.org/2001/XMLSchema#string\"\n        },\n        \"start\": {\n            \"@id\": \"http://fise.iks-project.eu/ontology/start\",\n            \"@type\": \"http://www.w3.org/2001/XMLSchema#int\"\n        },\n        \"TextAnnotation\": \"http://fise.iks-project.eu/ontology/TextAnnotation\",\n        \"type\": {\n            \"@id\": \"http://purl.org/dc/terms/type\",\n            \"@type\": \"@id\"\n        },\n        \"xmlns\": \"http://www.w3.org/2001/XMLSchema#\"\n    },\n    \"@id\": \"urn:iks-project:enhancer:test:text-annotation:Person\",\n    \"@type\": [\n        \"Enhancement\",\n        \"TextAnnotation\"\n    ],\n    \"created\": \""
operator|+
name|this
operator|.
name|expectedW3CFormattedDate
operator|+
literal|"\",\n    \"creator\": \"urn:iks-project:enhancer:test:dummyEngine\",\n    \"end\": 20,\n    \"selected-text\": \"Patrick Marshall\",\n    \"selection-context\": \"Dr. Patrick Marshall (1869 - November 1950) was a geologist who lived in New Zealand and worked at the University of Otago.\",\n    \"start\": 4,\n    \"type\": \"Person\"\n}"
decl_stmt|;
name|String
name|result
init|=
name|serializedGraph
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|String
name|RDF
init|=
literal|"http://www.w3.org/1999/02/22-rdf-syntax-ns#"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DC
init|=
literal|"http://purl.org/dc/terms/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|FISE
init|=
literal|"http://fise.iks-project.eu/ontology/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DBPEDIA
init|=
literal|"http://dbpedia.org/ontology/"
decl_stmt|;
specifier|private
name|void
name|getTextAnnotation
parameter_list|(
name|MGraph
name|graph
parameter_list|,
name|String
name|annotationURNExtension
parameter_list|,
name|String
name|namedEntity
parameter_list|,
name|String
name|context
parameter_list|,
name|UriRef
name|type
parameter_list|)
block|{
name|UriRef
name|annotation
init|=
operator|new
name|UriRef
argument_list|(
literal|"urn:iks-project:enhancer:test:text-annotation:"
operator|+
name|annotationURNExtension
argument_list|)
decl_stmt|;
name|graph
operator|.
name|add
argument_list|(
operator|new
name|TripleImpl
argument_list|(
name|annotation
argument_list|,
operator|new
name|UriRef
argument_list|(
name|RDF
operator|+
literal|"type"
argument_list|)
argument_list|,
operator|new
name|UriRef
argument_list|(
name|FISE
operator|+
literal|"Enhancement"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|graph
operator|.
name|add
argument_list|(
operator|new
name|TripleImpl
argument_list|(
name|annotation
argument_list|,
operator|new
name|UriRef
argument_list|(
name|RDF
operator|+
literal|"type"
argument_list|)
argument_list|,
operator|new
name|UriRef
argument_list|(
name|FISE
operator|+
literal|"TextAnnotation"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|graph
operator|.
name|add
argument_list|(
operator|new
name|TripleImpl
argument_list|(
name|annotation
argument_list|,
operator|new
name|UriRef
argument_list|(
name|DC
operator|+
literal|"creator"
argument_list|)
argument_list|,
operator|new
name|UriRef
argument_list|(
literal|"urn:iks-project:enhancer:test:dummyEngine"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Calendar
name|myCal
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|myCal
operator|.
name|set
argument_list|(
literal|2010
argument_list|,
literal|9
argument_list|,
literal|27
argument_list|,
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|myCal
operator|.
name|set
argument_list|(
name|Calendar
operator|.
name|MILLISECOND
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|myCal
operator|.
name|setTimeZone
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
name|graph
operator|.
name|add
argument_list|(
operator|new
name|TripleImpl
argument_list|(
name|annotation
argument_list|,
operator|new
name|UriRef
argument_list|(
name|DC
operator|+
literal|"created"
argument_list|)
argument_list|,
name|LiteralFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|createTypedLiteral
argument_list|(
name|myCal
operator|.
name|getTime
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|expectedW3CFormattedDate
operator|=
operator|new
name|W3CDateFormat
argument_list|()
operator|.
name|format
argument_list|(
name|myCal
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|graph
operator|.
name|add
argument_list|(
operator|new
name|TripleImpl
argument_list|(
name|annotation
argument_list|,
operator|new
name|UriRef
argument_list|(
name|FISE
operator|+
literal|"selected-text"
argument_list|)
argument_list|,
name|LiteralFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|createTypedLiteral
argument_list|(
name|namedEntity
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|graph
operator|.
name|add
argument_list|(
operator|new
name|TripleImpl
argument_list|(
name|annotation
argument_list|,
operator|new
name|UriRef
argument_list|(
name|FISE
operator|+
literal|"selection-context"
argument_list|)
argument_list|,
name|LiteralFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|createTypedLiteral
argument_list|(
name|context
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|graph
operator|.
name|add
argument_list|(
operator|new
name|TripleImpl
argument_list|(
name|annotation
argument_list|,
operator|new
name|UriRef
argument_list|(
name|DC
operator|+
literal|"type"
argument_list|)
argument_list|,
name|type
argument_list|)
argument_list|)
expr_stmt|;
name|Integer
name|start
init|=
name|context
operator|.
name|indexOf
argument_list|(
name|namedEntity
argument_list|)
decl_stmt|;
if|if
condition|(
name|start
operator|<
literal|0
condition|)
block|{
comment|// if not found in the content set start to 42
name|start
operator|=
literal|42
expr_stmt|;
block|}
name|graph
operator|.
name|add
argument_list|(
operator|new
name|TripleImpl
argument_list|(
name|annotation
argument_list|,
operator|new
name|UriRef
argument_list|(
name|FISE
operator|+
literal|"start"
argument_list|)
argument_list|,
name|LiteralFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|createTypedLiteral
argument_list|(
name|start
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Integer
name|end
init|=
name|start
operator|+
name|namedEntity
operator|.
name|length
argument_list|()
decl_stmt|;
name|graph
operator|.
name|add
argument_list|(
operator|new
name|TripleImpl
argument_list|(
name|annotation
argument_list|,
operator|new
name|UriRef
argument_list|(
name|FISE
operator|+
literal|"end"
argument_list|)
argument_list|,
name|LiteralFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|createTypedLiteral
argument_list|(
name|end
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|void
name|toConsole
parameter_list|(
name|String
name|result
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|result
decl_stmt|;
name|s
operator|=
name|s
operator|.
name|replaceAll
argument_list|(
literal|"\\\\"
argument_list|,
literal|"\\\\\\\\"
argument_list|)
expr_stmt|;
name|s
operator|=
name|s
operator|.
name|replace
argument_list|(
literal|"\""
argument_list|,
literal|"\\\""
argument_list|)
expr_stmt|;
name|s
operator|=
name|s
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"\\n"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

