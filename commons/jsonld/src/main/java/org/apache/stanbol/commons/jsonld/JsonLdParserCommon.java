begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|jsonld
package|;
end_package

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|JsonLdParserCommon
block|{
specifier|private
specifier|static
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|JsonLdParserCommon
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**      * Uses the underlying Jettison to parse a JSON object.      *       * @param jsonString      *            JSON String representation.      * @return      */
specifier|protected
specifier|static
name|JSONObject
name|parseJson
parameter_list|(
name|String
name|jsonString
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONObject
name|jo
init|=
literal|null
decl_stmt|;
try|try
block|{
name|jo
operator|=
operator|new
name|JSONObject
argument_list|(
name|jsonString
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JSONException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"Could not parse JSON string: {}"
argument_list|,
name|jsonString
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Could not parse JSON string: "
operator|+
name|jsonString
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
name|jo
return|;
block|}
block|}
end_class

end_unit

