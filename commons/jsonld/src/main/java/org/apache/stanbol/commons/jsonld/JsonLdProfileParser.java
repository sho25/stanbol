begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|jsonld
package|;
end_package

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|JsonLdProfileParser
extends|extends
name|JsonLdParserCommon
block|{
specifier|private
specifier|static
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|JsonLdProfileParser
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|JsonLdProfile
name|parseProfile
parameter_list|(
name|String
name|jsonLdProfileString
parameter_list|)
throws|throws
name|Exception
block|{
name|logger
operator|.
name|debug
argument_list|(
literal|"Parsing {} "
operator|+
name|jsonLdProfileString
argument_list|)
expr_stmt|;
name|JsonLdProfile
name|profile
init|=
literal|null
decl_stmt|;
name|JSONObject
name|jo
init|=
name|parseJson
argument_list|(
name|jsonLdProfileString
argument_list|)
decl_stmt|;
if|if
condition|(
name|jo
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|jo
operator|.
name|has
argument_list|(
name|JsonLdCommon
operator|.
name|CONTEXT
argument_list|)
condition|)
block|{
name|JSONObject
name|ctx
init|=
name|jo
operator|.
name|getJSONObject
argument_list|(
name|JsonLdCommon
operator|.
name|CONTEXT
argument_list|)
decl_stmt|;
if|if
condition|(
name|ctx
operator|.
name|has
argument_list|(
name|JsonLdCommon
operator|.
name|TYPES
argument_list|)
condition|)
block|{
name|profile
operator|=
operator|new
name|JsonLdProfile
argument_list|()
expr_stmt|;
name|parseSubject
argument_list|(
name|jo
argument_list|,
name|profile
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|logger
operator|.
name|error
argument_list|(
literal|"A JSON-LD Profile must have a context element "
operator|+
name|JsonLdCommon
operator|.
name|CONTEXT
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"A JSON-LD Profile must have a context element "
operator|+
name|JsonLdCommon
operator|.
name|CONTEXT
argument_list|)
throw|;
block|}
block|}
else|else
block|{
name|logger
operator|.
name|error
argument_list|(
literal|"Could not parse JSON-LD Profile '{}'"
operator|+
name|jsonLdProfileString
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Could not parse JSON-LD Profile String"
argument_list|)
throw|;
block|}
return|return
name|profile
return|;
block|}
comment|/**      * Parses a single subject.      *       * @param jo      *            JSON object that holds the subject's data.      * @param profile      *            JsonLd object to add the created subject resource.      */
specifier|private
specifier|static
name|void
name|parseSubject
parameter_list|(
name|JSONObject
name|jo
parameter_list|,
name|JsonLdProfile
name|profile
parameter_list|,
name|int
name|bnodeCount
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|jo
operator|.
name|has
argument_list|(
name|JsonLdCommon
operator|.
name|CONTEXT
argument_list|)
condition|)
block|{
name|JSONObject
name|context
init|=
name|jo
operator|.
name|getJSONObject
argument_list|(
name|JsonLdCommon
operator|.
name|CONTEXT
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|context
operator|.
name|names
argument_list|()
operator|.
name|length
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|name
init|=
name|context
operator|.
name|names
argument_list|()
operator|.
name|getString
argument_list|(
name|i
argument_list|)
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
name|JsonLdCommon
operator|.
name|TYPES
argument_list|)
condition|)
block|{
name|JSONObject
name|typesObject
init|=
name|context
operator|.
name|getJSONObject
argument_list|(
name|name
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|typesObject
operator|.
name|names
argument_list|()
operator|.
name|length
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
name|String
name|property
init|=
name|typesObject
operator|.
name|names
argument_list|()
operator|.
name|getString
argument_list|(
name|j
argument_list|)
decl_stmt|;
name|Object
name|typeObject
init|=
name|typesObject
operator|.
name|get
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|typeObject
operator|instanceof
name|String
condition|)
block|{
name|String
name|typeStr
init|=
operator|(
name|String
operator|)
name|typeObject
decl_stmt|;
name|profile
operator|.
name|addType
argument_list|(
name|property
argument_list|,
name|typeStr
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|typeObject
operator|instanceof
name|JSONArray
condition|)
block|{
name|JSONArray
name|typesArray
init|=
operator|(
name|JSONArray
operator|)
name|typeObject
decl_stmt|;
for|for
control|(
name|int
name|t
init|=
literal|0
init|;
name|t
operator|<
name|typesArray
operator|.
name|length
argument_list|()
condition|;
name|t
operator|++
control|)
block|{
name|profile
operator|.
name|addType
argument_list|(
name|property
argument_list|,
name|typesArray
operator|.
name|getString
argument_list|(
name|t
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
else|else
block|{
name|profile
operator|.
name|addNamespacePrefix
argument_list|(
name|context
operator|.
name|getString
argument_list|(
name|name
argument_list|)
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
name|jo
operator|.
name|remove
argument_list|(
name|JsonLdCommon
operator|.
name|CONTEXT
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

