begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|jsonld
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * @author Fabian Christ  *  */
end_comment

begin_class
specifier|public
class|class
name|JsonLdTest
block|{
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{     }
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{     }
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample1
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://example.org/myvocab#"
argument_list|,
literal|"myvocab"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://sioc.org/vocab/1/"
argument_list|,
literal|"sioc"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|jsonLdResource
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|jsonLdResource
operator|.
name|addType
argument_list|(
literal|"foaf:Person"
argument_list|)
expr_stmt|;
name|jsonLdResource
operator|.
name|putProperty
argument_list|(
literal|"foaf:name"
argument_list|,
literal|"Manu Sporny"
argument_list|)
expr_stmt|;
name|jsonLdResource
operator|.
name|putProperty
argument_list|(
literal|"foaf:homepage"
argument_list|,
literal|"<http://manu.sporny.org/>"
argument_list|)
expr_stmt|;
name|jsonLdResource
operator|.
name|putProperty
argument_list|(
literal|"sioc:avatar"
argument_list|,
literal|"<http://twitter.com/account/profile_image/manusporny>"
argument_list|)
expr_stmt|;
name|jsonLdResource
operator|.
name|putProperty
argument_list|(
literal|"myvocab:credits"
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|jsonLdResource
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"myvocab\":\"http://example.org/myvocab#\",\"sioc\":\"http://sioc.org/vocab/1/\"},\"@type\":\"foaf:Person\",\"foaf:homepage\":\"<http://manu.sporny.org/>\",\"foaf:name\":\"Manu Sporny\",\"myvocab:credits\":500,\"sioc:avatar\":\"<http://twitter.com/account/profile_image/manusporny>\"}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|String
name|actualIndent
init|=
name|jsonLd
operator|.
name|toString
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|String
name|expectedIndent
init|=
literal|"{\n    \"@context\": {\n        \"foaf\": \"http://xmlns.com/foaf/0.1/\",\n        \"myvocab\": \"http://example.org/myvocab#\",\n        \"sioc\": \"http://sioc.org/vocab/1/\"\n    },\n    \"@type\": \"foaf:Person\",\n    \"foaf:homepage\": \"<http://manu.sporny.org/>\",\n    \"foaf:name\": \"Manu Sporny\",\n    \"myvocab:credits\": 500,\n    \"sioc:avatar\": \"<http://twitter.com/account/profile_image/manusporny>\"\n}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedIndent
argument_list|,
name|actualIndent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample1NoCuries
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://example.org/myvocab#"
argument_list|,
literal|"myvocab"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://sioc.org/vocab/1/"
argument_list|,
literal|"sioc"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|jsonLdResource
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|jsonLdResource
operator|.
name|addType
argument_list|(
literal|"foaf:Person"
argument_list|)
expr_stmt|;
name|jsonLdResource
operator|.
name|putProperty
argument_list|(
literal|"foaf:name"
argument_list|,
literal|"Manu Sporny"
argument_list|)
expr_stmt|;
name|jsonLdResource
operator|.
name|putProperty
argument_list|(
literal|"foaf:homepage"
argument_list|,
literal|"http://manu.sporny.org/"
argument_list|)
expr_stmt|;
name|jsonLdResource
operator|.
name|putProperty
argument_list|(
literal|"sioc:avatar"
argument_list|,
literal|"http://twitter.com/account/profile_image/manusporny"
argument_list|)
expr_stmt|;
name|jsonLdResource
operator|.
name|putProperty
argument_list|(
literal|"myvocab:credits"
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|jsonLdResource
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"avatar\":\"http://sioc.org/vocab/1/avatar\",\"credits\":\"http://example.org/myvocab#credits\",\"homepage\":\"http://xmlns.com/foaf/0.1/homepage\",\"name\":\"http://xmlns.com/foaf/0.1/name\",\"Person\":\"http://xmlns.com/foaf/0.1/Person\"},\"@type\":\"Person\",\"avatar\":\"http://twitter.com/account/profile_image/manusporny\",\"credits\":500,\"homepage\":\"http://manu.sporny.org/\",\"name\":\"Manu Sporny\"}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample2_JointGraph
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseJointGraphs
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"foaf:Person"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:homepage"
argument_list|,
literal|"<http://example.com/bob>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:name"
argument_list|,
literal|"Bob"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r1
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r2
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r2
operator|.
name|setSubject
argument_list|(
literal|"_:bnode2"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|addType
argument_list|(
literal|"foaf:Person"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|putProperty
argument_list|(
literal|"foaf:homepage"
argument_list|,
literal|"<http://example.com/eve>"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|putProperty
argument_list|(
literal|"foaf:name"
argument_list|,
literal|"Eve"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r2
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r2
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r3
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r3
operator|.
name|setSubject
argument_list|(
literal|"_:bnode3"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|addType
argument_list|(
literal|"foaf:Person"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|putProperty
argument_list|(
literal|"foaf:homepage"
argument_list|,
literal|"<http://example.com/bert>"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|putProperty
argument_list|(
literal|"foaf:name"
argument_list|,
literal|"Bert"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r3
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r3
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\"},\"@graph\":[{\"@id\":\"_:bnode1\",\"@type\":\"foaf:Person\",\"foaf:homepage\":\"<http://example.com/bob>\",\"foaf:name\":\"Bob\"},{\"@id\":\"_:bnode2\",\"@type\":\"foaf:Person\",\"foaf:homepage\":\"<http://example.com/eve>\",\"foaf:name\":\"Eve\"},{\"@id\":\"_:bnode3\",\"@type\":\"foaf:Person\",\"foaf:homepage\":\"<http://example.com/bert>\",\"foaf:name\":\"Bert\"}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|String
name|actualIndent
init|=
name|jsonLd
operator|.
name|toString
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|String
name|expectedIndent
init|=
literal|"{\n    \"@context\": {\n        \"foaf\": \"http://xmlns.com/foaf/0.1/\"\n    },\n    \"@graph\": [\n        {\n            \"@id\": \"_:bnode1\",\n            \"@type\": \"foaf:Person\",\n            \"foaf:homepage\": \"<http://example.com/bob>\",\n            \"foaf:name\": \"Bob\"\n        },\n        {\n            \"@id\": \"_:bnode2\",\n            \"@type\": \"foaf:Person\",\n            \"foaf:homepage\": \"<http://example.com/eve>\",\n            \"foaf:name\": \"Eve\"\n        },\n        {\n            \"@id\": \"_:bnode3\",\n            \"@type\": \"foaf:Person\",\n            \"foaf:homepage\": \"<http://example.com/bert>\",\n            \"foaf:name\": \"Bert\"\n        }\n    ]\n}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedIndent
argument_list|,
name|actualIndent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample2_JointGraphNoCuries
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseJointGraphs
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/Person"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/homepage"
argument_list|,
literal|"<http://example.com/bob>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/name"
argument_list|,
literal|"Bob"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r1
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r2
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r2
operator|.
name|setSubject
argument_list|(
literal|"_:bnode2"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|addType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/Person"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/homepage"
argument_list|,
literal|"<http://example.com/eve>"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/name"
argument_list|,
literal|"Eve"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r2
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r2
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r3
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r3
operator|.
name|setSubject
argument_list|(
literal|"_:bnode3"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|addType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/Person"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/homepage"
argument_list|,
literal|"<http://example.com/bert>"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/name"
argument_list|,
literal|"Bert"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r3
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r3
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"homepage\":\"http://xmlns.com/foaf/0.1/homepage\",\"name\":\"http://xmlns.com/foaf/0.1/name\",\"Person\":\"http://xmlns.com/foaf/0.1/Person\"},\"@graph\":[{\"@id\":\"_:bnode1\",\"@type\":\"Person\",\"homepage\":\"<http://example.com/bob>\",\"name\":\"Bob\"},{\"@id\":\"_:bnode2\",\"@type\":\"Person\",\"homepage\":\"<http://example.com/eve>\",\"name\":\"Eve\"},{\"@id\":\"_:bnode3\",\"@type\":\"Person\",\"homepage\":\"<http://example.com/bert>\",\"name\":\"Bert\"}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample2_DisjointGraph
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseJointGraphs
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"foaf:Person"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:homepage"
argument_list|,
literal|"<http://example.com/bob>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:name"
argument_list|,
literal|"Bob"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r1
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r2
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r2
operator|.
name|setSubject
argument_list|(
literal|"_:bnode2"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|addType
argument_list|(
literal|"foaf:Person"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|putProperty
argument_list|(
literal|"foaf:homepage"
argument_list|,
literal|"<http://example.com/eve>"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|putProperty
argument_list|(
literal|"foaf:name"
argument_list|,
literal|"Eve"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r2
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r2
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r3
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r3
operator|.
name|setSubject
argument_list|(
literal|"_:bnode3"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|addType
argument_list|(
literal|"foaf:Person"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|putProperty
argument_list|(
literal|"foaf:homepage"
argument_list|,
literal|"<http://example.com/eve>"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|putProperty
argument_list|(
literal|"foaf:name"
argument_list|,
literal|"Eve"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r3
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r3
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"[{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\"},\"@id\":\"_:bnode1\",\"@type\":\"foaf:Person\",\"foaf:homepage\":\"<http://example.com/bob>\",\"foaf:name\":\"Bob\"},{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\"},\"@id\":\"_:bnode2\",\"@type\":\"foaf:Person\",\"foaf:homepage\":\"<http://example.com/eve>\",\"foaf:name\":\"Eve\"},{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\"},\"@id\":\"_:bnode3\",\"@type\":\"foaf:Person\",\"foaf:homepage\":\"<http://example.com/eve>\",\"foaf:name\":\"Eve\"}]"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|String
name|actualIndent
init|=
name|jsonLd
operator|.
name|toString
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|String
name|expectedIndent
init|=
literal|"[\n    {\n        \"@context\": {\n            \"foaf\": \"http://xmlns.com/foaf/0.1/\"\n        },\n        \"@id\": \"_:bnode1\",\n        \"@type\": \"foaf:Person\",\n        \"foaf:homepage\": \"<http://example.com/bob>\",\n        \"foaf:name\": \"Bob\"\n    },\n    {\n        \"@context\": {\n            \"foaf\": \"http://xmlns.com/foaf/0.1/\"\n        },\n        \"@id\": \"_:bnode2\",\n        \"@type\": \"foaf:Person\",\n        \"foaf:homepage\": \"<http://example.com/eve>\",\n        \"foaf:name\": \"Eve\"\n    },\n    {\n        \"@context\": {\n            \"foaf\": \"http://xmlns.com/foaf/0.1/\"\n        },\n        \"@id\": \"_:bnode3\",\n        \"@type\": \"foaf:Person\",\n        \"foaf:homepage\": \"<http://example.com/eve>\",\n        \"foaf:name\": \"Eve\"\n    }\n]"
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedIndent
argument_list|,
name|actualIndent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample2_DisjointGraphNoCuries
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseJointGraphs
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"foaf:Person"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:homepage"
argument_list|,
literal|"<http://example.com/bob>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:name"
argument_list|,
literal|"Bob"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r1
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r2
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r2
operator|.
name|setSubject
argument_list|(
literal|"_:bnode2"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|addType
argument_list|(
literal|"foaf:Person"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|putProperty
argument_list|(
literal|"foaf:homepage"
argument_list|,
literal|"<http://example.com/eve>"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|putProperty
argument_list|(
literal|"foaf:name"
argument_list|,
literal|"Eve"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r2
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r2
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r3
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r3
operator|.
name|setSubject
argument_list|(
literal|"_:bnode3"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|addType
argument_list|(
literal|"foaf:Person"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|putProperty
argument_list|(
literal|"foaf:homepage"
argument_list|,
literal|"<http://example.com/eve>"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|putProperty
argument_list|(
literal|"foaf:name"
argument_list|,
literal|"Eve"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r3
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r3
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"[{\"@context\":{\"homepage\":\"http://xmlns.com/foaf/0.1/homepage\",\"name\":\"http://xmlns.com/foaf/0.1/name\",\"Person\":\"http://xmlns.com/foaf/0.1/Person\"},\"@id\":\"_:bnode1\",\"@type\":\"Person\",\"homepage\":\"<http://example.com/bob>\",\"name\":\"Bob\"},{\"@context\":{\"homepage\":\"http://xmlns.com/foaf/0.1/homepage\",\"name\":\"http://xmlns.com/foaf/0.1/name\",\"Person\":\"http://xmlns.com/foaf/0.1/Person\"},\"@id\":\"_:bnode2\",\"@type\":\"Person\",\"homepage\":\"<http://example.com/eve>\",\"name\":\"Eve\"},{\"@context\":{\"homepage\":\"http://xmlns.com/foaf/0.1/homepage\",\"name\":\"http://xmlns.com/foaf/0.1/name\",\"Person\":\"http://xmlns.com/foaf/0.1/Person\"},\"@id\":\"_:bnode3\",\"@type\":\"Person\",\"homepage\":\"<http://example.com/eve>\",\"name\":\"Eve\"}]"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample3
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://microformats.org/profile/hcard#vcard"
argument_list|,
literal|"vcard"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://microformats.org/profile/hcard#url"
argument_list|,
literal|"url"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://microformats.org/profile/hcard#fn"
argument_list|,
literal|"fn"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"vcard"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"url"
argument_list|,
literal|"<http://tantek.com/>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"fn"
argument_list|,
literal|"Tantek Celik"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"fn\":\"http://microformats.org/profile/hcard#fn\",\"url\":\"http://microformats.org/profile/hcard#url\",\"vcard\":\"http://microformats.org/profile/hcard#vcard\"},\"@id\":\"_:bnode1\",\"@type\":\"vcard\",\"fn\":\"Tantek Celik\",\"url\":\"<http://tantek.com/>\"}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|String
name|actualIndent
init|=
name|jsonLd
operator|.
name|toString
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|String
name|expectedIndent
init|=
literal|"{\n    \"@context\": {\n        \"fn\": \"http://microformats.org/profile/hcard#fn\",\n        \"url\": \"http://microformats.org/profile/hcard#url\",\n        \"vcard\": \"http://microformats.org/profile/hcard#vcard\"\n    },\n    \"@id\": \"_:bnode1\",\n    \"@type\": \"vcard\",\n    \"fn\": \"Tantek Celik\",\n    \"url\": \"<http://tantek.com/>\"\n}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedIndent
argument_list|,
name|actualIndent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample3DefaultContext
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://purl.org/dc/terms/"
argument_list|,
literal|"dc"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://rdfs.org/sioc/ns#"
argument_list|,
literal|"sioc"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://creativecommons.org/ns#"
argument_list|,
literal|"cc"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2003/01/geo/wgs84_pos#"
argument_list|,
literal|"geo"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2006/vcard/ns#"
argument_list|,
literal|"vcard"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2002/12/cal/ical#"
argument_list|,
literal|"cal"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://usefulinc.com/ns/doap#"
argument_list|,
literal|"doap"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/Person"
argument_list|,
literal|"Person"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/name"
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/homepage"
argument_list|,
literal|"homepage"
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample4Microformats
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseJointGraphs
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://purl.oreilly.com/works/45U8QJGZSQKDH8N>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"http://purl.org/vocab/frbr/core#Work"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://purl.org/dc/terms/title"
argument_list|,
literal|"Just a Geek"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://purl.org/dc/terms/creator"
argument_list|,
literal|"Whil Wheaton"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://purl.org/vocab/frbr/core#realization"
argument_list|,
literal|"<http://purl.oreilly.com/products/9780596007683.BOOK>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://purl.org/vocab/frbr/core#realization"
argument_list|,
literal|"<http://purl.oreilly.com/products/9780596802189.EBOOK>"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r1
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r2
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r2
operator|.
name|setSubject
argument_list|(
literal|"<http://purl.oreilly.com/products/9780596007683.BOOK>"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|addType
argument_list|(
literal|"<http://purl.org/vocab/frbr/core#Expression>"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|putProperty
argument_list|(
literal|"http://purl.org/dc/terms/type"
argument_list|,
literal|"<http://purl.oreilly.com/product-types/BOOK>"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r2
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r2
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r3
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r3
operator|.
name|setSubject
argument_list|(
literal|"<http://purl.oreilly.com/products/9780596802189.EBOOK>"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|addType
argument_list|(
literal|"http://purl.org/vocab/frbr/core#Expression"
argument_list|)
expr_stmt|;
name|r3
operator|.
name|putProperty
argument_list|(
literal|"http://purl.org/dc/terms/type"
argument_list|,
literal|"<http://purl.oreilly.com/product-types/BOOK>"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r3
operator|.
name|getSubject
argument_list|()
argument_list|,
name|r3
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"[{\"@id\":\"<http://purl.oreilly.com/products/9780596007683.BOOK>\",\"@type\":\"<http://purl.org/vocab/frbr/core#Expression>\",\"http://purl.org/dc/terms/type\":\"<http://purl.oreilly.com/product-types/BOOK>\"},{\"@id\":\"<http://purl.oreilly.com/products/9780596802189.EBOOK>\",\"@type\":\"http://purl.org/vocab/frbr/core#Expression\",\"http://purl.org/dc/terms/type\":\"<http://purl.oreilly.com/product-types/BOOK>\"},{\"@id\":\"<http://purl.oreilly.com/works/45U8QJGZSQKDH8N>\",\"@type\":\"http://purl.org/vocab/frbr/core#Work\",\"http://purl.org/dc/terms/creator\":\"Whil Wheaton\",\"http://purl.org/dc/terms/title\":\"Just a Geek\",\"http://purl.org/vocab/frbr/core#realization\":[\"<http://purl.oreilly.com/products/9780596007683.BOOK>\",\"<http://purl.oreilly.com/products/9780596802189.EBOOK>\"]}]"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|String
name|actualIndent
init|=
name|jsonLd
operator|.
name|toString
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|String
name|expectedIndent
init|=
literal|"[\n    {\n        \"@id\": \"<http://purl.oreilly.com/products/9780596007683.BOOK>\",\n        \"@type\": \"<http://purl.org/vocab/frbr/core#Expression>\",\n        \"http://purl.org/dc/terms/type\": \"<http://purl.oreilly.com/product-types/BOOK>\"\n    },\n    {\n        \"@id\": \"<http://purl.oreilly.com/products/9780596802189.EBOOK>\",\n        \"@type\": \"http://purl.org/vocab/frbr/core#Expression\",\n        \"http://purl.org/dc/terms/type\": \"<http://purl.oreilly.com/product-types/BOOK>\"\n    },\n    {\n        \"@id\": \"<http://purl.oreilly.com/works/45U8QJGZSQKDH8N>\",\n        \"@type\": \"http://purl.org/vocab/frbr/core#Work\",\n        \"http://purl.org/dc/terms/creator\": \"Whil Wheaton\",\n        \"http://purl.org/dc/terms/title\": \"Just a Geek\",\n        \"http://purl.org/vocab/frbr/core#realization\": [\n            \"<http://purl.oreilly.com/products/9780596007683.BOOK>\",\n            \"<http://purl.oreilly.com/products/9780596802189.EBOOK>\"\n        ]\n    }\n]"
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedIndent
argument_list|,
name|actualIndent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample5TypedLiterals
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://purl.org/dc/terms/"
argument_list|,
literal|"dc"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://purl.org/dc/terms/modified"
argument_list|,
literal|"2010-05-29T14:17:39+02:00^^http://www.w3.org/2001/XMLSchema#dateTime"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
literal|"r1"
argument_list|,
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"dc\":\"http://purl.org/dc/terms/\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"dc:modified\":\"2010-05-29T14:17:39+02:00^^xsd:dateTime\"}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample5TypedLiteralsCoercion
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"http://example.org/people#joebob"
argument_list|)
expr_stmt|;
name|String
name|nick
init|=
literal|"\"stu\"^^http://www.w3.org/2001/XMLSchema#string"
decl_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
name|nick
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
literal|"xsd:string"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
literal|"r1"
argument_list|,
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"http://xmlns.com/foaf/0.1/nick\":{\"@type\":\"http://www.w3.org/2001/XMLSchema#string\"}},\"@id\":\"http://example.org/people#joebob\",\"http://xmlns.com/foaf/0.1/nick\":\"stu\"}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample5TypedLiteralsNsCoercion
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://example.org/people#joebob>"
argument_list|)
expr_stmt|;
name|String
name|nick
init|=
literal|"\"stu\"^^http://www.w3.org/2001/XMLSchema#string"
decl_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
name|nick
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
literal|"xsd:string"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"foaf:nick\":{\"@type\":\"xsd:string\"},\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"<http://example.org/people#joebob>\",\"foaf:nick\":\"stu\"}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample5TypedLiteralsNsCoercionNoCuries
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"http://example.org/people#joebob"
argument_list|)
expr_stmt|;
name|String
name|nick
init|=
literal|"\"stu\"^^http://www.w3.org/2001/XMLSchema#string"
decl_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
name|nick
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
literal|"xsd:string"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"nick\":{\"@id\":\"http://xmlns.com/foaf/0.1/nick\",\"@type\":\"http://www.w3.org/2001/XMLSchema#string\"},\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"http://example.org/people#joebob\",\"nick\":\"stu\"}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample5TypedLiteralsNoCoercion
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://example.org/people#joebob>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
literal|"stu"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
literal|"xsd:string"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@id\":\"<http://example.org/people#joebob>\","
operator|+
literal|"\"http://xmlns.com/foaf/0.1/nick\":{"
operator|+
literal|"\"@type\":\"http://www.w3.org/2001/XMLSchema#string\","
operator|+
literal|"\"@value\":\"stu\""
operator|+
literal|"}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample5TypedLiteralsNsNoCoercion
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://example.org/people#joebob>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
literal|"stu"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
literal|"xsd:string"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},"
operator|+
literal|"\"@id\":\"<http://example.org/people#joebob>\",\"foaf:nick\":{"
operator|+
literal|"\"@type\":\"xsd:string\","
operator|+
literal|"\"@value\":\"stu\""
operator|+
literal|"}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample6MultipleObjects
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://example.org/people#joebob>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"stu"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"groknar"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"radface"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\"},\"@id\":\"<http://example.org/people#joebob>\",\"foaf:nick\":[\"stu\",\"groknar\",\"radface\"]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample6MultipleTypedObjects
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://example.org/people#joebob>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"stu"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"groknar"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"radface"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"xsd:string"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"<http://example.org/people#joebob>\",\"foaf:nick\":[{\"@type\":\"xsd:string\",\"@value\":\"stu\"},{\"@type\":\"xsd:string\",\"@value\":\"groknar\"},{\"@type\":\"xsd:string\",\"@value\":\"radface\"}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|String
name|actualIndent
init|=
name|jsonLd
operator|.
name|toString
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|String
name|expectedIndent
init|=
literal|"{\n"
operator|+
literal|"    \"@context\": {\n"
operator|+
literal|"        \"foaf\": \"http://xmlns.com/foaf/0.1/\",\n"
operator|+
literal|"        \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n"
operator|+
literal|"    },\n"
operator|+
literal|"    \"@id\": \"<http://example.org/people#joebob>\",\n"
operator|+
literal|"    \"foaf:nick\": [\n"
operator|+
literal|"        {\n"
operator|+
literal|"            \"@type\": \"xsd:string\",\n"
operator|+
literal|"            \"@value\": \"stu\"\n"
operator|+
literal|"        },\n"
operator|+
literal|"        {\n"
operator|+
literal|"            \"@type\": \"xsd:string\",\n"
operator|+
literal|"            \"@value\": \"groknar\"\n"
operator|+
literal|"        },\n"
operator|+
literal|"        {\n"
operator|+
literal|"            \"@type\": \"xsd:string\",\n"
operator|+
literal|"            \"@value\": \"radface\"\n"
operator|+
literal|"        }\n"
operator|+
literal|"    ]\n}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedIndent
argument_list|,
name|actualIndent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample6MultipleObjectsCoerce
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://example.org/people#joebob>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"stu"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"groknar"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"radface"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"xsd:string"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"http://xmlns.com/foaf/0.1/nick\":{\"@type\":\"http://www.w3.org/2001/XMLSchema#string\"}},\"@id\":\"<http://example.org/people#joebob>\",\"http://xmlns.com/foaf/0.1/nick\":[\"stu\",\"groknar\",\"radface\"]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample6MultipleObjectsCoerceNoCuries
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://example.org/people#joebob>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"stu"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"groknar"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"radface"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"xsd:string"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"nick\":{\"@id\":\"http://xmlns.com/foaf/0.1/nick\",\"@type\":\"http://www.w3.org/2001/XMLSchema#string\"},\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"<http://example.org/people#joebob>\",\"nick\":[\"stu\",\"groknar\",\"radface\"]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSpecExample6MultipleObjectsNsCoerce
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://example.org/people#joebob>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"stu"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"groknar"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"radface"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"foaf:nick"
argument_list|,
literal|"xsd:string"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"foaf:nick\":{\"@type\":\"xsd:string\"},\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"<http://example.org/people#joebob>\",\"foaf:nick\":[\"stu\",\"groknar\",\"radface\"]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultipleIRIsNoNsCoerce
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://nickworld.com/nicks/"
argument_list|,
literal|"nick"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://example.org/people#joebob>"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
literal|"nick:stu"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
literal|"nick:pet"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
literal|"nick:flo"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
literal|"@iri"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"http://xmlns.com/foaf/0.1/nick\":{\"@type\":\"@iri\"}},\"@id\":\"<http://example.org/people#joebob>\",\"http://xmlns.com/foaf/0.1/nick\":[\"http://nickworld.com/nicks/stu\",\"http://nickworld.com/nicks/pet\",\"http://nickworld.com/nicks/flo\"]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|String
name|actualIndent
init|=
name|jsonLd
operator|.
name|toString
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|String
name|expectedIndent
init|=
literal|"{\n    \"@context\": {\n        \"http://xmlns.com/foaf/0.1/nick\": {\n            \"@type\": \"@iri\"\n        }\n    },\n    \"@id\": \"<http://example.org/people#joebob>\",\n    \"http://xmlns.com/foaf/0.1/nick\": [\n        \"http://nickworld.com/nicks/stu\",\n        \"http://nickworld.com/nicks/pet\",\n        \"http://nickworld.com/nicks/flo\"\n    ]\n}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedIndent
argument_list|,
name|actualIndent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultipleIRIs
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://nickworld.com/nicks/"
argument_list|,
literal|"nick"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://example.org/people#joebob>"
argument_list|)
expr_stmt|;
name|JsonLdIRI
name|nick1
init|=
operator|new
name|JsonLdIRI
argument_list|(
literal|"nick:stu"
argument_list|)
decl_stmt|;
name|JsonLdIRI
name|nick2
init|=
operator|new
name|JsonLdIRI
argument_list|(
literal|"nick:pet"
argument_list|)
decl_stmt|;
name|JsonLdIRI
name|nick3
init|=
operator|new
name|JsonLdIRI
argument_list|(
literal|"nick:flo"
argument_list|)
decl_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
name|nick1
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
name|nick2
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
name|nick3
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@id\":\"<http://example.org/people#joebob>\",\"http://xmlns.com/foaf/0.1/nick\":[{\"@id\":\"http://nickworld.com/nicks/stu\"},{\"@id\":\"http://nickworld.com/nicks/pet\"},{\"@id\":\"http://nickworld.com/nicks/flo\"}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultipleIRIsWithNS
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://nickworld.com/nicks/"
argument_list|,
literal|"nick"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://example.org/people#joebob>"
argument_list|)
expr_stmt|;
name|JsonLdIRI
name|nick1
init|=
operator|new
name|JsonLdIRI
argument_list|(
literal|"nick:stu"
argument_list|)
decl_stmt|;
name|JsonLdIRI
name|nick2
init|=
operator|new
name|JsonLdIRI
argument_list|(
literal|"nick:pet"
argument_list|)
decl_stmt|;
name|JsonLdIRI
name|nick3
init|=
operator|new
name|JsonLdIRI
argument_list|(
literal|"nick:flo"
argument_list|)
decl_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
name|nick1
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
name|nick2
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
name|nick3
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"nick\":\"http://nickworld.com/nicks/\"},\"@id\":\"<http://example.org/people#joebob>\",\"foaf:nick\":[{\"@id\":\"nick:stu\"},{\"@id\":\"nick:pet\"},{\"@id\":\"nick:flo\"}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultipleIRIsWithNSCoerce
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://nickworld.com/nicks/"
argument_list|,
literal|"nickw"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"<http://example.org/people#joebob>"
argument_list|)
expr_stmt|;
name|JsonLdIRI
name|nick1
init|=
operator|new
name|JsonLdIRI
argument_list|(
literal|"nick:stu"
argument_list|)
decl_stmt|;
name|JsonLdIRI
name|nick2
init|=
operator|new
name|JsonLdIRI
argument_list|(
literal|"nick:pet"
argument_list|)
decl_stmt|;
name|JsonLdIRI
name|nick3
init|=
operator|new
name|JsonLdIRI
argument_list|(
literal|"nick:flo"
argument_list|)
decl_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
name|nick1
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
name|nick2
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
name|nick3
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/nick"
argument_list|,
literal|"@id"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"foaf:nick\":{\"@type\":\"@id\"}},\"@id\":\"<http://example.org/people#joebob>\",\"foaf:nick\":[\"nick:stu\",\"nick:pet\",\"nick:flo\"]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUseProfile
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setProfile
argument_list|(
literal|"testprofile"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@id\":\"_:bnode1\",\"@profile\":\"testprofile\"}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntegerValue
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:age"
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"foaf:age"
argument_list|,
literal|"http://www.w3.org/2001/XMLSchema#int"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"foaf:age\":{\"@type\":\"xsd:int\"},\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"_:bnode1\",\"foaf:age\":31}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|String
name|actualIndented
init|=
name|jsonLd
operator|.
name|toString
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|String
name|expectedIndented
init|=
literal|"{\n  \"@context\": {\n    \"foaf\": \"http://xmlns.com/foaf/0.1/\",\n    \"foaf:age\": {\n      \"@type\": \"xsd:int\"\n    },\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n  },\n  \"@id\": \"_:bnode1\",\n  \"foaf:age\": 31\n}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedIndented
argument_list|,
name|actualIndented
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntegerValueNoCoerce
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:age"
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"foaf:age"
argument_list|,
literal|"http://www.w3.org/2001/XMLSchema#int"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"foaf:age\":{\"@type\":\"xsd:int\",\"@value\":\"31\"}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFloatValue
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:age"
argument_list|,
literal|31.533567
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"foaf:age"
argument_list|,
literal|"http://www.w3.org/2001/XMLSchema#int"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"foaf:age\":{\"@type\":\"xsd:int\"},\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"_:bnode1\",\"foaf:age\":31.533567}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFloatValueNoCuries
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|31.533567
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|"http://www.w3.org/2001/XMLSchema#int"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"age\":{\"@id\":\"http://xmlns.com/foaf/0.1/age\",\"@type\":\"http://www.w3.org/2001/XMLSchema#int\"},\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"_:bnode1\",\"age\":31.533567}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFloatValueNoCoerce
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseCuries
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"foaf:age"
argument_list|,
literal|31.533567
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"foaf:age"
argument_list|,
literal|"http://www.w3.org/2001/XMLSchema#int"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},"
operator|+
literal|"\"@id\":\"_:bnode1\",\"foaf:age\":{"
operator|+
literal|"\"@type\":\"xsd:int\","
operator|+
literal|"\"@value\":\"31.533567\""
operator|+
literal|"}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDuplicateProperties
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://onto.test.org/"
argument_list|,
literal|"onto"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|31.533567
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|"http://www.w3.org/2001/XMLSchema#float"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://onto.test.org/age"
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://onto.test.org/age"
argument_list|,
literal|"http://www.w3.org/2001/XMLSchema#int"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"foaf:age\":{\"@type\":\"xsd:float\"},\"onto\":\"http://onto.test.org/\",\"onto:age\":{\"@type\":\"xsd:int\"},\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"_:bnode1\",\"foaf:age\":31.533567,\"onto:age\":456}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSubjectWithSeveralTypes
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://onto.test.org/"
argument_list|,
literal|"onto"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"xsd:String"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"foaf:name"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|31.533567
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|"http://www.w3.org/2001/XMLSchema#float"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"age\":{\"@id\":\"http://xmlns.com/foaf/0.1/age\",\"@type\":\"http://www.w3.org/2001/XMLSchema#float\"},\"name\":\"http://xmlns.com/foaf/0.1/name\",\"String\":\"http://www.w3.org/2001/XMLSchema#String\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"_:bnode1\",\"@type\":[\"String\",\"name\"],\"age\":31.533567}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSubjectWithSeveralSameTypes
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://onto.test.org/"
argument_list|,
literal|"onto"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"xsd:String"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"foaf:String"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|31.533567
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|"http://www.w3.org/2001/XMLSchema#float"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"foaf:age\":{\"@type\":\"xsd:float\"},\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"_:bnode1\",\"@type\":[\"foaf:String\",\"xsd:String\"],\"foaf:age\":31.533567}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGraph
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://onto.test.org/"
argument_list|,
literal|"onto"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"xsd:String"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"foaf:name"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|31.533567
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|"http://www.w3.org/2001/XMLSchema#float"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r2
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r2
operator|.
name|setSubject
argument_list|(
literal|"_:bnode2"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|addType
argument_list|(
literal|"xsd:String"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|addType
argument_list|(
literal|"foaf:name"
argument_list|)
expr_stmt|;
name|r2
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|31.533567
argument_list|)
expr_stmt|;
name|r2
operator|.
name|putPropertyType
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|"http://www.w3.org/2001/XMLSchema#float"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r2
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"age\":{\"@id\":\"http://xmlns.com/foaf/0.1/age\",\"@type\":\"http://www.w3.org/2001/XMLSchema#float\"},\"name\":\"http://xmlns.com/foaf/0.1/name\",\"String\":\"http://www.w3.org/2001/XMLSchema#String\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@graph\":[{\"@id\":\"_:bnode1\",\"@type\":[\"String\",\"name\"],\"age\":31.533567},{\"@id\":\"_:bnode2\",\"@type\":[\"String\",\"name\"],\"age\":31.533567}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultivaluedProperty
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://onto.test.org/"
argument_list|,
literal|"onto"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"xsd:String"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"foaf:name"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|31.533567
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|"de"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"age\":\"http://xmlns.com/foaf/0.1/age\",\"name\":\"http://xmlns.com/foaf/0.1/name\",\"String\":\"http://www.w3.org/2001/XMLSchema#String\"},\"@id\":\"_:bnode1\",\"@type\":[\"String\",\"name\"],\"age\":[31.533567,\"de\"]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultivaluedTypedProperty
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://onto.test.org/"
argument_list|,
literal|"onto"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"xsd:String"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"foaf:name"
argument_list|)
expr_stmt|;
name|JsonLdProperty
name|ageProperty
init|=
operator|new
name|JsonLdProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|)
decl_stmt|;
name|JsonLdPropertyValue
name|v1
init|=
operator|new
name|JsonLdPropertyValue
argument_list|(
literal|31.533567
argument_list|)
decl_stmt|;
name|v1
operator|.
name|setType
argument_list|(
literal|"xsd:Float"
argument_list|)
expr_stmt|;
name|ageProperty
operator|.
name|addValue
argument_list|(
name|v1
argument_list|)
expr_stmt|;
name|JsonLdPropertyValue
name|v2
init|=
operator|new
name|JsonLdPropertyValue
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|v2
operator|.
name|setType
argument_list|(
literal|"xsd:String"
argument_list|)
expr_stmt|;
name|ageProperty
operator|.
name|addValue
argument_list|(
name|v2
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
name|ageProperty
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"age\":\"http://xmlns.com/foaf/0.1/age\",\"name\":\"http://xmlns.com/foaf/0.1/name\",\"String\":\"http://www.w3.org/2001/XMLSchema#String\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},"
operator|+
literal|"\"@id\":\"_:bnode1\",\"@type\":[\"String\",\"name\"],\"age\":[{"
operator|+
literal|"\"@type\":\"xsd:Float\","
operator|+
literal|"\"@value\":\"31.533567\""
operator|+
literal|"},{"
operator|+
literal|"\"@type\":\"xsd:String\","
operator|+
literal|"\"@value\":\"test\""
operator|+
literal|"}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultivaluedTypedLangProperty
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://onto.test.org/"
argument_list|,
literal|"onto"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"xsd:String"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"foaf:name"
argument_list|)
expr_stmt|;
name|JsonLdProperty
name|ageProperty
init|=
operator|new
name|JsonLdProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|)
decl_stmt|;
name|JsonLdPropertyValue
name|v1
init|=
operator|new
name|JsonLdPropertyValue
argument_list|(
literal|31.533567
argument_list|)
decl_stmt|;
name|v1
operator|.
name|setType
argument_list|(
literal|"xsd:Float"
argument_list|)
expr_stmt|;
name|ageProperty
operator|.
name|addValue
argument_list|(
name|v1
argument_list|)
expr_stmt|;
name|JsonLdPropertyValue
name|v2
init|=
operator|new
name|JsonLdPropertyValue
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|v2
operator|.
name|setType
argument_list|(
literal|"xsd:String"
argument_list|)
expr_stmt|;
name|v2
operator|.
name|setLanguage
argument_list|(
literal|"en"
argument_list|)
expr_stmt|;
name|ageProperty
operator|.
name|addValue
argument_list|(
name|v2
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
name|ageProperty
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"age\":\"http://xmlns.com/foaf/0.1/age\",\"name\":\"http://xmlns.com/foaf/0.1/name\",\"String\":\"http://www.w3.org/2001/XMLSchema#String\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"_:bnode1\",\"@type\":[\"String\",\"name\"],\"age\":[{\"@type\":\"xsd:Float\",\"@value\":\"31.533567\"},{\"@language\":\"en\",\"@type\":\"xsd:String\",\"@value\":\"test\"}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultivaluedMixedTypedLangProperty
parameter_list|()
block|{
name|JsonLd
name|jsonLd
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema#"
argument_list|,
literal|"xsd"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://xmlns.com/foaf/0.1/"
argument_list|,
literal|"foaf"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://onto.test.org/"
argument_list|,
literal|"onto"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|r1
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|r1
operator|.
name|setSubject
argument_list|(
literal|"_:bnode1"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"xsd:String"
argument_list|)
expr_stmt|;
name|r1
operator|.
name|addType
argument_list|(
literal|"foaf:name"
argument_list|)
expr_stmt|;
name|JsonLdProperty
name|ageProperty
init|=
operator|new
name|JsonLdProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|)
decl_stmt|;
name|JsonLdPropertyValue
name|v1
init|=
operator|new
name|JsonLdPropertyValue
argument_list|(
literal|31.533567
argument_list|)
decl_stmt|;
name|v1
operator|.
name|setType
argument_list|(
literal|"xsd:Float"
argument_list|)
expr_stmt|;
name|ageProperty
operator|.
name|addValue
argument_list|(
name|v1
argument_list|)
expr_stmt|;
name|JsonLdPropertyValue
name|v2
init|=
operator|new
name|JsonLdPropertyValue
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|v2
operator|.
name|setType
argument_list|(
literal|"xsd:String"
argument_list|)
expr_stmt|;
name|v2
operator|.
name|setLanguage
argument_list|(
literal|"en"
argument_list|)
expr_stmt|;
name|ageProperty
operator|.
name|addValue
argument_list|(
name|v2
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
name|ageProperty
argument_list|)
expr_stmt|;
name|r1
operator|.
name|putProperty
argument_list|(
literal|"http://xmlns.com/foaf/0.1/age"
argument_list|,
literal|"One more untyped value"
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|put
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"@context\":{\"age\":\"http://xmlns.com/foaf/0.1/age\",\"name\":\"http://xmlns.com/foaf/0.1/name\",\"String\":\"http://www.w3.org/2001/XMLSchema#String\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@id\":\"_:bnode1\",\"@type\":[\"String\",\"name\"],\"age\":[{\"@type\":\"xsd:Float\",\"@value\":\"31.533567\"},{\"@language\":\"en\",\"@type\":\"xsd:String\",\"@value\":\"test\"},\"One more untyped value\"]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|void
name|toConsole
parameter_list|(
name|String
name|actual
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|actual
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|actual
decl_stmt|;
name|s
operator|=
name|s
operator|.
name|replaceAll
argument_list|(
literal|"\\\\"
argument_list|,
literal|"\\\\\\\\"
argument_list|)
expr_stmt|;
name|s
operator|=
name|s
operator|.
name|replace
argument_list|(
literal|"\""
argument_list|,
literal|"\\\""
argument_list|)
expr_stmt|;
name|s
operator|=
name|s
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"\\n"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

