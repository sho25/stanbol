begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|jsonld
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JsonLdParserTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testParseProfile
parameter_list|()
block|{
name|String
name|jsonldInput
init|=
literal|"{\"@context\":{\"iks\":\"http://iks-project.eu/ont/\",\"#types\":{\"person\":\"iks:person\",\"organization\":\"iks:organization\"}}}"
decl_stmt|;
name|JsonLd
name|jsonLd
init|=
name|JsonLdParser
operator|.
name|parse
argument_list|(
name|jsonldInput
argument_list|)
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"#\":{\"iks\":\"http:\\/\\/iks-project.eu\\/ont\\/\",\"#types\":{\"organization\":\"iks:organization\",\"person\":\"iks:person\"}}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|jsonLd
operator|.
name|representsProfile
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|jsonLd
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParseWithProfile
parameter_list|()
block|{
name|String
name|jsonldInput
init|=
literal|"{\"@context\":{\"iks\":\"http://iks-project.eu/ont/\",\"upb\":\"http://upb.de/persons/\"},\"@profile\":\"iks:employeeOf\",\"person\":{\"@iri\":\"upb:bnagel\"},\"organization\":{\"@iri\":\"http://uni-paderborn.de\"}}"
decl_stmt|;
name|JsonLd
name|jsonLd
init|=
name|JsonLdParser
operator|.
name|parse
argument_list|(
name|jsonldInput
argument_list|)
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"#\":{\"iks\":\"http:\\/\\/iks-project.eu\\/ont\\/\",\"upb\":\"http:\\/\\/upb.de\\/persons\\/\"},\"@\":\"_:bnode1\",\"@profile\":\"iks:employeeOf\",\"organization\":{\"@iri\":\"http:\\/\\/uni-paderborn.de\"},\"person\":{\"@iri\":\"upb:bnagel\"}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|jsonLd
operator|.
name|representsProfile
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|jsonLd
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParse3
parameter_list|()
block|{
name|String
name|jsonldInput
init|=
literal|"{\"@context\":{\"iks\":\"http://iks-project.eu/ont/\",\"upb\":\"http://upb.de/persons/\"},\"@profile\":\"iks:employeeOf\",\"@\":[{\"person\":{\"@iri\":\"upb:bnagel\"},\"organization\":{\"@iri\":\"http://uni-paderborn.de\"}},{\"person\":{\"@iri\":\"upb:fchrist\"},\"organization\":{\"@iri\":\"http://uni-paderborn.de\"}}]}"
decl_stmt|;
name|JsonLd
name|jsonLd
init|=
name|JsonLdParser
operator|.
name|parse
argument_list|(
name|jsonldInput
argument_list|)
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"#\":{\"iks\":\"http:\\/\\/iks-project.eu\\/ont\\/\",\"upb\":\"http:\\/\\/upb.de\\/persons\\/\"},\"@\":[{\"@\":\"_:bnode1\",\"@profile\":\"http:\\/\\/iks-project.eu\\/ont\\/employeeOf\",\"organization\":{\"@iri\":\"http:\\/\\/uni-paderborn.de\"},\"person\":{\"@iri\":\"http:\\/\\/upb.de\\/persons\\/bnagel\"}},{\"@\":\"_:bnode2\",\"@profile\":\"http:\\/\\/iks-project.eu\\/ont\\/employeeOf\",\"organization\":{\"@iri\":\"http:\\/\\/uni-paderborn.de\"},\"person\":{\"@iri\":\"http:\\/\\/upb.de\\/persons\\/fchrist\"}}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|jsonLd
operator|.
name|representsProfile
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|jsonLd
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParse4
parameter_list|()
block|{
name|String
name|jsonldInput
init|=
literal|"{\"@context\":{\"iks\":\"http://iks-project.eu/ont/\",\"upb\":\"http://upb.de/persons/\"},\"@profile\":\"iks:employeeOf\",\"@\":[{\"person\":{\"@iri\":\"upb:bnagel\"},\"organization\":{\"@iri\":\"http://uni-paderborn.de\"}},{\"person\":{\"@iri\":\"upb:fchrist\"},\"organization\":{\"@iri\":\"http://uni-paderborn.de\"}}]}"
decl_stmt|;
name|JsonLd
name|jsonLd
init|=
name|JsonLdParser
operator|.
name|parse
argument_list|(
name|jsonldInput
argument_list|)
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"#\":{\"iks\":\"http:\\/\\/iks-project.eu\\/ont\\/\",\"upb\":\"http:\\/\\/upb.de\\/persons\\/\"},\"@\":[{\"@\":\"_:bnode1\",\"@profile\":\"iks:employeeOf\",\"organization\":{\"@iri\":\"http:\\/\\/uni-paderborn.de\"},\"person\":{\"@iri\":\"upb:bnagel\"}},{\"@\":\"_:bnode2\",\"@profile\":\"iks:employeeOf\",\"organization\":{\"@iri\":\"http:\\/\\/uni-paderborn.de\"},\"person\":{\"@iri\":\"upb:fchrist\"}}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|jsonLd
operator|.
name|representsProfile
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|jsonLd
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParse5
parameter_list|()
block|{
name|String
name|jsonldInput
init|=
literal|"{\"@context\":{\"iks\":\"http://iks-project.eu/ont/\",\"upb\":\"http://upb.de/persons/\"},\"@profile\":\"iks:employeeOf\",\"@\":[{\"person\":{\"@iri\":\"upb:bnagel\"},\"organization\":{\"@iri\":\"http://uni-paderborn.de\"}},{\"person\":{\"@iri\":\"upb:fchrist\"},\"organization\":{\"@iri\":\"http://uni-paderborn.de\"}}]}"
decl_stmt|;
name|JsonLd
name|jsonLd
init|=
name|JsonLdParser
operator|.
name|parse
argument_list|(
name|jsonldInput
argument_list|)
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseJointGraphs
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"[{\"#\":{\"iks\":\"http:\\/\\/iks-project.eu\\/ont\\/\",\"upb\":\"http:\\/\\/upb.de\\/persons\\/\"},\"@\":\"_:bnode1\",\"@profile\":\"iks:employeeOf\",\"organization\":{\"@iri\":\"http:\\/\\/uni-paderborn.de\"},\"person\":{\"@iri\":\"upb:bnagel\"}},{\"#\":{\"iks\":\"http:\\/\\/iks-project.eu\\/ont\\/\",\"upb\":\"http:\\/\\/upb.de\\/persons\\/\"},\"@\":\"_:bnode2\",\"@profile\":\"iks:employeeOf\",\"organization\":{\"@iri\":\"http:\\/\\/uni-paderborn.de\"},\"person\":{\"@iri\":\"upb:fchrist\"}}]"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|jsonLd
operator|.
name|representsProfile
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|jsonLd
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParse6
parameter_list|()
block|{
name|String
name|jsonldInput
init|=
literal|"{\"@context\":{\"iks\":\"http://iks-project.eu/ont/\",\"upb\":\"http://upb.de/persons/\"},\"@\":[{\"@profile\":\"iks:employeeOf\",\"person\":{\"@iri\":\"upb:bnagel\"},\"organization\":{\"@iri\":\"http://uni-paderborn.de\"}},{\"@profile\":\"iks:friendOf\",\"person\":{\"@iri\":\"upb:bnagel\"},\"friend\":{\"@iri\":\"upb:fchrist\"}}]}"
decl_stmt|;
name|JsonLd
name|jsonLd
init|=
name|JsonLdParser
operator|.
name|parse
argument_list|(
name|jsonldInput
argument_list|)
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseJointGraphs
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"#\":{\"iks\":\"http:\\/\\/iks-project.eu\\/ont\\/\",\"upb\":\"http:\\/\\/upb.de\\/persons\\/\"},\"@\":[{\"@\":\"_:bnode1\",\"@profile\":\"iks:employeeOf\",\"organization\":{\"@iri\":\"http:\\/\\/uni-paderborn.de\"},\"person\":{\"@iri\":\"upb:bnagel\"}},{\"@\":\"_:bnode2\",\"@profile\":\"iks:friendOf\",\"friend\":{\"@iri\":\"upb:fchrist\"},\"person\":{\"@iri\":\"upb:bnagel\"}}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|jsonLd
operator|.
name|representsProfile
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|jsonLd
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParse7
parameter_list|()
block|{
name|String
name|jsonldInput
init|=
literal|"{\"@context\":{\"iks\":\"http://iks-project.eu/ont/\",\"upb\":\"http://upb.de/persons/\"},\"@profile\":\"iks:employeeOf\",\"person\":\"Benjamin\",\"organization\":\"UniPaderborn\"}"
decl_stmt|;
name|JsonLd
name|jsonLd
init|=
name|JsonLdParser
operator|.
name|parse
argument_list|(
name|jsonldInput
argument_list|)
decl_stmt|;
name|jsonLd
operator|.
name|setUseTypeCoercion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setApplyNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jsonLd
operator|.
name|setUseJointGraphs
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|jsonLd
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
literal|"{\"#\":{\"iks\":\"http:\\/\\/iks-project.eu\\/ont\\/\",\"upb\":\"http:\\/\\/upb.de\\/persons\\/\"},\"@\":\"_:bnode1\",\"@profile\":\"iks:employeeOf\",\"organization\":\"UniPaderborn\",\"person\":\"Benjamin\"}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|jsonLd
operator|.
name|representsProfile
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|jsonLd
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|void
name|toConsole
parameter_list|(
name|String
name|actual
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|actual
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|actual
decl_stmt|;
name|s
operator|=
name|s
operator|.
name|replaceAll
argument_list|(
literal|"\\\\"
argument_list|,
literal|"\\\\\\\\"
argument_list|)
expr_stmt|;
name|s
operator|=
name|s
operator|.
name|replace
argument_list|(
literal|"\""
argument_list|,
literal|"\\\""
argument_list|)
expr_stmt|;
name|s
operator|=
name|s
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"\\n"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

