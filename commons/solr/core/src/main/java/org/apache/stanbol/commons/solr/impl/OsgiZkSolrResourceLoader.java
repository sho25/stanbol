begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|solr
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
operator|.
name|ZkController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
operator|.
name|ZkSolrResourceLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_comment
comment|/**  * Extends the {@link ZkSolrResourceLoader} to support findClass(..) methods  * to load classes via OSGI.  *   * @author Rupert Westenthaler  *  */
end_comment

begin_class
specifier|public
class|class
name|OsgiZkSolrResourceLoader
extends|extends
name|ZkSolrResourceLoader
block|{
specifier|protected
specifier|final
name|BundleContext
name|bc
decl_stmt|;
specifier|public
name|OsgiZkSolrResourceLoader
parameter_list|(
name|BundleContext
name|bc
parameter_list|,
name|String
name|instanceDir
parameter_list|,
name|String
name|collection
parameter_list|,
name|ZkController
name|zooKeeperController
parameter_list|)
block|{
name|super
argument_list|(
name|instanceDir
argument_list|,
name|collection
argument_list|,
name|zooKeeperController
argument_list|)
expr_stmt|;
name|this
operator|.
name|bc
operator|=
name|bc
expr_stmt|;
block|}
specifier|public
name|OsgiZkSolrResourceLoader
parameter_list|(
name|BundleContext
name|bc
parameter_list|,
name|String
name|instanceDir
parameter_list|,
name|String
name|collection
parameter_list|,
name|ClassLoader
name|parent
parameter_list|,
name|Properties
name|coreProperties
parameter_list|,
name|ZkController
name|zooKeeperController
parameter_list|)
block|{
name|super
argument_list|(
name|instanceDir
argument_list|,
name|collection
argument_list|,
name|parent
argument_list|,
name|coreProperties
argument_list|,
name|zooKeeperController
argument_list|)
expr_stmt|;
name|this
operator|.
name|bc
operator|=
name|bc
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Class
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|findClass
parameter_list|(
name|String
name|cname
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|expectedType
parameter_list|,
name|String
modifier|...
name|subpackages
parameter_list|)
block|{
name|Class
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|clazz
init|=
literal|null
decl_stmt|;
name|RuntimeException
name|parentEx
init|=
literal|null
decl_stmt|;
try|try
block|{
name|clazz
operator|=
name|super
operator|.
name|findClass
argument_list|(
name|cname
argument_list|,
name|expectedType
argument_list|,
name|subpackages
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
name|parentEx
operator|=
name|e
expr_stmt|;
block|}
if|if
condition|(
name|clazz
operator|!=
literal|null
condition|)
block|{
return|return
name|clazz
return|;
block|}
else|else
block|{
try|try
block|{
comment|//try to load via the OSGI service factory
return|return
name|OsgiResourceLoaderUtil
operator|.
name|findOsgiClass
argument_list|(
name|bc
argument_list|,
name|cname
argument_list|,
name|expectedType
argument_list|,
name|subpackages
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|e
parameter_list|)
block|{
comment|//prefer to throw the first exception
if|if
condition|(
name|parentEx
operator|!=
literal|null
condition|)
block|{
throw|throw
name|parentEx
throw|;
block|}
else|else
block|{
throw|throw
name|e
throw|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

