begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|solr
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ServiceLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|util
operator|.
name|AbstractAnalysisFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|util
operator|.
name|CharFilterFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|util
operator|.
name|TokenFilterFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|util
operator|.
name|TokenizerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrResourceLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|solr
operator|.
name|SolrServerAdapter
import|;
end_import

begin_comment
comment|/**  * Helper Interface used to register Solr {@link CharFilterFactory},  * {@link TokenizerFactory} and {@link TokenFilterFactory} implementations as  * OSGI services. This is required as the {@link SolrResourceLoader} does not  * work within OSGI because it uses functionality similar to  * {@link ServiceLoader} to locate and load implementations.<p>  * Registration is implemented by the {@link AbstractAnalyzerFactoryActivator}  * sub-classes contained in all o.a.stanbol.commons.solr.* modules that do  * provide Solr Analyzers. Registered services are consumed by the  * OsgiSolrResourceLoader. NOTE that the {@link SolrServerAdapter} replaces the  * default {@link SolrResourceLoader} with the OSGI one.  * @author Rupert Westenthaler  *  */
end_comment

begin_class
specifier|public
class|class
name|RegisteredSolrAnalyzerFactory
parameter_list|<
name|T
extends|extends
name|AbstractAnalysisFactory
parameter_list|>
block|{
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|Class
argument_list|<
name|T
argument_list|>
name|factoryType
decl_stmt|;
specifier|private
specifier|final
name|Class
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|factoryImpl
decl_stmt|;
specifier|public
name|RegisteredSolrAnalyzerFactory
parameter_list|(
name|String
name|name
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|factoryType
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|factoryImpl
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|factoryType
operator|=
name|factoryType
expr_stmt|;
name|this
operator|.
name|factoryImpl
operator|=
name|factoryImpl
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|Class
argument_list|<
name|T
argument_list|>
name|getFactoryType
parameter_list|()
block|{
return|return
name|factoryType
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|getFactoryClass
parameter_list|()
block|{
return|return
name|factoryImpl
return|;
block|}
block|}
end_class

end_unit

