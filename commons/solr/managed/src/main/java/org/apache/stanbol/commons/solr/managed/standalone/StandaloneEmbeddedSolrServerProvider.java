begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|solr
operator|.
name|managed
operator|.
name|standalone
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ServiceLoader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|EmbeddedSolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|CoreContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrCore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|solr
operator|.
name|IndexReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|solr
operator|.
name|SolrServerProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|solr
operator|.
name|SolrServerTypeEnum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Provides {@link EmbeddedSolrServer} instances based on the  * {@link StandaloneManagedSolrServer} implementation. Only intended to be used  * outside of an OSGI environment. If running within an OSGI Environment  * this functionality is provided by an {@link SolrServerProvider} implementation  * that uses {@link CoreContainer}s and {@link SolrCore}s registered as  * OSGI services.  * @see StandaloneManagedSolrServer  * @author Rupert Westenthaler  *  */
end_comment

begin_class
specifier|public
class|class
name|StandaloneEmbeddedSolrServerProvider
implements|implements
name|SolrServerProvider
block|{
specifier|private
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|StandaloneEmbeddedSolrServerProvider
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**      * Default constructor used by the {@link ServiceLoader} utility used      * outside of an OSGI environment to instantiate {@link SolrServerProvider}      * implementations for the different {@link SolrServerTypeEnum}.       */
specifier|public
name|StandaloneEmbeddedSolrServerProvider
parameter_list|()
block|{              }
annotation|@
name|Override
specifier|public
name|SolrServer
name|getSolrServer
parameter_list|(
name|SolrServerTypeEnum
name|type
parameter_list|,
name|String
name|uriOrPath
parameter_list|,
name|String
modifier|...
name|additional
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
if|if
condition|(
name|type
operator|!=
name|SolrServerTypeEnum
operator|.
name|EMBEDDED
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"The parsed SolrServerType '"
operator|+
name|type
operator|+
literal|"' is not supported (supported: '"
operator|+
name|SolrServerTypeEnum
operator|.
name|EMBEDDED
operator|+
literal|"')"
argument_list|)
throw|;
block|}
name|IndexReference
name|indexRef
init|=
name|IndexReference
operator|.
name|parse
argument_list|(
name|uriOrPath
argument_list|)
decl_stmt|;
name|StandaloneManagedSolrServer
name|server
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Create EmbeddedSolrServer for Server: {}, Index: {}"
argument_list|,
name|indexRef
operator|.
name|getServer
argument_list|()
argument_list|,
name|indexRef
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|indexRef
operator|.
name|getServer
argument_list|()
operator|==
literal|null
condition|)
block|{
name|server
operator|=
name|StandaloneManagedSolrServer
operator|.
name|getManagedServer
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|server
operator|=
name|StandaloneManagedSolrServer
operator|.
name|getManagedServer
argument_list|(
name|indexRef
operator|.
name|getServer
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|server
operator|==
literal|null
condition|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"> Managed Solr server with name {} not found -> return null"
argument_list|,
name|indexRef
operator|.
name|getServer
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
name|log
operator|.
name|debug
argument_list|(
literal|"> use managed Solr server with name {}"
argument_list|,
name|server
operator|.
name|getServerName
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|coreName
decl_stmt|;
if|if
condition|(
name|indexRef
operator|.
name|getIndex
argument_list|()
operator|==
literal|null
condition|)
block|{
name|coreName
operator|=
name|server
operator|.
name|getDefaultCore
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|indexRef
operator|.
name|isPath
argument_list|()
condition|)
block|{
name|coreName
operator|=
name|server
operator|.
name|getCoreForDirectory
argument_list|(
name|indexRef
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|coreName
operator|=
name|indexRef
operator|.
name|getIndex
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|coreName
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|EmbeddedSolrServer
argument_list|(
name|server
operator|.
name|getCoreContainer
argument_list|()
argument_list|,
name|coreName
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
comment|/**      * Outside an OSGI environment this also is used as {@link SolrServerProvider}      * for the type {@link SolrServerTypeEnum#EMBEDDED}      * @see org.apache.stanbol.commons.solr.SolrServerProvider#supportedTypes()      */
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|SolrServerTypeEnum
argument_list|>
name|supportedTypes
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|singleton
argument_list|(
name|SolrServerTypeEnum
operator|.
name|EMBEDDED
argument_list|)
return|;
block|}
block|}
end_class

end_unit

