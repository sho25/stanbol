begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|caslight
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * This class hold multiple list of Feature Structures  * @author Mihaly Heder  */
end_comment

begin_class
specifier|public
class|class
name|FeatureStructureListHolder
block|{
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|FeatureStructure
argument_list|>
argument_list|>
name|holder
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|FeatureStructure
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
comment|/**      * Adds a new FeatureStructure List to this holder.      * @param source Name of the list      * @param list The list      */
specifier|public
name|void
name|addFeatureStructureList
parameter_list|(
name|String
name|source
parameter_list|,
name|List
argument_list|<
name|FeatureStructure
argument_list|>
name|list
parameter_list|)
block|{
name|this
operator|.
name|holder
operator|.
name|put
argument_list|(
name|source
argument_list|,
name|list
argument_list|)
expr_stmt|;
block|}
comment|/**      * Returns a FeatureStructure list by its name.      * @param source the name of the list      * @return       */
specifier|public
name|List
argument_list|<
name|FeatureStructure
argument_list|>
name|getFeatureStructureList
parameter_list|(
name|String
name|source
parameter_list|)
block|{
return|return
name|this
operator|.
name|holder
operator|.
name|get
argument_list|(
name|source
argument_list|)
return|;
block|}
comment|/**      * Returns all the names of the lists in this holder.      * @return       */
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getListNames
parameter_list|()
block|{
return|return
name|this
operator|.
name|holder
operator|.
name|keySet
argument_list|()
return|;
block|}
block|}
end_class

end_unit

