begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|cors
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterChain
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|com
operator|.
name|thetransactioncompany
operator|.
name|cors
operator|.
name|CORSConfiguration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|thetransactioncompany
operator|.
name|cors
operator|.
name|CORSConfigurationException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|thetransactioncompany
operator|.
name|cors
operator|.
name|CORSFilter
import|;
end_import

begin_comment
comment|/**  * Wraps a {@link CORSFilter} in order to provide CORS support.  * @author Cristian Petroaca  *  */
end_comment

begin_class
annotation|@
name|Component
argument_list|(
name|immediate
operator|=
literal|true
argument_list|)
annotation|@
name|Service
argument_list|(
name|Filter
operator|.
name|class
argument_list|)
annotation|@
name|Property
argument_list|(
name|name
operator|=
literal|"pattern"
argument_list|,
name|value
operator|=
literal|".*"
argument_list|)
specifier|public
class|class
name|StanbolCorsFilter
implements|implements
name|Filter
block|{
specifier|private
specifier|static
name|CORSFilter
name|corsFilter
decl_stmt|;
specifier|public
name|StanbolCorsFilter
parameter_list|()
throws|throws
name|CORSConfigurationException
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"cors.allowGenericHttpRequests"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"cors.allowOrigin"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"cors.allowSubdomains"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"cors.supportedMethods"
argument_list|,
literal|"GET, POST, HEAD, OPTIONS"
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"cors.supportedHeaders"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"cors.supportsCredentials"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"cors.maxAge"
argument_list|,
literal|1800
argument_list|)
expr_stmt|;
name|corsFilter
operator|=
operator|new
name|CORSFilter
argument_list|(
operator|new
name|CORSConfiguration
argument_list|(
name|props
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|init
parameter_list|(
name|FilterConfig
name|filterConfig
parameter_list|)
throws|throws
name|ServletException
block|{
comment|//NOOP
block|}
annotation|@
name|Override
specifier|public
name|void
name|doFilter
parameter_list|(
name|ServletRequest
name|request
parameter_list|,
name|ServletResponse
name|response
parameter_list|,
name|FilterChain
name|chain
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
name|corsFilter
operator|.
name|doFilter
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|chain
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|destroy
parameter_list|()
block|{
name|corsFilter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

