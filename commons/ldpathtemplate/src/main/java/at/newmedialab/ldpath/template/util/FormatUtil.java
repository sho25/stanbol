begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2011 Salzburg Research.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|at
operator|.
name|newmedialab
operator|.
name|ldpath
operator|.
name|template
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|NumberFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_comment
comment|/**  * A utility class for formatting Java values when writing out the templating results. The methods are implemented  * to copy the formatting behaviour of FreeMarker  *<p/>  * Author: Sebastian Schaffert  */
end_comment

begin_class
specifier|public
class|class
name|FormatUtil
block|{
specifier|public
specifier|static
name|String
name|formatNumber
parameter_list|(
name|Number
name|number
parameter_list|)
block|{
name|NumberFormat
name|format
init|=
name|NumberFormat
operator|.
name|getNumberInstance
argument_list|(
name|Locale
operator|.
name|getDefault
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|format
operator|.
name|format
argument_list|(
name|number
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|formatDate
parameter_list|(
name|Date
name|date
parameter_list|)
block|{
name|DateFormat
name|format
init|=
name|DateFormat
operator|.
name|getDateInstance
argument_list|(
name|DateFormat
operator|.
name|MEDIUM
argument_list|,
name|Locale
operator|.
name|getDefault
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|format
operator|.
name|format
argument_list|(
name|date
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|formatTime
parameter_list|(
name|Date
name|date
parameter_list|)
block|{
name|DateFormat
name|format
init|=
name|DateFormat
operator|.
name|getTimeInstance
argument_list|(
name|DateFormat
operator|.
name|MEDIUM
argument_list|,
name|Locale
operator|.
name|getDefault
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|format
operator|.
name|format
argument_list|(
name|date
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|formatDateTime
parameter_list|(
name|Date
name|date
parameter_list|)
block|{
name|DateFormat
name|format
init|=
name|DateFormat
operator|.
name|getDateTimeInstance
argument_list|(
name|DateFormat
operator|.
name|MEDIUM
argument_list|,
name|DateFormat
operator|.
name|MEDIUM
argument_list|,
name|Locale
operator|.
name|getDefault
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|format
operator|.
name|format
argument_list|(
name|date
argument_list|)
return|;
block|}
block|}
end_class

end_unit

