begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_expr_stmt
unit|#
name|set
argument_list|(
name|$symbol_pound
operator|=
literal|'#'
argument_list|)
expr|#
name|set
argument_list|(
name|$symbol_dollar
operator|=
literal|'$'
argument_list|)
expr|#
name|set
argument_list|(
name|$symbol_escape
operator|=
literal|'\' )
package|package
name|$
block|{
package|package
block|}
end_expr_stmt

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|HeaderParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|TrailingSlash
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|form
operator|.
name|FormFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|form
operator|.
name|MultiPartBody
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|impl
operator|.
name|PlainLiteralImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|ontologies
operator|.
name|RDF
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|ontologies
operator|.
name|RDFS
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|utils
operator|.
name|GraphNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Deactivate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|indexedgraph
operator|.
name|IndexedMGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|web
operator|.
name|viewable
operator|.
name|RdfViewable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|Chain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ChainManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ContentItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ContentItemFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|ContentSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|EnhancementException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|EnhancementJobManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|impl
operator|.
name|ByteArraySource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Upload file for which the enhancements are to be computed  */
end_comment

begin_class
annotation|@
name|Component
annotation|@
name|Service
argument_list|(
name|Object
operator|.
name|class
argument_list|)
annotation|@
name|Property
argument_list|(
name|name
operator|=
literal|"javax.ws.rs"
argument_list|,
name|boolValue
operator|=
literal|true
argument_list|)
annotation|@
name|Path
argument_list|(
literal|"${artifactId}"
argument_list|)
specifier|public
class|class
name|MultiEnhancer
block|{
comment|/**      * Using slf4j for logging      */
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MultiEnhancer
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|ContentItemFactory
name|contentItemFactory
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|EnhancementJobManager
name|enhancementJobManager
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|ChainManager
name|chainManager
decl_stmt|;
annotation|@
name|Activate
specifier|protected
name|void
name|activate
parameter_list|(
name|ComponentContext
name|context
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"The example service is being activated"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Deactivate
specifier|protected
name|void
name|deactivate
parameter_list|(
name|ComponentContext
name|context
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"The example service is being activated"
argument_list|)
expr_stmt|;
block|}
comment|/**      * This method return an RdfViewable, this is an RDF serviceUri with associated      * presentational information.      */
annotation|@
name|GET
specifier|public
name|RdfViewable
name|serviceEntry
parameter_list|(
annotation|@
name|Context
specifier|final
name|UriInfo
name|uriInfo
parameter_list|,
annotation|@
name|HeaderParam
argument_list|(
literal|"user-agent"
argument_list|)
name|String
name|userAgent
parameter_list|)
throws|throws
name|Exception
block|{
comment|//this maks sure we are nt invoked with a trailing slash which would affect
comment|//relative resolution of links (e.g. css)
name|TrailingSlash
operator|.
name|enforcePresent
argument_list|(
name|uriInfo
argument_list|)
expr_stmt|;
specifier|final
name|String
name|resourcePath
init|=
name|uriInfo
operator|.
name|getAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
comment|//The URI at which this service was accessed accessed, this will be the
comment|//central serviceUri in the response
specifier|final
name|UriRef
name|serviceUri
init|=
operator|new
name|UriRef
argument_list|(
name|resourcePath
argument_list|)
decl_stmt|;
comment|//the in memory graph to which the triples for the response are added
specifier|final
name|MGraph
name|responseGraph
init|=
operator|new
name|IndexedMGraph
argument_list|()
decl_stmt|;
comment|//This GraphNode represents the service within our result graph
specifier|final
name|GraphNode
name|node
init|=
operator|new
name|GraphNode
argument_list|(
name|serviceUri
argument_list|,
name|responseGraph
argument_list|)
decl_stmt|;
comment|//The triples will be added to the first graph of the union
comment|//i.e. to the in-memory responseGraph
name|node
operator|.
name|addProperty
argument_list|(
name|RDF
operator|.
name|type
argument_list|,
name|Ontology
operator|.
name|MultiEnhancer
argument_list|)
expr_stmt|;
name|node
operator|.
name|addProperty
argument_list|(
name|RDFS
operator|.
name|comment
argument_list|,
operator|new
name|PlainLiteralImpl
argument_list|(
literal|"A Multi Enhancer service"
argument_list|)
argument_list|)
expr_stmt|;
comment|//What we return is the GraphNode we created with a template path
return|return
operator|new
name|RdfViewable
argument_list|(
literal|"MultiEnhancer"
argument_list|,
name|node
argument_list|,
name|MultiEnhancer
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * This service returns an RdfVieable describing the enhanced document.       */
annotation|@
name|POST
specifier|public
name|RdfViewable
name|enhanceFile
parameter_list|(
name|MultiPartBody
name|body
parameter_list|)
throws|throws
name|IOException
throws|,
name|EnhancementException
block|{
specifier|final
name|String
index|[]
name|chainValues
init|=
name|body
operator|.
name|getTextParameterValues
argument_list|(
literal|"chain"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|chainName
init|=
name|chainValues
operator|.
name|length
operator|>
literal|0
condition|?
name|chainValues
index|[
literal|0
index|]
else|:
literal|null
decl_stmt|;
specifier|final
name|FormFile
name|file
init|=
name|body
operator|.
name|getFormFileParameterValues
argument_list|(
literal|"file"
argument_list|)
index|[
literal|0
index|]
decl_stmt|;
specifier|final
name|ContentSource
name|contentSource
init|=
operator|new
name|ByteArraySource
argument_list|(
name|file
operator|.
name|getContent
argument_list|()
argument_list|,
name|file
operator|.
name|getMediaType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|file
operator|.
name|getFileName
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|ContentItem
name|contentItem
init|=
name|contentItemFactory
operator|.
name|createContentItem
argument_list|(
name|contentSource
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|chainName
operator|==
literal|null
operator|)
operator|||
name|chainName
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|enhancementJobManager
operator|.
name|enhanceContent
argument_list|(
name|contentItem
argument_list|)
expr_stmt|;
block|}
else|else
block|{
specifier|final
name|Chain
name|chain
init|=
name|chainManager
operator|.
name|getChain
argument_list|(
name|chainName
argument_list|)
decl_stmt|;
if|if
condition|(
name|chain
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"No chain by that name: "
operator|+
name|chainName
argument_list|)
throw|;
block|}
name|enhancementJobManager
operator|.
name|enhanceContent
argument_list|(
name|contentItem
argument_list|,
name|chain
argument_list|)
expr_stmt|;
block|}
comment|//this contains the enhancement results
specifier|final
name|MGraph
name|resultGraph
init|=
name|contentItem
operator|.
name|getMetadata
argument_list|()
decl_stmt|;
comment|//this is the IRI assigned to the subitted content
specifier|final
name|UriRef
name|contentIri
init|=
name|contentItem
operator|.
name|getUri
argument_list|()
decl_stmt|;
comment|//this represent the submitted Content within the resultGraph
specifier|final
name|GraphNode
name|node
init|=
operator|new
name|GraphNode
argument_list|(
name|contentIri
argument_list|,
name|resultGraph
argument_list|)
decl_stmt|;
comment|//node is the "root" for rendering the results
return|return
operator|new
name|RdfViewable
argument_list|(
literal|"Enhancements"
argument_list|,
name|node
argument_list|,
name|MultiEnhancer
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

