begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|ldpath
operator|.
name|backend
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|EntityhubException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|Representation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|ValueFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|query
operator|.
name|FieldQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|query
operator|.
name|QueryResultList
import|;
end_import

begin_import
import|import
name|at
operator|.
name|newmedialab
operator|.
name|ldpath
operator|.
name|api
operator|.
name|backend
operator|.
name|RDFBackend
import|;
end_import

begin_comment
comment|/**  * Wrapper over an QueryResult and a {@link RDFBackend} implementation intended  * to be used to execute a LDPath program over Query results. This will typically  * speed up execution, because the Representations of the original query need  * not to be looked up again, while executing the LDPath path segments with  * length 1.    * @author Rupert Westenthaler  *  */
end_comment

begin_class
specifier|public
class|class
name|QueryResultBackend
extends|extends
name|AbstractBackend
block|{
name|QueryResultList
argument_list|<
name|Representation
argument_list|>
name|resultList
decl_stmt|;
name|AbstractBackend
name|backend
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Representation
argument_list|>
name|resultMap
decl_stmt|;
specifier|public
name|QueryResultBackend
parameter_list|(
name|QueryResultList
argument_list|<
name|Representation
argument_list|>
name|result
parameter_list|,
name|AbstractBackend
name|backend
parameter_list|)
block|{
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"The parsed resultList MUST NOT be NULL!"
argument_list|)
throw|;
block|}
name|resultList
operator|=
name|result
expr_stmt|;
name|this
operator|.
name|backend
operator|=
name|backend
expr_stmt|;
name|resultMap
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Representation
argument_list|>
argument_list|(
name|result
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Representation
name|r
range|:
name|resultList
control|)
block|{
name|resultMap
operator|.
name|put
argument_list|(
name|r
operator|.
name|getId
argument_list|()
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|FieldQuery
name|createQuery
parameter_list|()
block|{
return|return
name|backend
operator|.
name|createQuery
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|Representation
name|getRepresentation
parameter_list|(
name|String
name|id
parameter_list|)
throws|throws
name|EntityhubException
block|{
name|Representation
name|r
init|=
name|resultMap
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|r
operator|==
literal|null
condition|)
block|{
name|r
operator|=
name|backend
operator|.
name|getRepresentation
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
annotation|@
name|Override
specifier|protected
name|ValueFactory
name|getValueFactory
parameter_list|()
block|{
return|return
name|backend
operator|.
name|getValueFactory
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|QueryResultList
argument_list|<
name|String
argument_list|>
name|query
parameter_list|(
name|FieldQuery
name|query
parameter_list|)
throws|throws
name|EntityhubException
block|{
return|return
name|backend
operator|.
name|query
argument_list|(
name|query
argument_list|)
return|;
block|}
block|}
end_class

end_unit

