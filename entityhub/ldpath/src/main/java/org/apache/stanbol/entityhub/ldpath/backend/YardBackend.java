begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|ldpath
operator|.
name|backend
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|core
operator|.
name|mapping
operator|.
name|ValueConverterFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|EntityhubException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|Representation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|ValueFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|query
operator|.
name|FieldQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|query
operator|.
name|QueryResultList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|yard
operator|.
name|Yard
import|;
end_import

begin_class
specifier|public
class|class
name|YardBackend
extends|extends
name|AbstractBackend
block|{
specifier|protected
specifier|final
name|Yard
name|yard
decl_stmt|;
specifier|public
name|YardBackend
parameter_list|(
name|Yard
name|yard
parameter_list|)
block|{
name|this
argument_list|(
name|yard
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|YardBackend
parameter_list|(
name|Yard
name|yard
parameter_list|,
name|ValueConverterFactory
name|valueConverter
parameter_list|)
block|{
name|super
argument_list|(
name|valueConverter
argument_list|)
expr_stmt|;
if|if
condition|(
name|yard
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"The parsed Yard MUST NOT be NULL"
argument_list|)
throw|;
block|}
name|this
operator|.
name|yard
operator|=
name|yard
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|FieldQuery
name|createQuery
parameter_list|()
block|{
return|return
name|yard
operator|.
name|getQueryFactory
argument_list|()
operator|.
name|createFieldQuery
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|Representation
name|getRepresentation
parameter_list|(
name|String
name|id
parameter_list|)
throws|throws
name|EntityhubException
block|{
return|return
name|yard
operator|.
name|getRepresentation
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|ValueFactory
name|getValueFactory
parameter_list|()
block|{
return|return
name|yard
operator|.
name|getValueFactory
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|QueryResultList
argument_list|<
name|String
argument_list|>
name|query
parameter_list|(
name|FieldQuery
name|query
parameter_list|)
throws|throws
name|EntityhubException
block|{
return|return
name|yard
operator|.
name|findReferences
argument_list|(
name|query
argument_list|)
return|;
block|}
block|}
end_class

end_unit

