begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|core
operator|.
name|query
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_comment
comment|/**  * Utility class for queries.  * @author Rupert Westenthaler  *  */
end_comment

begin_class
specifier|public
class|class
name|QueryUtils
block|{
comment|/**      * Getter for the Limit calculated bye on the limit defined by the query      * and the configuration of the default results (for queries that do not      * define a limit) and the maximum number of Results.<p>      * Configurations for defaultResults and maxResults<= 0 are ignored. Return      * values< = 0 should be interpreted as no constraints.      * @param query the query      * @param defaultResults the default number of results      * @param maxResults the maximum number of queries      * @return if> 0, than the value represents the number of results for the      * query. Otherwise no constraint.      */
specifier|public
specifier|static
name|int
name|getLimit
parameter_list|(
name|Query
name|query
parameter_list|,
name|int
name|defaultResults
parameter_list|,
name|int
name|maxResults
parameter_list|)
block|{
name|int
name|limit
init|=
name|query
operator|.
name|getLimit
argument_list|()
operator|!=
literal|null
condition|?
name|query
operator|.
name|getLimit
argument_list|()
else|:
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|defaultResults
operator|>
literal|0
condition|)
block|{
name|limit
operator|=
name|Math
operator|.
name|min
argument_list|(
name|limit
argument_list|,
name|defaultResults
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|maxResults
operator|>
literal|0
condition|)
block|{
name|limit
operator|=
name|Math
operator|.
name|min
argument_list|(
name|limit
argument_list|,
name|maxResults
argument_list|)
expr_stmt|;
block|}
return|return
name|limit
return|;
block|}
block|}
end_class

end_unit

