begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|site
package|;
end_package

begin_class
specifier|public
specifier|final
class|class
name|License
block|{
comment|/**      * Constructs an License. At least one of the three parameters MUST NOT be      *<code>null</code> otherwise an {@link IllegalArgumentException} is       * thrown      * @param name the name of the license      * @param url the link to the page about the license      * @param text the natural language text defining the license      * @throws IllegalArgumentException if all three parameters are       *<code>null</code> or empty strings      */
specifier|public
name|License
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|url
parameter_list|,
name|String
name|text
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
name|super
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
name|name
operator|==
literal|null
operator|||
name|name
operator|.
name|isEmpty
argument_list|()
operator|)
operator|&&
operator|(
name|url
operator|==
literal|null
operator|||
name|url
operator|.
name|isEmpty
argument_list|()
operator|)
operator|&&
operator|(
name|text
operator|==
literal|null
operator|||
name|text
operator|.
name|isEmpty
argument_list|()
operator|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"One of name, url and text MUST NOT be NULL nor emtpy"
argument_list|)
throw|;
block|}
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|url
operator|=
name|url
expr_stmt|;
name|this
operator|.
name|text
operator|=
name|text
expr_stmt|;
block|}
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|String
name|url
decl_stmt|;
specifier|private
specifier|final
name|String
name|text
decl_stmt|;
comment|/**      * Getter for the name of the License      * @return      */
specifier|public
specifier|final
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/**      * Getter for the Url of the License      * @return      */
specifier|public
specifier|final
name|String
name|getUrl
parameter_list|()
block|{
return|return
name|url
return|;
block|}
comment|/**      * Getter for the text of the License      * @return      */
specifier|public
specifier|final
name|String
name|getText
parameter_list|()
block|{
return|return
name|text
return|;
block|}
block|}
end_class

end_unit

