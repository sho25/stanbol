begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *   */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|indexing
operator|.
name|core
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|Representation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|rdf
operator|.
name|RdfResourceEnum
import|;
end_import

begin_comment
comment|/**  * Dummy implementation of an {@link EntityIterator} that reads entity ids  * directly form {@link IndexerTest#testData}  * @author Rupert Westenthaler  *  */
end_comment

begin_class
specifier|public
class|class
name|DummyEntityIdSource
implements|implements
name|EntityIterator
block|{
specifier|private
name|Iterator
argument_list|<
name|Representation
argument_list|>
name|entiyIterator
init|=
name|IndexerTest
operator|.
name|testData
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|initialise
parameter_list|()
block|{     }
annotation|@
name|Override
specifier|public
name|boolean
name|needsInitialisation
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setConfiguration
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
parameter_list|)
block|{     }
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|entiyIterator
operator|.
name|hasNext
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|EntityScore
name|next
parameter_list|()
block|{
name|Representation
name|next
init|=
name|entiyIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|Number
name|score
init|=
name|next
operator|.
name|getFirst
argument_list|(
name|RdfResourceEnum
operator|.
name|entityRank
operator|.
name|getUri
argument_list|()
argument_list|,
name|Number
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
operator|new
name|EntityScore
argument_list|(
name|next
operator|.
name|getId
argument_list|()
argument_list|,
name|score
operator|==
literal|null
condition|?
literal|0
else|:
name|score
operator|.
name|floatValue
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
block|}
end_class

end_unit

