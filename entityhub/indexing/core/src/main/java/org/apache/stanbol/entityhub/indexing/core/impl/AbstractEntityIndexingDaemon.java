begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|indexing
operator|.
name|core
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|indexing
operator|.
name|core
operator|.
name|impl
operator|.
name|IndexerConstants
operator|.
name|SCORE_FIELD
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|indexing
operator|.
name|core
operator|.
name|impl
operator|.
name|IndexerConstants
operator|.
name|SOURCE_COMPLETE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|indexing
operator|.
name|core
operator|.
name|impl
operator|.
name|IndexerConstants
operator|.
name|SOURCE_DURATION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|indexing
operator|.
name|core
operator|.
name|impl
operator|.
name|IndexerConstants
operator|.
name|SOURCE_STARTED
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|BlockingQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|indexing
operator|.
name|core
operator|.
name|IndexingComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|indexing
operator|.
name|core
operator|.
name|normaliser
operator|.
name|ScoreNormaliser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|Representation
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractEntityIndexingDaemon
extends|extends
name|IndexingDaemon
argument_list|<
name|Object
argument_list|,
name|Representation
argument_list|>
block|{
specifier|protected
name|AbstractEntityIndexingDaemon
parameter_list|(
name|String
name|name
parameter_list|,
name|BlockingQueue
argument_list|<
name|QueueItem
argument_list|<
name|Representation
argument_list|>
argument_list|>
name|produce
parameter_list|,
name|BlockingQueue
argument_list|<
name|QueueItem
argument_list|<
name|IndexingError
argument_list|>
argument_list|>
name|error
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|,
name|IndexerConstants
operator|.
name|SEQUENCE_NUMBER_SOURCE_DAEMON
argument_list|,
literal|null
argument_list|,
name|produce
argument_list|,
name|error
argument_list|)
expr_stmt|;
block|}
comment|/**      * Used to produce Representations by both variants of EnityIndexingDeamons      * @param rep the {@link Representation} extracted from the       *  {@link IndexingComponent}s      * @param notNormalisedScore The score for the Representation      */
specifier|protected
specifier|final
name|void
name|produce
parameter_list|(
name|Representation
name|rep
parameter_list|,
name|Float
name|normalisedScore
parameter_list|,
name|Long
name|started
parameter_list|)
block|{
if|if
condition|(
name|rep
operator|==
literal|null
condition|)
block|{
return|return;
block|}
comment|//first set the score of the representation
name|QueueItem
argument_list|<
name|Representation
argument_list|>
name|item
init|=
operator|new
name|QueueItem
argument_list|<
name|Representation
argument_list|>
argument_list|(
name|rep
argument_list|)
decl_stmt|;
comment|//set the score as additional property to the QueueItem, because
comment|//it needs to be added to the Representation after the processing completes
if|if
condition|(
name|normalisedScore
operator|!=
literal|null
operator|&&
name|normalisedScore
operator|.
name|compareTo
argument_list|(
name|ScoreNormaliser
operator|.
name|ZERO
argument_list|)
operator|>=
literal|0
condition|)
block|{
name|item
operator|.
name|setProperty
argument_list|(
name|SCORE_FIELD
argument_list|,
name|normalisedScore
argument_list|)
expr_stmt|;
block|}
name|item
operator|.
name|setProperty
argument_list|(
name|SOURCE_STARTED
argument_list|,
name|started
argument_list|)
expr_stmt|;
name|Long
name|completed
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|item
operator|.
name|setProperty
argument_list|(
name|SOURCE_COMPLETE
argument_list|,
name|completed
argument_list|)
expr_stmt|;
name|Float
name|duration
init|=
name|Float
operator|.
name|valueOf
argument_list|(
call|(
name|float
call|)
argument_list|(
name|completed
operator|.
name|longValue
argument_list|()
operator|-
name|started
operator|.
name|longValue
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|item
operator|.
name|setProperty
argument_list|(
name|SOURCE_DURATION
argument_list|,
name|duration
argument_list|)
expr_stmt|;
name|produce
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

