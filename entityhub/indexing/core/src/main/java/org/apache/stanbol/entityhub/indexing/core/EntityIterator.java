begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|indexing
operator|.
name|core
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_comment
comment|/**  * Interface used to iterate over Entities and optionally there score.  * Typically Entities are by decreasing score values however this is no  * requirement by this implementation. Scores&lt; 0 indicate that entities  * should not be indexed. If no score is available the score MUST BE   *<code>null</code>  * @author Rupert Westenthaler  *  */
end_comment

begin_interface
specifier|public
interface|interface
name|EntityIterator
extends|extends
name|IndexingComponent
extends|,
name|Iterator
argument_list|<
name|EntityIterator
operator|.
name|EntityScore
argument_list|>
block|{
comment|/**      * Struct like class providing access to the Id and optionally the score of       * an entity. A score of<code>0</code> indicated that no score is available.      * Scores<code>&lt; 0</code> indicate that entities should be ignored      * (unless the indexer is configured otherwise)      * Allows direct access to the final id and score values      * @author Rupert Westenthaler      *      */
specifier|public
class|class
name|EntityScore
block|{
comment|/**          * The ID of the Entity (read only)          */
specifier|public
specifier|final
name|String
name|id
decl_stmt|;
comment|/**          * The score for the Entity. Entities with scores&lt; 0 should be          * ignored for indexing.<code>null</code> indicates that no score is          * available          */
specifier|public
specifier|final
name|Float
name|score
decl_stmt|;
specifier|public
name|EntityScore
parameter_list|(
name|String
name|id
parameter_list|,
name|Float
name|score
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|score
operator|=
name|score
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|obj
operator|instanceof
name|EntityScore
operator|&&
name|id
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|EntityScore
operator|)
name|obj
operator|)
operator|.
name|id
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|id
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"EntityScore[id=%s|score=%s]"
argument_list|,
name|id
argument_list|,
name|score
argument_list|)
return|;
block|}
block|}
block|}
end_interface

end_unit

