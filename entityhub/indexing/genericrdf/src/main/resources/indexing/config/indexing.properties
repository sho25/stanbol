# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Indexing Properties

# Here the name of the dataset MUST be specified by the user
# It MUST BE a single word with no spaces.
name=changeme

# an optional short description may be used. If missing default descriptions are
# created.
description=short description (http://www.example.org)

# Indexing Mode dependent Configurations: (see readme.md for details)

# (1) Iterate over Data and lookup scores: (default)

# use the Jena TDB as source for indexing the RDF data located within
# "indexing/resource/rdfdata"
entityDataIterable=org.apache.stanbol.entityhub.indexing.source.jenatdb.RdfIndexingSource,source:rdfdata
# The EntityScore Provider needs to provide the scores for indexed entities
# use the NoEntityScoreProvider if no scores are available
entityScoreProvider=org.apache.stanbol.entityhub.indexing.core.source.NoEntityScoreProvider

# The EntityFieldScoreProvider can be used to use the value of an property as score
# the property can be configured by the "field" parameter
# Scores are parsed from numbers and strings that can be converted to numbers.
#entityScoreProvider=org.apache.stanbol.entityhub.indexing.core.source.EntityFieldScoreProvider,field:http://www.example.org/myOntology#score

# The EntityIneratorToScoreProviderAdapter can be used to adapt any configured
# "entityIdIterator" to an "entityScoreProvider". See also the comments for 
# "entityIdIterator".
#entityScoreProvider=org.apache.stanbol.entityhub.indexing.core.source.EntityIneratorToScoreProviderAdapter

# Indexing VCARD

# Alternative configuration for indexing vCard files
# change the config for the vcard indexer in the "vcard.properties" file
#entityDataIterable=org.apache.stanbol.entityhub.indexing.source.vcard.VcardIndexingSource,config:vcard
#entityScoreProvider=org.apache.stanbol.entityhub.indexing.core.source.NoEntityScoreProvider



# (2) Iterate over Entity IDs and lookup Data

# First one needs to provide an EntityIterator
# Typically the LineBasedEntityIterator implementation is used. The configuration
# for this implementation is typically provided in an own file. A default 
# configuration is provided by the iditerator.properties file.
#entityIdIterator=org.apache.stanbol.entityhub.indexing.core.source.LineBasedEntityIterator,config:iditerator

# Second a entityDataProvide needs to be specified. Here we use the Jena TDB 
# Note that this implementation implements both entityDataIterable AND
# entityDataProvider.
# RDF data needs to be located in the "indexing/resource/rdfdata"
# entityDataProvider=org.apache.stanbol.entityhub.indexing.source.jenatdb.RdfIndexingSource,source:rdfdata


#Score Normalizer

# Entity Scores are normalised by the ScoreNormalizer
# if no score normaliser is configured the scores will be used as provided by
# the entities
#scoreNormalizer=

# ScoreNormalizer can be chained as shown by the following example configuration
# The score for an entity is first processed by the last normalizer
#scoreNormalizer=org.apache.stanbol.entityhub.indexing.core.normaliser.RangeNormaliser,config:scorerange;org.apache.stanbol.entityhub.indexing.core.normaliser.NaturalLogNormaliser;org.apache.stanbol.entityhub.indexing.core.normaliser.MinScoreNormalizer,config:minscore

# Different Implementations:
#  - RangeNormaliser: allows to define a range for score values. see
#    "scorerange.properties" for possible configurations
#  - NaturalLogNormaliser: Should be used if the score represents the number of
#    incommings links.
#  - MinScoreNormalizer: allows to prevent indexing of all entities with a score
#    lower than the configured minimum. see "minscore.properties" for possible
#    configurations.


# Entity Processor

# Currently the only available implementation is the FiledMapperProcessor.
entityProcessor=org.apache.stanbol.entityhub.indexing.core.processor.FiledMapperProcessor
# By default it will use the mappings configured by the "fieldConfiguraton"
# property. To use other mappings one can use the "mappings" parameter (e.g.
# mappings:otherMappings.txt

# A default mapping configuration is provided. This file also includes a lot of
# comments.

# to deactivate EntityProcessing one can use
#entityProcessor=org.apache.stanbol.entityhub.indexing.core.processor.EmptyProcessor


# Index Field Configuration

# An index needs to provide its configuration. This is used at runtime if 
# entities are updated.
fieldConfiguration=mappings.txt


# Indexing Destination

# A SolrYard is used as destination for indexing
# To boost some fields (typically labels) one can use the fieldboosts.properties
# A default field boost configuration is provided.
indexingDestination=org.apache.stanbol.entityhub.indexing.destination.solryard.SolrYardIndexingDestination,boosts:fieldboosts


# Additional configurations for ReferencedSite

# The "Synchronized" property is supported by some Entityhub Yard implementations
# to automatically update/delete local data as soon as the created archive with
# the indexed data is updated/deleted in the /datafiles folder of Apache Stanbol
# By default this feature is activated. For very big indexes users might want to
# disable this feature to allow the deletion of the archive after the index was
# initialised successfully.
# By default this feature is enabled. Uncommend the next line to deactivate it.
#Synchronized=false


# All the following properties are optional, but can be used to configure
# the referenced site used to access the indexed data within the Entityhub

# The entity prefixes are used to determine if an entity needs to be searched
# on a referenced site. If not specified requests for any entity will be
# forwarded to this referenced site.
# use ';' to seperate multiple values
#org.apache.stanbol.entityhub.site.entityPrefix=http://example.org/resource;urn:mycompany:

# Configuration the remote Service
# If the indexed data are also available remotly (e.g. by a Linked data endpoint)
# than it is possible to allow also direct access to such entities
# (a) retrieving entities (access URI and EntityDereferencer implementation)
#org.apache.stanbol.entityhub.site.accessUri="http://example.org/resource"
#org.apache.stanbol.entityhub.site.dereferencerType=
# available EntityDereferencer implementation
# - org.apache.stanbol.entityhub.dereferencer.CoolUriDereferencer
# - org.apache.stanbol.entityhub.dereferencer.SparqlDereferencer

# (b) search entities (queryUri and EntitySearcher implementation)
#org.apache.stanbol.entityhub.site.queryUri=http://example.org/sparql
#org.apache.stanbol.entityhub.site.searcherType=
# available EntitySearcher implementation
# - org.apache.stanbol.entityhub.searcher.SparqlSearcher (generic SPARQL)
# - org.apache.stanbol.entityhub.searcher.LarqSearcher (Larq SPARQL extensions)
# - org.apache.stanbol.entityhub.searcher.VirtuosoSearcher (Virtuoso SPARQL extensions)

# The referenced site can also specify additional mappings to be used in the
# case an entity of this site is imported to the Entityhub.
# Typically the same mappings as used for the indexing are a good start. 
# However one might want to copy some values (e.g. labels) to commonly used
# fields used by the Entityhub
org.apache.stanbol.entityhub.site.fieldMappings=mappings.txt


# License(s)
# Add here the name and URLs of the license to be used for all entities
# provided by this referenced site
# NOTE: licenseName and licenseUrl MUST use the ordering as below!
# This example shows dual licensing with "cc by-sa" and GNU
#org.apache.stanbol.entityhub.site.licenseName=Creative Commons Attribution-ShareAlike 3.0;GNU Free Documentation License
#org.apache.stanbol.entityhub.site.licenseUrl=http://creativecommons.org/licenses/by-sa/3.0/;http://www.gnu.org/licenses/fdl.html

# Attribution
# Some Licenses require attributions. This properties can be used to provide a
# link to the site with the attribution and the attribution text
#org.apache.stanbol.entityhub.site.attributionUrl=http://example.org/About.html
#org.apache.stanbol.entityhub.site.attribution=To the universe

