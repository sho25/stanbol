begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|engines
operator|.
name|zemanta
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_comment
comment|/**  * Holds concepts, properties and instances found in the Zemanta ontology.  * See also {@linkplain http://wiki.iks-project.eu/index.php/ZemantaEnhancementEngine}  * for an overview on Zemanta annotations.  *  * @author Rupert Westenthaler  */
end_comment

begin_enum
specifier|public
enum|enum
name|ZemantaOntologyEnum
block|{
comment|// TODO: use capitals for constant names
name|Recognition
block|,
name|anchor
block|,
name|confidence
block|,
name|doc
block|,
name|object
block|,
name|Object
block|,
name|target
block|,
name|owlSameAs
argument_list|(
literal|"http://www.w3.org/2002/07/owl#"
argument_list|,
literal|"sameAs"
argument_list|)
block|,
name|Target
block|,
name|targetType
block|,
comment|//some kind of content type
name|targetType_RDF
argument_list|(
literal|"http://s.zemanta.com/targets#"
argument_list|,
literal|"rdf"
argument_list|)
block|,
name|targetType_WIKIPWDIA
argument_list|(
literal|"http://s.zemanta.com/targets#"
argument_list|,
literal|"wikipedia"
argument_list|)
block|,
name|targetType_CATEGORY
argument_list|(
literal|"http://s.zemanta.com/targets#"
argument_list|,
literal|"category"
argument_list|)
block|,
name|targetType_ARTICLE
argument_list|(
literal|"http://s.zemanta.com/targets#"
argument_list|,
literal|"article"
argument_list|)
block|,
name|title
block|,
name|Category
block|,
name|categorization
block|,
name|categorization_DMOZ
argument_list|(
literal|"http://s.zemanta.com/cat/"
argument_list|,
literal|"dmoz"
argument_list|)
block|,
name|Related
block|,
name|zemified
block|,
name|Keyword
block|,
name|name
block|,
name|schema
block|,;
name|UriRef
name|uri
decl_stmt|;
comment|/**      * Creates n new entity of this Enum by using the parsed namespace and      * local name.      *      * @param ns    The namespace or<code>null</code> to use the default      * @param local The local name or<code>null</code> to use the default      */
specifier|private
name|ZemantaOntologyEnum
parameter_list|(
name|String
name|ns
parameter_list|,
name|String
name|local
parameter_list|)
block|{
name|uri
operator|=
operator|new
name|UriRef
argument_list|(
operator|(
name|ns
operator|==
literal|null
condition|?
literal|"http://s.zemanta.com/ns#"
else|:
name|ns
operator|)
operator|+
operator|(
name|local
operator|==
literal|null
condition|?
name|name
argument_list|()
else|:
name|local
operator|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates a new entry of this Enum by using the parsed local name and the      * default Zemanta namespace      *      * @param local the local name or<code>null</code> to use the name() of the      *              element      */
specifier|private
name|ZemantaOntologyEnum
parameter_list|(
name|String
name|local
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|local
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates a new entry of this Enum by using the default Zemanta namespace      * and the name() of this element as lecal name.      */
specifier|private
name|ZemantaOntologyEnum
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**      * The unicode name of the URI.      *      * @return the unicode name of the URI      */
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|uri
operator|.
name|getUnicodeString
argument_list|()
return|;
block|}
comment|/**      * The URI of the element of this Enum.      *      * @return the URI of the element as Clerezza UriRef      */
specifier|public
name|UriRef
name|getUri
parameter_list|()
block|{
return|return
name|uri
return|;
block|}
block|}
end_enum

end_unit

