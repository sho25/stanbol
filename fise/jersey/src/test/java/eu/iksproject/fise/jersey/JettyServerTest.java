begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|fise
operator|.
name|jersey
package|;
end_package

begin_comment
comment|/*  * (C) Copyright 2006-2009 Nuxeo SAS (http://nuxeo.com/) and contributors.  *  * All rights reserved. This program and the accompanying materials  * are made available under the terms of the GNU Lesser General Public License  * (LGPL) version 2.1 which accompanies this distribution, and is available at  * http://www.gnu.org/licenses/lgpl.html  *  * This library is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU  * Lesser General Public License for more details.  *  * Contributors:  *     Nuxeo - initial API and implementation  *  * $Id$  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|MGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|access
operator|.
name|TcManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|impl
operator|.
name|SimpleMGraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|serializedform
operator|.
name|Serializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|jena
operator|.
name|serializer
operator|.
name|JenaSerializerProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|rdfjson
operator|.
name|serializer
operator|.
name|RdfJsonSerializingProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|WebResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|core
operator|.
name|util
operator|.
name|MultivaluedMapImpl
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|fise
operator|.
name|engines
operator|.
name|autotagging
operator|.
name|impl
operator|.
name|ConfiguredAutotaggerProvider
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|fise
operator|.
name|engines
operator|.
name|autotagging
operator|.
name|impl
operator|.
name|RelatedTopicEnhancementEngine
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|fise
operator|.
name|jersey
operator|.
name|processors
operator|.
name|FreemarkerViewProcessor
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|fise
operator|.
name|jobmanager
operator|.
name|impl
operator|.
name|InMemoryJobManager
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|fise
operator|.
name|servicesapi
operator|.
name|ContentItem
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|fise
operator|.
name|servicesapi
operator|.
name|EnhancementJobManager
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|fise
operator|.
name|servicesapi
operator|.
name|Store
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|fise
operator|.
name|servicesapi
operator|.
name|helper
operator|.
name|EnhancementEngineHelper
import|;
end_import

begin_comment
comment|/**  * Starts a server, then run a few HTTP requests against it using the Jersey  * client.  */
end_comment

begin_class
specifier|public
class|class
name|JettyServerTest
extends|extends
name|Assert
block|{
specifier|protected
specifier|static
specifier|final
name|String
name|TEXT_CONTENT
init|=
literal|"Let the autotagger guess who was a Jamaican"
operator|+
literal|" musician, a lead singer and guitarist"
operator|+
literal|" for a well known reggae band."
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|PORT
init|=
literal|9999
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TEST_URI
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ENGINES_URI
init|=
name|TEST_URI
operator|+
literal|"engines"
decl_stmt|;
specifier|private
specifier|static
name|JettyServer
name|server
decl_stmt|;
specifier|private
specifier|static
name|InMemoryJobManager
name|jobManager
decl_stmt|;
specifier|private
specifier|static
name|Store
name|store
decl_stmt|;
specifier|private
specifier|static
name|RelatedTopicEnhancementEngine
name|engine
decl_stmt|;
specifier|private
name|Client
name|client
decl_stmt|;
specifier|private
name|WebResource
name|enginesResource
decl_stmt|;
specifier|private
specifier|static
name|String
name|testContentItemID
init|=
literal|"urn:test:contentItem:ID"
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServer
parameter_list|()
throws|throws
name|Exception
block|{
name|server
operator|=
operator|new
name|JettyServer
argument_list|()
expr_stmt|;
name|server
operator|.
name|start
argument_list|(
name|TEST_URI
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|stopServer
parameter_list|()
throws|throws
name|Exception
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
comment|// simulate OSGi runtime by registering the components to test manually
name|jobManager
operator|=
operator|new
name|InMemoryJobManager
argument_list|()
expr_stmt|;
name|server
operator|.
name|setAttribute
argument_list|(
name|EnhancementJobManager
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|jobManager
argument_list|)
expr_stmt|;
name|store
operator|=
operator|new
name|Store
argument_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|ContentItem
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ContentItem
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|String
name|put
parameter_list|(
name|ContentItem
name|ci
parameter_list|)
block|{
name|map
operator|.
name|put
argument_list|(
name|ci
operator|.
name|getId
argument_list|()
argument_list|,
name|ci
argument_list|)
expr_stmt|;
return|return
name|ci
operator|.
name|getId
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ContentItem
name|get
parameter_list|(
name|String
name|id
parameter_list|)
block|{
return|return
name|map
operator|.
name|get
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ContentItem
name|create
parameter_list|(
name|String
name|id
parameter_list|,
specifier|final
name|byte
index|[]
name|content
parameter_list|,
specifier|final
name|String
name|contentType
parameter_list|)
block|{
specifier|final
name|String
name|final_id
decl_stmt|;
if|if
condition|(
name|id
operator|==
literal|null
condition|)
block|{
name|final_id
operator|=
name|testContentItemID
expr_stmt|;
block|}
else|else
block|{
name|final_id
operator|=
name|id
expr_stmt|;
block|}
return|return
operator|new
name|ContentItem
argument_list|()
block|{
specifier|final
name|MGraph
name|mGraph
init|=
operator|new
name|SimpleMGraph
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|InputStream
name|getStream
parameter_list|()
block|{
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|content
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getMimeType
parameter_list|()
block|{
return|return
name|contentType
return|;
block|}
annotation|@
name|Override
specifier|public
name|MGraph
name|getMetadata
parameter_list|()
block|{
return|return
name|mGraph
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|final_id
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|MGraph
name|getEnhancementGraph
parameter_list|()
block|{
return|return
operator|new
name|SimpleMGraph
argument_list|()
return|;
block|}
block|}
expr_stmt|;
comment|// store = new InMemoryStore();
name|server
operator|.
name|setAttribute
argument_list|(
name|Store
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|store
argument_list|)
expr_stmt|;
name|engine
operator|=
operator|new
name|RelatedTopicEnhancementEngine
argument_list|()
expr_stmt|;
comment|// the default index does not contain any topic yet, hence test with a
comment|// Person context match
name|engine
operator|.
name|setType
argument_list|(
literal|"http://dbpedia.org/ontology/Person"
argument_list|)
expr_stmt|;
name|ConfiguredAutotaggerProvider
name|provider
init|=
operator|new
name|ConfiguredAutotaggerProvider
argument_list|()
decl_stmt|;
name|provider
operator|.
name|activate
argument_list|(
operator|new
name|MockComponentContext
argument_list|()
argument_list|)
expr_stmt|;
name|engine
operator|.
name|bindAutotaggerProvider
argument_list|(
name|provider
argument_list|)
expr_stmt|;
name|jobManager
operator|.
name|bindEnhancementEngine
argument_list|(
name|engine
argument_list|)
expr_stmt|;
name|Serializer
name|serializer
init|=
operator|new
name|Serializer
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|bindSerializingProvider
argument_list|(
operator|new
name|JenaSerializerProvider
argument_list|()
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|bindSerializingProvider
argument_list|(
operator|new
name|RdfJsonSerializingProvider
argument_list|()
argument_list|)
expr_stmt|;
name|server
operator|.
name|setAttribute
argument_list|(
name|Serializer
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
name|TcManager
name|tcManager
init|=
operator|new
name|TcManager
argument_list|()
decl_stmt|;
name|server
operator|.
name|setAttribute
argument_list|(
name|TcManager
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|tcManager
argument_list|)
expr_stmt|;
name|server
operator|.
name|setAttribute
argument_list|(
name|FreemarkerViewProcessor
operator|.
name|FREEMARKER_TEMPLATE_PATH_INIT_PARAM
argument_list|,
literal|"/META-INF/templates"
argument_list|)
expr_stmt|;
name|client
operator|=
name|Client
operator|.
name|create
argument_list|()
expr_stmt|;
name|enginesResource
operator|=
name|client
operator|.
name|resource
argument_list|(
name|ENGINES_URI
argument_list|)
expr_stmt|;
comment|// reproducible tests
name|EnhancementEngineHelper
operator|.
name|setSeed
argument_list|(
literal|42
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWebView
parameter_list|()
throws|throws
name|Exception
block|{
comment|// the job manager is registered along with an engine (see the
comment|// #startServer method)
name|String
name|r
init|=
name|enginesResource
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|TEXT_HTML
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|r
argument_list|,
name|r
operator|.
name|contains
argument_list|(
literal|"<strong>1</strong> active engines"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|r
argument_list|,
name|r
operator|.
name|contains
argument_list|(
name|engine
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// unbind the engine from the job manager
name|jobManager
operator|.
name|unbindEnhancementEngine
argument_list|(
name|engine
argument_list|)
expr_stmt|;
name|r
operator|=
name|enginesResource
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|r
argument_list|,
name|r
operator|.
name|contains
argument_list|(
literal|"There is no active engines."
argument_list|)
argument_list|)
expr_stmt|;
comment|// remove the job manager
name|server
operator|.
name|removeAttribute
argument_list|(
name|EnhancementJobManager
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|=
name|enginesResource
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|r
argument_list|,
name|r
operator|.
name|contains
argument_list|(
literal|"There is no active engines."
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetEnginesAsJSON
parameter_list|()
throws|throws
name|Exception
block|{
comment|// the job manager is registered along with an engine (see the
comment|// #startServer method)
name|String
name|r
init|=
name|enginesResource
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|r
argument_list|,
literal|"[\"http:\\/\\/localhost:9999\\/engines\\/relatedtopic\"]\n"
argument_list|)
expr_stmt|;
comment|// unbind the engine from the job manager
name|jobManager
operator|.
name|unbindEnhancementEngine
argument_list|(
name|engine
argument_list|)
expr_stmt|;
name|r
operator|=
name|enginesResource
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r
argument_list|,
literal|"[]\n"
argument_list|)
expr_stmt|;
comment|// remove the job manager
name|server
operator|.
name|removeAttribute
argument_list|(
name|EnhancementJobManager
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|=
name|enginesResource
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r
argument_list|,
literal|"[]\n"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEnginesFormPostNt
parameter_list|()
throws|throws
name|Exception
block|{
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"content"
argument_list|,
name|TEXT_CONTENT
argument_list|)
expr_stmt|;
name|String
name|r
init|=
name|enginesResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
literal|"text/rdf+nt"
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|"<urn:enhancement-ba419d35-0dfe-8af7-aee7-bbe10c45c028><http://www.w3.org/1999/02/22-rdf-syntax-ns#type><http://fise.iks-project.eu/ontology/EntityAnnotation> ."
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|"<urn:enhancement-ba419d35-0dfe-8af7-aee7-bbe10c45c028><http://fise.iks-project.eu/ontology/extracted-from><urn:content-item-sha1-9a674f3a975dbb1fc50c50d5686bbdb00595ba94> ."
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|"<urn:enhancement-ba419d35-0dfe-8af7-aee7-bbe10c45c028><http://purl.org/dc/terms/creator> \"eu.iksproject.fise.engines.autotagging.impl.RelatedTopicEnhancementEngine\"^^<http://www.w3.org/2001/XMLSchema#string> ."
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|"<urn:enhancement-ba419d35-0dfe-8af7-aee7-bbe10c45c028><http://fise.iks-project.eu/ontology/entity-reference><http://dbpedia.org/resource/Bob_Marley> ."
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// @Test
comment|// TODO: rewrite with a high level parsing helper that handle the low level
comment|// RDF payload
specifier|public
name|void
name|testFormPostTurtle
parameter_list|()
throws|throws
name|Exception
block|{
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"content"
argument_list|,
name|TEXT_CONTENT
argument_list|)
expr_stmt|;
comment|// TODO: find a way to pass a namespace prefix configuration to the
comment|// serializers
name|String
name|r
init|=
name|enginesResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
literal|"text/turtle"
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|""
operator|+
literal|"<urn:enhancement-ba419d35-0dfe-8af7-aee7-bbe10c45c028>\n"
operator|+
literal|"      a<http://fise.iks-project.eu/ontology/EntityAnnotation> ;\n"
operator|+
literal|"<http://fise.iks-project.eu/ontology/entity-reference>\n"
operator|+
literal|"<http://dbpedia.org/resource/Bob_Marley> ;"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEnginesFormPostJson
parameter_list|()
throws|throws
name|Exception
block|{
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"content"
argument_list|,
name|TEXT_CONTENT
argument_list|)
expr_stmt|;
name|EnhancementEngineHelper
operator|.
name|setSeed
argument_list|(
literal|42
argument_list|)
expr_stmt|;
name|String
name|r
init|=
name|enginesResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|"{\"value\":\"http:\\/\\/dbpedia.org\\/resource\\/Bob_Marley\""
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEnginesFormPostXml
parameter_list|()
throws|throws
name|Exception
block|{
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|formData
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|formData
operator|.
name|add
argument_list|(
literal|"content"
argument_list|,
name|TEXT_CONTENT
argument_list|)
expr_stmt|;
comment|// test force mimetype from HTML form parameters
name|formData
operator|.
name|putSingle
argument_list|(
literal|"format"
argument_list|,
literal|"application/rdf+xml"
argument_list|)
expr_stmt|;
name|String
name|r
init|=
name|enginesResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|TEXT_HTML
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|formData
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|"<rdf:Description rdf:about=\"urn:enhancement-ba419d35-0dfe-8af7-aee7-bbe10c45c028\">"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEnginesRawPostNt
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|r
init|=
name|enginesResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|TEXT_PLAIN
argument_list|)
operator|.
name|accept
argument_list|(
literal|"text/rdf+nt"
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|TEXT_CONTENT
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|"<urn:enhancement-ba419d35-0dfe-8af7-aee7-bbe10c45c028><http://www.w3.org/1999/02/22-rdf-syntax-ns#type><http://fise.iks-project.eu/ontology/EntityAnnotation> ."
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|"<urn:enhancement-ba419d35-0dfe-8af7-aee7-bbe10c45c028><http://fise.iks-project.eu/ontology/extracted-from><urn:content-item-sha1-9a674f3a975dbb1fc50c50d5686bbdb00595ba94> ."
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|"<urn:enhancement-ba419d35-0dfe-8af7-aee7-bbe10c45c028><http://purl.org/dc/terms/creator> \"eu.iksproject.fise.engines.autotagging.impl.RelatedTopicEnhancementEngine\"^^<http://www.w3.org/2001/XMLSchema#string> ."
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|"<urn:enhancement-ba419d35-0dfe-8af7-aee7-bbe10c45c028><http://fise.iks-project.eu/ontology/entity-reference><http://dbpedia.org/resource/Bob_Marley> ."
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// @Test
specifier|public
name|void
name|testEnginesRawPosTurtle
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|r
init|=
name|enginesResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|TEXT_PLAIN
argument_list|)
operator|.
name|accept
argument_list|(
literal|"text/turtle"
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|TEXT_CONTENT
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|""
operator|+
literal|"<urn:enhancement-ba419d35-0dfe-8af7-aee7-bbe10c45c028>\n"
operator|+
literal|"      a<http://iks-project.eu/ns/fise/extraction/Extraction> ;\n"
operator|+
literal|"<http://iksproject.eu/ns/extraction/related-topic>\n"
operator|+
literal|"<http://dbpedia.org/resource/Bob_Marley> ;"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEnginesRawPosXml
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|r
init|=
name|enginesResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|TEXT_PLAIN
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/rdf+xml"
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|TEXT_CONTENT
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|"<rdf:Description rdf:about=\"urn:enhancement-ba419d35-0dfe-8af7-aee7-bbe10c45c028\">"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEnginesRawPosJson
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|r
init|=
name|enginesResource
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|TEXT_PLAIN
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|TEXT_CONTENT
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|r
operator|.
name|contains
argument_list|(
literal|"{\"value\":\"http:\\/\\/dbpedia.org\\/resource\\/Bob_Marley\""
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertResult
parameter_list|(
name|String
name|result
parameter_list|,
name|String
name|expected
parameter_list|)
block|{
name|assertResults
argument_list|(
name|result
argument_list|,
operator|new
name|String
index|[]
block|{
name|expected
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertResults
parameter_list|(
name|String
name|result
parameter_list|,
name|String
index|[]
name|expected
parameter_list|)
block|{
for|for
control|(
name|String
name|exp
range|:
name|expected
control|)
block|{
if|if
condition|(
operator|!
name|result
operator|.
name|contains
argument_list|(
name|exp
argument_list|)
condition|)
block|{
name|fail
argument_list|(
literal|"Expected result to contain ["
operator|+
name|exp
operator|+
literal|"], result is ["
operator|+
name|result
operator|+
literal|"]"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

