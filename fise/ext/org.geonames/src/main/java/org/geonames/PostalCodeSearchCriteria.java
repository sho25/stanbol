begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2008 Marc Wick, geonames.org  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|geonames
package|;
end_package

begin_comment
comment|/**  * search criteria for web services returning postal codes  *   * @author marc@geonames  *   */
end_comment

begin_class
specifier|public
class|class
name|PostalCodeSearchCriteria
block|{
specifier|private
name|String
name|postalCode
decl_stmt|;
specifier|private
name|String
name|placeName
decl_stmt|;
specifier|private
name|String
name|adminCode1
decl_stmt|;
specifier|private
name|String
name|countryCode
decl_stmt|;
specifier|private
name|String
name|countryBias
decl_stmt|;
specifier|private
name|Double
name|latitude
decl_stmt|;
specifier|private
name|Double
name|longitude
decl_stmt|;
specifier|private
name|double
name|radius
decl_stmt|;
specifier|private
name|Style
name|style
decl_stmt|;
specifier|private
name|int
name|maxRows
decl_stmt|;
specifier|private
name|int
name|startRow
decl_stmt|;
specifier|private
name|boolean
name|isOROperator
init|=
literal|false
decl_stmt|;
comment|/** 	 * @return Returns the style. 	 */
specifier|public
name|Style
name|getStyle
parameter_list|()
block|{
return|return
name|style
return|;
block|}
comment|/** 	 * @param style 	 *            The style to set. 	 */
specifier|public
name|void
name|setStyle
parameter_list|(
name|Style
name|style
parameter_list|)
block|{
name|this
operator|.
name|style
operator|=
name|style
expr_stmt|;
block|}
comment|/** 	 * @return Returns the ISO 3166-1-alpha-2 countryCode. 	 */
specifier|public
name|String
name|getCountryCode
parameter_list|()
block|{
return|return
name|countryCode
return|;
block|}
comment|/** 	 * @param countryCode 	 *            The ISO 3166-1-alpha-2 countryCode to set. 	 */
specifier|public
name|void
name|setCountryCode
parameter_list|(
name|String
name|countryCode
parameter_list|)
throws|throws
name|InvalidParameterException
block|{
if|if
condition|(
name|countryCode
operator|!=
literal|null
operator|&&
name|countryCode
operator|.
name|length
argument_list|()
operator|!=
literal|2
condition|)
block|{
throw|throw
operator|new
name|InvalidParameterException
argument_list|(
literal|"invalid country code "
operator|+
name|countryCode
argument_list|)
throw|;
block|}
name|this
operator|.
name|countryCode
operator|=
name|countryCode
expr_stmt|;
block|}
comment|/** 	 * @return Returns the latitude. 	 */
specifier|public
name|Double
name|getLatitude
parameter_list|()
block|{
return|return
name|latitude
return|;
block|}
comment|/** 	 * @param latitude 	 *            The latitude to set. 	 */
specifier|public
name|void
name|setLatitude
parameter_list|(
name|double
name|latitude
parameter_list|)
throws|throws
name|InvalidParameterException
block|{
if|if
condition|(
name|latitude
operator|>
literal|90.0
operator|||
name|latitude
operator|<
operator|-
literal|90.0
condition|)
block|{
throw|throw
operator|new
name|InvalidParameterException
argument_list|(
literal|"invalid latitude "
operator|+
name|latitude
argument_list|)
throw|;
block|}
name|this
operator|.
name|latitude
operator|=
operator|new
name|Double
argument_list|(
name|latitude
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @return Returns the longitude. 	 */
specifier|public
name|Double
name|getLongitude
parameter_list|()
block|{
return|return
name|longitude
return|;
block|}
comment|/** 	 * @param longitude 	 *            The longitude to set. 	 */
specifier|public
name|void
name|setLongitude
parameter_list|(
name|double
name|longitude
parameter_list|)
throws|throws
name|InvalidParameterException
block|{
if|if
condition|(
name|longitude
operator|>
literal|180.0
operator|||
name|longitude
operator|<
operator|-
literal|180.0
condition|)
block|{
throw|throw
operator|new
name|InvalidParameterException
argument_list|(
literal|"invalid longitude "
operator|+
name|longitude
argument_list|)
throw|;
block|}
name|this
operator|.
name|longitude
operator|=
operator|new
name|Double
argument_list|(
name|longitude
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @return Returns the placeName. 	 */
specifier|public
name|String
name|getPlaceName
parameter_list|()
block|{
return|return
name|placeName
return|;
block|}
comment|/** 	 * @param placeName 	 *            The placeName to set. 	 */
specifier|public
name|void
name|setPlaceName
parameter_list|(
name|String
name|placeName
parameter_list|)
block|{
name|this
operator|.
name|placeName
operator|=
name|placeName
expr_stmt|;
block|}
comment|/** 	 * @return Returns the postalCode. 	 */
specifier|public
name|String
name|getPostalCode
parameter_list|()
block|{
return|return
name|postalCode
return|;
block|}
comment|/** 	 * @param postalCode 	 *            The postalCode to set. 	 */
specifier|public
name|void
name|setPostalCode
parameter_list|(
name|String
name|postalCode
parameter_list|)
block|{
name|this
operator|.
name|postalCode
operator|=
name|postalCode
expr_stmt|;
block|}
comment|/** 	 * @return the maxRows 	 */
specifier|public
name|int
name|getMaxRows
parameter_list|()
block|{
return|return
name|maxRows
return|;
block|}
comment|/** 	 * @param maxRows 	 *            the maxRows to set 	 */
specifier|public
name|void
name|setMaxRows
parameter_list|(
name|int
name|maxRows
parameter_list|)
block|{
name|this
operator|.
name|maxRows
operator|=
name|maxRows
expr_stmt|;
block|}
comment|/** 	 * @param isOROperator 	 *            the isOROperator to set 	 */
specifier|public
name|void
name|setOROperator
parameter_list|(
name|boolean
name|isOROperator
parameter_list|)
block|{
name|this
operator|.
name|isOROperator
operator|=
name|isOROperator
expr_stmt|;
block|}
comment|/** 	 * @return the isOROperator 	 */
specifier|public
name|boolean
name|isOROperator
parameter_list|()
block|{
return|return
name|isOROperator
return|;
block|}
comment|/** 	 * @return the adminCode1 	 */
specifier|public
name|String
name|getAdminCode1
parameter_list|()
block|{
return|return
name|adminCode1
return|;
block|}
comment|/** 	 * @param adminCode1 	 *            the adminCode1 to set 	 */
specifier|public
name|void
name|setAdminCode1
parameter_list|(
name|String
name|adminCode1
parameter_list|)
block|{
name|this
operator|.
name|adminCode1
operator|=
name|adminCode1
expr_stmt|;
block|}
comment|/** 	 * the radius in km to be used for reverse geocoding. 	 *  	 * @param radius 	 *            the radius to set 	 */
specifier|public
name|void
name|setRadius
parameter_list|(
name|double
name|radius
parameter_list|)
block|{
name|this
operator|.
name|radius
operator|=
name|radius
expr_stmt|;
block|}
comment|/** 	 * @return the radius 	 */
specifier|public
name|double
name|getRadius
parameter_list|()
block|{
return|return
name|radius
return|;
block|}
comment|/** 	 * @return the countryBias 	 */
specifier|public
name|String
name|getCountryBias
parameter_list|()
block|{
return|return
name|countryBias
return|;
block|}
comment|/** 	 * @param countryBias 	 *            the countryBias to set 	 */
specifier|public
name|void
name|setCountryBias
parameter_list|(
name|String
name|countryBias
parameter_list|)
block|{
name|this
operator|.
name|countryBias
operator|=
name|countryBias
expr_stmt|;
block|}
comment|/** 	 * @return the startRow 	 */
specifier|public
name|int
name|getStartRow
parameter_list|()
block|{
return|return
name|startRow
return|;
block|}
comment|/** 	 * @param startRow 	 *            the startRow to set 	 */
specifier|public
name|void
name|setStartRow
parameter_list|(
name|int
name|startRow
parameter_list|)
block|{
name|this
operator|.
name|startRow
operator|=
name|startRow
expr_stmt|;
block|}
block|}
end_class

end_unit

