begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements. See the NOTICE file distributed with this  * work for additional information regarding copyright ownership. The ASF  * licenses this file to You under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|it
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|testing
operator|.
name|it
operator|.
name|JarExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/** Demonstrates how to start the runnable jar, with this and a mechanism  *  to check when the server is ready we should be ready to start writing  *  integration tests that talk to the server via http.  */
end_comment

begin_class
specifier|public
class|class
name|DummyTest
block|{
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startRunnableJar
parameter_list|()
throws|throws
name|Exception
block|{
name|JarExecutor
operator|.
name|getInstance
argument_list|(
name|System
operator|.
name|getProperties
argument_list|()
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNothing
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO check that server is started and test it...
specifier|final
name|long
name|delay
init|=
literal|10000
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" - this test does nothing for now, just waits "
operator|+
name|delay
operator|+
literal|" msec to let you check that the server is starting ..."
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
name|delay
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" - done waiting"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

