begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|eu
operator|.
name|iksproject
operator|.
name|fise
operator|.
name|sace
operator|.
name|ui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Graphics
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|MediaTracker
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Point
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Rectangle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Toolkit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|datatransfer
operator|.
name|DataFlavor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|datatransfer
operator|.
name|Transferable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|datatransfer
operator|.
name|UnsupportedFlavorException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseMotionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ImageIcon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|TransferHandler
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|fise
operator|.
name|sace
operator|.
name|util
operator|.
name|ImageAnnotation
import|;
end_import

begin_import
import|import
name|eu
operator|.
name|iksproject
operator|.
name|fise
operator|.
name|sace
operator|.
name|util
operator|.
name|TextAnnotation
import|;
end_import

begin_class
specifier|public
class|class
name|SacePanelImage
extends|extends
name|JPanel
block|{
comment|/** 	 *  	 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|7607274145586243340L
decl_stmt|;
specifier|private
name|SaceGUI
name|saceGUI
decl_stmt|;
specifier|private
name|Image
name|image
decl_stmt|;
specifier|private
name|String
name|imageFilename
decl_stmt|;
specifier|private
name|JLabel
name|img
decl_stmt|;
specifier|private
name|Rectangle
name|currentRect
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Rectangle
argument_list|>
name|regions
decl_stmt|;
specifier|public
name|SacePanelImage
parameter_list|(
name|SaceGUI
name|gui
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|saceGUI
operator|=
name|gui
expr_stmt|;
name|init
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|imageFilename
operator|=
literal|""
expr_stmt|;
name|img
operator|.
name|setText
argument_list|(
literal|"<drop image here>"
argument_list|)
expr_stmt|;
name|img
operator|.
name|setIcon
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Rectangle
name|translateRect
parameter_list|(
name|Rectangle
name|r
parameter_list|)
block|{
name|Rectangle
name|newRect
init|=
operator|new
name|Rectangle
argument_list|()
decl_stmt|;
if|if
condition|(
name|r
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|r
operator|.
name|width
operator|<
literal|0
condition|)
block|{
name|newRect
operator|.
name|x
operator|=
name|r
operator|.
name|x
operator|+
name|r
operator|.
name|width
expr_stmt|;
name|newRect
operator|.
name|width
operator|=
operator|-
name|r
operator|.
name|width
expr_stmt|;
block|}
else|else
block|{
name|newRect
operator|.
name|x
operator|=
name|r
operator|.
name|x
expr_stmt|;
name|newRect
operator|.
name|width
operator|=
name|r
operator|.
name|width
expr_stmt|;
block|}
if|if
condition|(
name|r
operator|.
name|height
operator|<
literal|0
condition|)
block|{
name|newRect
operator|.
name|y
operator|=
name|r
operator|.
name|y
operator|+
name|r
operator|.
name|height
expr_stmt|;
name|newRect
operator|.
name|height
operator|=
operator|-
name|r
operator|.
name|height
expr_stmt|;
block|}
else|else
block|{
name|newRect
operator|.
name|y
operator|=
name|r
operator|.
name|y
expr_stmt|;
name|newRect
operator|.
name|height
operator|=
name|r
operator|.
name|height
expr_stmt|;
block|}
return|return
name|newRect
return|;
block|}
return|return
name|r
return|;
block|}
specifier|private
name|void
name|init
parameter_list|()
block|{
name|currentRect
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|regions
operator|=
operator|new
name|LinkedList
argument_list|<
name|Rectangle
argument_list|>
argument_list|()
expr_stmt|;
name|img
operator|=
operator|new
name|JLabel
argument_list|(
literal|"<drop image here>"
argument_list|)
block|{
comment|/** 			 *  			 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|9085980562151354916L
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|paint
parameter_list|(
name|Graphics
name|g
parameter_list|)
block|{
name|super
operator|.
name|paint
argument_list|(
name|g
argument_list|)
expr_stmt|;
for|for
control|(
name|Rectangle
name|r
range|:
name|regions
control|)
block|{
name|g
operator|.
name|setColor
argument_list|(
name|Color
operator|.
name|white
argument_list|)
expr_stmt|;
name|g
operator|.
name|drawRect
argument_list|(
name|r
operator|.
name|x
argument_list|,
name|r
operator|.
name|y
argument_list|,
name|r
operator|.
name|width
argument_list|,
name|r
operator|.
name|height
argument_list|)
expr_stmt|;
name|g
operator|.
name|drawRect
argument_list|(
name|r
operator|.
name|x
operator|+
literal|1
argument_list|,
name|r
operator|.
name|y
operator|+
literal|1
argument_list|,
name|r
operator|.
name|width
argument_list|,
name|r
operator|.
name|height
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|currentRect
operator|!=
literal|null
condition|)
block|{
name|Rectangle
name|newRect
init|=
name|translateRect
argument_list|(
name|currentRect
argument_list|)
decl_stmt|;
if|if
condition|(
name|newRect
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|doesIntersect
argument_list|(
name|newRect
argument_list|)
condition|)
block|{
name|g
operator|.
name|setColor
argument_list|(
name|Color
operator|.
name|red
argument_list|)
expr_stmt|;
name|g
operator|.
name|drawRect
argument_list|(
name|newRect
operator|.
name|x
argument_list|,
name|newRect
operator|.
name|y
argument_list|,
name|newRect
operator|.
name|width
argument_list|,
name|newRect
operator|.
name|height
argument_list|)
expr_stmt|;
name|g
operator|.
name|drawRect
argument_list|(
name|newRect
operator|.
name|x
operator|+
literal|1
argument_list|,
name|newRect
operator|.
name|y
operator|+
literal|1
argument_list|,
name|newRect
operator|.
name|width
argument_list|,
name|newRect
operator|.
name|height
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|g
operator|.
name|setColor
argument_list|(
name|Color
operator|.
name|orange
argument_list|)
expr_stmt|;
name|g
operator|.
name|drawRect
argument_list|(
name|newRect
operator|.
name|x
argument_list|,
name|newRect
operator|.
name|y
argument_list|,
name|newRect
operator|.
name|width
argument_list|,
name|newRect
operator|.
name|height
argument_list|)
expr_stmt|;
name|g
operator|.
name|drawRect
argument_list|(
name|newRect
operator|.
name|x
operator|+
literal|1
argument_list|,
name|newRect
operator|.
name|y
operator|+
literal|1
argument_list|,
name|newRect
operator|.
name|width
argument_list|,
name|newRect
operator|.
name|height
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
expr_stmt|;
name|setTransferHandler
argument_list|(
operator|new
name|FileTransferHandler
argument_list|()
argument_list|)
expr_stmt|;
name|img
operator|.
name|setTransferHandler
argument_list|(
operator|new
name|AnnotationTransferHandler
argument_list|()
argument_list|)
expr_stmt|;
name|img
operator|.
name|addMouseListener
argument_list|(
operator|new
name|MouseListener
argument_list|()
block|{
specifier|public
name|void
name|mouseClicked
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{  			}
specifier|public
name|void
name|mouseEntered
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
name|currentRect
operator|=
literal|null
expr_stmt|;
name|SacePanelImage
operator|.
name|this
operator|.
name|repaint
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|mouseExited
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
name|currentRect
operator|=
literal|null
expr_stmt|;
name|SacePanelImage
operator|.
name|this
operator|.
name|repaint
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|mousePressed
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
name|currentRect
operator|=
operator|new
name|Rectangle
argument_list|(
name|e
operator|.
name|getX
argument_list|()
argument_list|,
name|e
operator|.
name|getY
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|SacePanelImage
operator|.
name|this
operator|.
name|repaint
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|mouseReleased
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
name|Rectangle
name|newRect
init|=
name|translateRect
argument_list|(
name|currentRect
argument_list|)
decl_stmt|;
if|if
condition|(
name|newRect
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|doesIntersect
argument_list|(
name|newRect
argument_list|)
condition|)
name|regions
operator|.
name|add
argument_list|(
name|newRect
argument_list|)
expr_stmt|;
name|currentRect
operator|=
literal|null
expr_stmt|;
name|SacePanelImage
operator|.
name|this
operator|.
name|repaint
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|img
operator|.
name|addMouseMotionListener
argument_list|(
operator|new
name|MouseMotionListener
argument_list|()
block|{
specifier|public
name|void
name|mouseDragged
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|currentRect
operator|!=
literal|null
condition|)
block|{
name|currentRect
operator|.
name|height
operator|=
name|e
operator|.
name|getY
argument_list|()
operator|-
name|currentRect
operator|.
name|y
expr_stmt|;
name|currentRect
operator|.
name|width
operator|=
name|e
operator|.
name|getX
argument_list|()
operator|-
name|currentRect
operator|.
name|x
expr_stmt|;
name|SacePanelImage
operator|.
name|this
operator|.
name|repaint
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|mouseMoved
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{ 			}
block|}
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
operator|new
name|GridBagLayout
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|img
argument_list|)
expr_stmt|;
comment|// DEBUG//
name|setImage
argument_list|(
literal|"./src/main/resources/germany.jpg"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|doesIntersect
parameter_list|(
name|Rectangle
name|rect
parameter_list|)
block|{
if|if
condition|(
name|rect
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Rectangle
name|r
range|:
name|regions
control|)
block|{
if|if
condition|(
name|r
operator|.
name|intersects
argument_list|(
name|rect
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|Rectangle
name|getRectangleToPoint
parameter_list|(
name|Point
name|p
parameter_list|)
block|{
if|if
condition|(
name|p
operator|!=
literal|null
condition|)
for|for
control|(
name|Rectangle
name|r
range|:
name|regions
control|)
block|{
if|if
condition|(
name|r
operator|.
name|contains
argument_list|(
name|p
argument_list|)
condition|)
return|return
name|r
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|setImage
parameter_list|(
name|String
name|filename
parameter_list|)
block|{
name|image
operator|=
name|Toolkit
operator|.
name|getDefaultToolkit
argument_list|()
operator|.
name|getImage
argument_list|(
name|filename
argument_list|)
expr_stmt|;
name|ImageIcon
name|ii
init|=
operator|new
name|ImageIcon
argument_list|(
name|image
argument_list|)
decl_stmt|;
if|if
condition|(
name|ii
operator|.
name|getImageLoadStatus
argument_list|()
operator|==
name|MediaTracker
operator|.
name|COMPLETE
operator|||
name|ii
operator|.
name|getImageLoadStatus
argument_list|()
operator|==
name|MediaTracker
operator|.
name|LOADING
condition|)
block|{
name|imageFilename
operator|=
name|filename
expr_stmt|;
name|img
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|img
operator|.
name|setIcon
argument_list|(
name|ii
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|img
operator|.
name|setText
argument_list|(
literal|"<drop image here>"
argument_list|)
expr_stmt|;
block|}
block|}
class|class
name|AnnotationTransferHandler
extends|extends
name|TransferHandler
block|{
comment|/** 		 *  		 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|4564763585453555835L
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|importData
parameter_list|(
name|JComponent
name|comp
parameter_list|,
name|Transferable
name|t
parameter_list|)
block|{
try|try
block|{
if|if
condition|(
name|t
operator|.
name|isDataFlavorSupported
argument_list|(
name|DataFlavor
operator|.
name|stringFlavor
argument_list|)
condition|)
block|{
name|Object
name|o
init|=
name|t
operator|.
name|getTransferData
argument_list|(
name|DataFlavor
operator|.
name|stringFlavor
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|instanceof
name|TextAnnotation
condition|)
block|{
name|Rectangle
name|r
init|=
name|getRectangleToPoint
argument_list|(
name|comp
operator|.
name|getMousePosition
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|r
operator|!=
literal|null
condition|)
block|{
name|ImageAnnotation
name|ia
init|=
operator|new
name|ImageAnnotation
argument_list|()
decl_stmt|;
name|ia
operator|.
name|setAnnotation
argument_list|(
operator|(
operator|(
name|TextAnnotation
operator|)
name|o
operator|)
argument_list|)
expr_stmt|;
name|ia
operator|.
name|setRegion
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|ia
operator|.
name|setFilename
argument_list|(
name|imageFilename
argument_list|)
expr_stmt|;
name|saceGUI
operator|.
name|submitImageAnnotationToFISE
argument_list|(
name|ia
argument_list|)
expr_stmt|;
block|}
block|}
return|return
literal|true
return|;
block|}
block|}
catch|catch
parameter_list|(
name|UnsupportedFlavorException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|canImport
parameter_list|(
name|JComponent
name|comp
parameter_list|,
name|DataFlavor
index|[]
name|transferFlavors
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
block|}
class|class
name|FileTransferHandler
extends|extends
name|TransferHandler
block|{
comment|/** 		 *  		 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|4564763585453555835L
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|importData
parameter_list|(
name|JComponent
name|comp
parameter_list|,
name|Transferable
name|t
parameter_list|)
block|{
try|try
block|{
if|if
condition|(
name|t
operator|.
name|isDataFlavorSupported
argument_list|(
name|DataFlavor
operator|.
name|javaFileListFlavor
argument_list|)
condition|)
block|{
name|List
name|fileList
init|=
operator|(
name|java
operator|.
name|util
operator|.
name|List
operator|)
name|t
operator|.
name|getTransferData
argument_list|(
name|DataFlavor
operator|.
name|javaFileListFlavor
argument_list|)
decl_stmt|;
name|Object
name|o
init|=
name|fileList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|instanceof
name|File
condition|)
block|{
name|File
name|f
init|=
operator|(
name|File
operator|)
name|o
decl_stmt|;
if|if
condition|(
name|f
operator|.
name|exists
argument_list|()
operator|&&
name|f
operator|.
name|isFile
argument_list|()
condition|)
block|{
name|String
name|mimeType
init|=
name|getMimeType
argument_list|(
name|f
argument_list|)
decl_stmt|;
if|if
condition|(
name|mimeType
operator|.
name|contains
argument_list|(
literal|"image"
argument_list|)
condition|)
block|{
name|setImage
argument_list|(
name|f
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|UnsupportedFlavorException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|String
name|getMimeType
parameter_list|(
name|File
name|f
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
throws|,
name|MalformedURLException
block|{
name|String
name|type
init|=
literal|null
decl_stmt|;
name|URL
name|u
init|=
name|f
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
decl_stmt|;
name|URLConnection
name|uc
init|=
literal|null
decl_stmt|;
name|uc
operator|=
name|u
operator|.
name|openConnection
argument_list|()
expr_stmt|;
name|type
operator|=
name|uc
operator|.
name|getContentType
argument_list|()
expr_stmt|;
return|return
name|type
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|canImport
parameter_list|(
name|JComponent
name|comp
parameter_list|,
name|DataFlavor
index|[]
name|transferFlavors
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
block|}
block|}
end_class

end_unit

