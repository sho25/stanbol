begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|reengineer
operator|.
name|xml
operator|.
name|vocab
package|;
end_package

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_class
specifier|public
class|class
name|XML_OWL
block|{
comment|/**      *<p>      * The namespace of the vocabulary as a string      *</p>      */
specifier|public
specifier|static
specifier|final
name|String
name|NS
init|=
literal|"http://www.ontologydesignpatterns.org/ont/iks/oxml.owl#"
decl_stmt|;
comment|/**      *<p>      * The namespace of the vocabulary as a string      *</p>      */
specifier|public
specifier|static
specifier|final
name|String
name|URI
init|=
literal|"http://www.ontologydesignpatterns.org/ont/iks/oxml.owl"
decl_stmt|;
comment|/**      *<p>      * The namespace of the vocabulary as a string      *</p>      *       * @see #NS      */
specifier|public
specifier|static
specifier|final
name|IRI
name|SpecialAttrs
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"SpecialAttrs"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|XMLElement
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"XMLElement"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|XMLAttribute
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"XMLAttribute"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|Node
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"Node"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|hasSpecialAttrs
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"hasSpecialAttrs"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|isSpecialAttrsOf
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"isSpecialAttrsOf"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|hasXMLAttribute
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"hasXMLAttribute"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|isXMLAttributeOf
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"isXMLAttributeOf"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|nodeName
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"nodeName"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|nodeValue
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"nodeValue"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|hasElementDeclaration
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"hasElementDeclaration"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|isElementDeclarationOf
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"isElementDeclarationOf"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|hasAttributeDeclaration
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"hasAttributeDeclaration"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|isAttributetDeclarationOf
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"isAttributeDeclarationOf"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|IRI
name|textContent
init|=
name|IRI
operator|.
name|create
argument_list|(
name|NS
operator|+
literal|"textContent"
argument_list|)
decl_stmt|;
block|}
end_class

end_unit

