begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|reasoners
operator|.
name|hermit
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|apibinding
operator|.
name|OWLManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|MissingImportEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|MissingImportListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLDataFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyChangeListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyCreationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * We share this data between all the tests. Note: take care, do not leave the  * content of these object changed, for example remove your example ontology  * from the testDataManager  *   */
end_comment

begin_class
specifier|public
class|class
name|TestData
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestData
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/** 	 * Constants (local resources) 	 */
specifier|static
specifier|final
name|String
name|LOCAL_RESOURCE_FOAF
init|=
literal|"foaf.rdf"
decl_stmt|;
specifier|static
name|URL
name|FOAF_LOCATION
init|=
name|TestData
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|)
operator|+
name|LOCAL_RESOURCE_FOAF
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|LOCAL_RESOURCE_DBPEDIA
init|=
literal|"dbpedia_3.6.owl"
decl_stmt|;
specifier|static
name|URL
name|DBPEDIA_LOCATION
init|=
name|TestData
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|)
operator|+
name|LOCAL_RESOURCE_DBPEDIA
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|LOCAL_RESOURCE_TEST_1
init|=
literal|"test_1.owl"
decl_stmt|;
specifier|static
name|URL
name|TEST_1_LOCATION
init|=
name|TestData
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|)
operator|+
name|LOCAL_RESOURCE_TEST_1
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|LOCAL_RESOURCE_TEST_1_EXPECTED
init|=
literal|"test_1_expected.owl"
decl_stmt|;
specifier|static
name|URL
name|TEST_1_expected_LOCATION
init|=
name|TestData
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|)
operator|+
name|LOCAL_RESOURCE_TEST_1_EXPECTED
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|LOCAL_RESOURCE_TEST_2
init|=
literal|"test_2.owl"
decl_stmt|;
specifier|static
name|URL
name|TEST_2_LOCATION
init|=
name|TestData
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|)
operator|+
name|LOCAL_RESOURCE_TEST_2
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|LOCAL_RESOURCE_TEST_2_EXPECTED
init|=
literal|"test_2_expected.owl"
decl_stmt|;
specifier|static
name|URL
name|TEST_2_expected_LOCATION
init|=
name|TestData
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|)
operator|+
name|LOCAL_RESOURCE_TEST_2_EXPECTED
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|LOCAL_RESOURCE_TEST_3
init|=
literal|"test_3.owl"
decl_stmt|;
specifier|static
name|URL
name|TEST_3_LOCATION
init|=
name|TestData
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|)
operator|+
name|LOCAL_RESOURCE_TEST_3
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|LOCAL_RESOURCE_TEST_3_RULES
init|=
literal|"test_3_rules.owl"
decl_stmt|;
specifier|static
name|URL
name|TEST_3_rules_LOCATION
init|=
name|TestData
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|)
operator|+
name|LOCAL_RESOURCE_TEST_3_RULES
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|LOCAL_RESOURCE_TEST_3_EXPECTED
init|=
literal|"test_3_expected.owl"
decl_stmt|;
specifier|static
name|URL
name|TEST_3_expected_LOCATION
init|=
name|TestData
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|)
operator|+
name|LOCAL_RESOURCE_TEST_3_EXPECTED
argument_list|)
decl_stmt|;
comment|/** 	 * Constants 	 */
comment|// EXAMPLE
specifier|static
specifier|final
name|String
name|TEST_NS
init|=
literal|"http://www.example.org/test/"
decl_stmt|;
specifier|static
specifier|final
name|String
name|TEST_1_NS
init|=
name|TEST_NS
operator|+
literal|"1/"
decl_stmt|;
specifier|static
specifier|final
name|String
name|TEST_1_expected_NS
init|=
name|TEST_1_NS
operator|+
literal|"expected/"
decl_stmt|;
specifier|static
specifier|final
name|String
name|TEST_2_NS
init|=
name|TEST_NS
operator|+
literal|"2/"
decl_stmt|;
specifier|static
specifier|final
name|String
name|TEST_2_expected_NS
init|=
name|TEST_2_NS
operator|+
literal|"expected/"
decl_stmt|;
specifier|static
specifier|final
name|String
name|TEST_3_NS
init|=
name|TEST_NS
operator|+
literal|"3/"
decl_stmt|;
specifier|static
specifier|final
name|String
name|TEST_3_rules_NS
init|=
name|TEST_3_NS
operator|+
literal|"rules/"
decl_stmt|;
specifier|static
specifier|final
name|String
name|TEST_3_expected_NS
init|=
name|TEST_3_NS
operator|+
literal|"expected/"
decl_stmt|;
comment|// FOAF
specifier|static
specifier|final
name|String
name|FOAF_NS
init|=
literal|"http://xmlns.com/foaf/0.1/"
decl_stmt|;
comment|/** 	 * Manager, factory 	 */
specifier|static
specifier|final
name|OWLOntologyManager
name|manager
init|=
name|OWLManager
operator|.
name|createOWLOntologyManager
argument_list|()
decl_stmt|;
specifier|static
specifier|final
name|OWLDataFactory
name|factory
init|=
name|OWLManager
operator|.
name|getOWLDataFactory
argument_list|()
decl_stmt|;
static|static
block|{
try|try
block|{
comment|/** 			 * Configuration of the manager 			 */
name|manager
operator|.
name|setSilentMissingImportsHandling
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|manager
operator|.
name|addMissingImportListener
argument_list|(
operator|new
name|MissingImportListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|importMissing
parameter_list|(
name|MissingImportEvent
name|event
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Missing import! URI was: {}"
argument_list|,
name|event
operator|.
name|getImportedOntologyURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|manager
operator|.
name|addOntologyChangeListener
argument_list|(
operator|new
name|OWLOntologyChangeListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|ontologiesChanged
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|OWLOntologyChange
argument_list|>
name|arg0
parameter_list|)
throws|throws
name|OWLException
block|{
for|for
control|(
name|OWLOntologyChange
name|change
range|:
name|arg0
control|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"{} TO {}"
argument_list|,
name|change
argument_list|,
name|change
operator|.
name|getOntology
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
comment|/** 			 * Loading test ontologies once for all 			 */
name|manager
operator|.
name|loadOntologyFromOntologyDocument
argument_list|(
name|FOAF_LOCATION
operator|.
name|openStream
argument_list|()
argument_list|)
expr_stmt|;
name|manager
operator|.
name|loadOntologyFromOntologyDocument
argument_list|(
name|DBPEDIA_LOCATION
operator|.
name|openStream
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test 1
name|manager
operator|.
name|loadOntologyFromOntologyDocument
argument_list|(
name|TEST_1_LOCATION
operator|.
name|openStream
argument_list|()
argument_list|)
expr_stmt|;
name|manager
operator|.
name|loadOntologyFromOntologyDocument
argument_list|(
name|TEST_1_expected_LOCATION
operator|.
name|openStream
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test 2
name|manager
operator|.
name|loadOntologyFromOntologyDocument
argument_list|(
name|TEST_2_LOCATION
operator|.
name|openStream
argument_list|()
argument_list|)
expr_stmt|;
name|manager
operator|.
name|loadOntologyFromOntologyDocument
argument_list|(
name|TEST_2_expected_LOCATION
operator|.
name|openStream
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test 3
name|manager
operator|.
name|loadOntologyFromOntologyDocument
argument_list|(
name|TEST_3_LOCATION
operator|.
name|openStream
argument_list|()
argument_list|)
expr_stmt|;
name|manager
operator|.
name|loadOntologyFromOntologyDocument
argument_list|(
name|TEST_3_rules_LOCATION
operator|.
name|openStream
argument_list|()
argument_list|)
expr_stmt|;
name|manager
operator|.
name|loadOntologyFromOntologyDocument
argument_list|(
name|TEST_3_expected_LOCATION
operator|.
name|openStream
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OWLOntologyCreationException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"A {} have been thrown while creating the ontology"
operator|+
literal|". Message was: {}"
argument_list|,
name|e
operator|.
name|getClass
argument_list|()
argument_list|,
name|e
operator|.
name|getLocalizedMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"A {} have been thrown while loading the ontology from the location {}"
argument_list|,
name|e
operator|.
name|getClass
argument_list|()
argument_list|,
name|FOAF_LOCATION
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|log
operator|.
name|error
argument_list|(
literal|"Message was: {}"
argument_list|,
name|e
operator|.
name|getLocalizedMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

