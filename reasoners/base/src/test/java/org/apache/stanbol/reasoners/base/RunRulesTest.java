begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * To change this template, choose Tools | Templates  * and open the template in the editor.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|reasoners
operator|.
name|base
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|reasoners
operator|.
name|base
operator|.
name|commands
operator|.
name|CreateReasoner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|reasoners
operator|.
name|base
operator|.
name|commands
operator|.
name|RunReasoner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|reasoners
operator|.
name|base
operator|.
name|commands
operator|.
name|RunRules
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|apibinding
operator|.
name|OWLManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLAxiom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyCreationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|semanticweb
operator|.
name|owlapi
operator|.
name|model
operator|.
name|OWLOntologyManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|ontology
operator|.
name|OntModel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hp
operator|.
name|hpl
operator|.
name|jena
operator|.
name|rdf
operator|.
name|model
operator|.
name|ModelFactory
import|;
end_import

begin_comment
comment|/**  *   * @author elvio  */
end_comment

begin_class
specifier|public
class|class
name|RunRulesTest
block|{
specifier|private
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|public
name|OWLOntologyManager
name|owlmanagertarget
decl_stmt|;
specifier|public
name|OWLOntologyManager
name|owlnamagerswrlt
decl_stmt|;
specifier|public
name|OWLOntology
name|owltarget
decl_stmt|;
specifier|public
name|OWLOntology
name|owlswrl
decl_stmt|;
specifier|public
name|OntModel
name|jenaswrl
decl_stmt|;
specifier|public
name|RunRulesTest
parameter_list|()
throws|throws
name|OWLOntologyCreationException
throws|,
name|IOException
block|{
name|this
operator|.
name|owltarget
operator|=
name|OWLManager
operator|.
name|createOWLOntologyManager
argument_list|()
operator|.
name|loadOntologyFromOntologyDocument
argument_list|(
operator|new
name|File
argument_list|(
literal|"./src/main/resources/TestFile/ProvaParent.owl"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|owlswrl
operator|=
name|OWLManager
operator|.
name|createOWLOntologyManager
argument_list|()
operator|.
name|loadOntologyFromOntologyDocument
argument_list|(
operator|new
name|File
argument_list|(
literal|"./src/main/resources/TestFile/OnlyRuledProvaParent.owl"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|owlmanagertarget
operator|=
name|owltarget
operator|.
name|getOWLOntologyManager
argument_list|()
expr_stmt|;
name|this
operator|.
name|owlnamagerswrlt
operator|=
name|owlswrl
operator|.
name|getOWLOntologyManager
argument_list|()
expr_stmt|;
name|this
operator|.
name|jenaswrl
operator|=
name|ModelFactory
operator|.
name|createOntologyModel
argument_list|()
expr_stmt|;
name|this
operator|.
name|jenaswrl
operator|.
name|read
argument_list|(
literal|"file:./src/main/resources/TestFile/OnlyRuledProvaParentRDFXML.owl"
argument_list|,
literal|"RDF/XML"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUpClass
parameter_list|()
throws|throws
name|Exception
block|{}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDownClass
parameter_list|()
throws|throws
name|Exception
block|{}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{}
comment|/**      * Test of runRulesReasoner method, of class RunRules.      */
annotation|@
name|Test
specifier|public
name|void
name|testRunRulesReasoner_OWLOntology_1
parameter_list|()
throws|throws
name|OWLOntologyCreationException
block|{
name|OWLOntology
name|newmodel
init|=
name|OWLManager
operator|.
name|createOWLOntologyManager
argument_list|()
operator|.
name|createOntology
argument_list|(
name|owltarget
operator|.
name|getOntologyID
argument_list|()
argument_list|)
decl_stmt|;
name|RunRules
name|instance
init|=
operator|new
name|RunRules
argument_list|(
name|owlswrl
argument_list|,
name|owltarget
argument_list|)
decl_stmt|;
name|newmodel
operator|=
name|instance
operator|.
name|runRulesReasoner
argument_list|(
name|newmodel
argument_list|)
expr_stmt|;
name|CreateReasoner
name|reasonerforcheck
init|=
operator|new
name|CreateReasoner
argument_list|(
name|newmodel
argument_list|)
decl_stmt|;
name|RunReasoner
name|run
init|=
operator|new
name|RunReasoner
argument_list|(
name|reasonerforcheck
operator|.
name|getReasoner
argument_list|()
argument_list|)
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Ontology {} is "
operator|+
operator|(
name|run
operator|.
name|isConsistent
argument_list|()
condition|?
literal|"consistent"
else|:
literal|"NOT consistent"
operator|)
operator|+
literal|"."
argument_list|,
name|newmodel
operator|.
name|getOntologyID
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|OWLAxiom
argument_list|>
name|axiom
init|=
name|newmodel
operator|.
name|getAxioms
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|OWLAxiom
argument_list|>
name|axt
init|=
name|owltarget
operator|.
name|getAxioms
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|String
name|inferedaxiom
init|=
literal|"ObjectPropertyAssertion(<http://www.semanticweb.org/ontologies/2010/6/ProvaParent.owl#hasUncle><http://www.semanticweb.org/ontologies/2010/6/ProvaParent.owl#Tom><http://www.semanticweb.org/ontologies/2010/6/ProvaParent.owl#John>)"
decl_stmt|;
name|String
name|ax
decl_stmt|;
name|assertNotNull
argument_list|(
name|newmodel
argument_list|)
expr_stmt|;
while|while
condition|(
name|axt
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ax
operator|=
name|axt
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
if|if
condition|(
name|ax
operator|.
name|equals
argument_list|(
name|inferedaxiom
argument_list|)
condition|)
name|fail
argument_list|(
literal|"Some errors occur with runRulesReasoner with new ontology in KReSRunRules."
argument_list|)
expr_stmt|;
block|}
while|while
condition|(
name|axiom
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ax
operator|=
name|axiom
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
if|if
condition|(
name|ax
operator|.
name|equals
argument_list|(
name|inferedaxiom
argument_list|)
condition|)
name|assertEquals
argument_list|(
name|inferedaxiom
argument_list|,
name|ax
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Test of runRulesReasoner method, of class RunRules.      */
annotation|@
name|Test
specifier|public
name|void
name|testRunRulesReasoner_0args_1
parameter_list|()
block|{
name|RunRules
name|instance
init|=
operator|new
name|RunRules
argument_list|(
name|owlswrl
argument_list|,
name|owltarget
argument_list|)
decl_stmt|;
name|OWLOntology
name|newmodel
init|=
name|instance
operator|.
name|runRulesReasoner
argument_list|()
decl_stmt|;
name|CreateReasoner
name|reasonerforcheck
init|=
operator|new
name|CreateReasoner
argument_list|(
name|newmodel
argument_list|)
decl_stmt|;
name|RunReasoner
name|run
init|=
operator|new
name|RunReasoner
argument_list|(
name|reasonerforcheck
operator|.
name|getReasoner
argument_list|()
argument_list|)
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Ontology {} is "
operator|+
operator|(
name|run
operator|.
name|isConsistent
argument_list|()
condition|?
literal|"consistent"
else|:
literal|"NOT consistent"
operator|)
operator|+
literal|"."
argument_list|,
name|newmodel
operator|.
name|getOntologyID
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|OWLAxiom
argument_list|>
name|axiom
init|=
name|newmodel
operator|.
name|getAxioms
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|String
name|inferedaxiom
init|=
literal|"ObjectPropertyAssertion(<http://www.semanticweb.org/ontologies/2010/6/ProvaParent.owl#hasUncle><http://www.semanticweb.org/ontologies/2010/6/ProvaParent.owl#Tom><http://www.semanticweb.org/ontologies/2010/6/ProvaParent.owl#John>)"
decl_stmt|;
name|String
name|ax
decl_stmt|;
name|assertNotNull
argument_list|(
name|newmodel
argument_list|)
expr_stmt|;
while|while
condition|(
name|axiom
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ax
operator|=
name|axiom
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
if|if
condition|(
name|ax
operator|.
name|equals
argument_list|(
name|inferedaxiom
argument_list|)
condition|)
name|assertEquals
argument_list|(
name|inferedaxiom
argument_list|,
name|ax
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Test of runRulesReasoner method, of class RunRules.      */
annotation|@
name|Test
specifier|public
name|void
name|testRunRulesReasoner_OWLOntology_2
parameter_list|()
throws|throws
name|OWLOntologyCreationException
block|{
name|OWLOntology
name|newmodel
init|=
name|OWLManager
operator|.
name|createOWLOntologyManager
argument_list|()
operator|.
name|createOntology
argument_list|(
name|owltarget
operator|.
name|getOntologyID
argument_list|()
argument_list|)
decl_stmt|;
name|RunRules
name|instance
init|=
operator|new
name|RunRules
argument_list|(
name|jenaswrl
operator|.
name|getBaseModel
argument_list|()
argument_list|,
name|owltarget
argument_list|)
decl_stmt|;
name|newmodel
operator|=
name|instance
operator|.
name|runRulesReasoner
argument_list|(
name|newmodel
argument_list|)
expr_stmt|;
name|CreateReasoner
name|reasonerforcheck
init|=
operator|new
name|CreateReasoner
argument_list|(
name|newmodel
argument_list|)
decl_stmt|;
name|RunReasoner
name|run
init|=
operator|new
name|RunReasoner
argument_list|(
name|reasonerforcheck
operator|.
name|getReasoner
argument_list|()
argument_list|)
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Ontology {} is "
operator|+
operator|(
name|run
operator|.
name|isConsistent
argument_list|()
condition|?
literal|"consistent"
else|:
literal|"NOT consistent"
operator|)
operator|+
literal|"."
argument_list|,
name|newmodel
operator|.
name|getOntologyID
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|OWLAxiom
argument_list|>
name|axiom
init|=
name|newmodel
operator|.
name|getAxioms
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|OWLAxiom
argument_list|>
name|axt
init|=
name|owltarget
operator|.
name|getAxioms
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|String
name|inferedaxiom
init|=
literal|"ObjectPropertyAssertion(<http://www.semanticweb.org/ontologies/2010/6/ProvaParent.owl#hasUncle><http://www.semanticweb.org/ontologies/2010/6/ProvaParent.owl#Tom><http://www.semanticweb.org/ontologies/2010/6/ProvaParent.owl#John>)"
decl_stmt|;
name|String
name|ax
decl_stmt|;
name|assertNotNull
argument_list|(
name|newmodel
argument_list|)
expr_stmt|;
while|while
condition|(
name|axt
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ax
operator|=
name|axt
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
if|if
condition|(
name|ax
operator|.
name|equals
argument_list|(
name|inferedaxiom
argument_list|)
condition|)
name|fail
argument_list|(
literal|"Some errors occur with runRulesReasoner with new ontology in KReSRunRules."
argument_list|)
expr_stmt|;
block|}
while|while
condition|(
name|axiom
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ax
operator|=
name|axiom
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
if|if
condition|(
name|ax
operator|.
name|equals
argument_list|(
name|inferedaxiom
argument_list|)
condition|)
name|assertEquals
argument_list|(
name|inferedaxiom
argument_list|,
name|ax
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Test of runRulesReasoner method, of class RunRules.      */
annotation|@
name|Test
specifier|public
name|void
name|testRunRulesReasoner_0args_2
parameter_list|()
block|{
name|RunRules
name|instance
init|=
operator|new
name|RunRules
argument_list|(
name|jenaswrl
argument_list|,
name|owltarget
argument_list|)
decl_stmt|;
name|OWLOntology
name|newmodel
init|=
name|instance
operator|.
name|runRulesReasoner
argument_list|()
decl_stmt|;
name|CreateReasoner
name|reasonerforcheck
init|=
operator|new
name|CreateReasoner
argument_list|(
name|newmodel
argument_list|)
decl_stmt|;
name|RunReasoner
name|run
init|=
operator|new
name|RunReasoner
argument_list|(
name|reasonerforcheck
operator|.
name|getReasoner
argument_list|()
argument_list|)
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Ontology {} is "
operator|+
operator|(
name|run
operator|.
name|isConsistent
argument_list|()
condition|?
literal|"consistent"
else|:
literal|"NOT consistent"
operator|)
operator|+
literal|"."
argument_list|,
name|newmodel
operator|.
name|getOntologyID
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|OWLAxiom
argument_list|>
name|axiom
init|=
name|newmodel
operator|.
name|getAxioms
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|String
name|inferedaxiom
init|=
literal|"ObjectPropertyAssertion(<http://www.semanticweb.org/ontologies/2010/6/ProvaParent.owl#hasUncle><http://www.semanticweb.org/ontologies/2010/6/ProvaParent.owl#Tom><http://www.semanticweb.org/ontologies/2010/6/ProvaParent.owl#John>)"
decl_stmt|;
name|String
name|ax
decl_stmt|;
name|assertNotNull
argument_list|(
name|newmodel
argument_list|)
expr_stmt|;
while|while
condition|(
name|axiom
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ax
operator|=
name|axiom
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
if|if
condition|(
name|ax
operator|.
name|equals
argument_list|(
name|inferedaxiom
argument_list|)
condition|)
name|assertEquals
argument_list|(
name|inferedaxiom
argument_list|,
name|ax
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

