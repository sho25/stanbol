begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|reasoners
operator|.
name|it
operator|.
name|online
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|testing
operator|.
name|stanbol
operator|.
name|StanbolTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * All these tests use the online FOAF ontology  *   * Supported accept headers are:  * - text/html  * - text/n3  * - application/rdf+xml  * - application/turtle  *   * @author mac  *  */
end_comment

begin_class
specifier|public
class|class
name|ReasonersOnlineTest
extends|extends
name|StanbolTestBase
block|{
comment|//    private final String NS_rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#";
comment|//    private final String NS_rdfs="http://www.w3.org/2000/01/rdf-schema#";
specifier|private
specifier|final
name|String
name|FOAF
init|=
literal|"http://xmlns.com/foaf/0.1/"
decl_stmt|;
comment|/**      * homepage      * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testHomepage
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|executor
operator|.
name|execute
argument_list|(
name|this
operator|.
name|builder
operator|.
name|buildGetRequest
argument_list|(
literal|"/reasoners"
argument_list|)
operator|.
name|withHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/html"
argument_list|)
argument_list|)
operator|.
name|assertStatus
argument_list|(
literal|200
argument_list|)
operator|.
name|assertContentType
argument_list|(
literal|"text/html"
argument_list|)
operator|.
name|assertContentContains
argument_list|(
literal|"Administrators can enable, disable and deploy reasoning services using t"
argument_list|)
operator|.
name|assertContentRegexp
argument_list|(
literal|"stylesheet.*stanbol.css"
argument_list|,
literal|"<title.*[Ss]tanbol"
argument_list|)
expr_stmt|;
block|}
comment|/**      * RDFS + CLASSIFY + text/html      *       * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testServiceOnlineRdfsClassifyFoafHtml
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|executor
operator|.
name|execute
argument_list|(
name|this
operator|.
name|builder
operator|.
name|buildGetRequest
argument_list|(
literal|"/reasoners/rdfs/classify"
argument_list|,
literal|"url"
argument_list|,
name|FOAF
argument_list|)
operator|.
name|withHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/html"
argument_list|)
argument_list|)
operator|.
name|assertStatus
argument_list|(
literal|200
argument_list|)
operator|.
name|assertContentType
argument_list|(
literal|"text/html"
argument_list|)
operator|.
name|assertContentContains
argument_list|(
literal|"http://xmlns.com/foaf/0.1/family_name"
argument_list|,
literal|"http://xmlns.com/foaf/0.1/depicts"
argument_list|,
literal|"http://xmlns.com/foaf/0.1/gender"
argument_list|,
literal|"http://purl.org/dc/elements/1.1/title"
argument_list|)
expr_stmt|;
block|}
comment|/**      * OWL + CLASSIFY + text/html      *       * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testServiceOnlineOwlClassifyFoafHtml
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|executor
operator|.
name|execute
argument_list|(
name|this
operator|.
name|builder
operator|.
name|buildGetRequest
argument_list|(
literal|"/reasoners/owl/classify"
argument_list|,
literal|"url"
argument_list|,
name|FOAF
argument_list|)
operator|.
name|withHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/html"
argument_list|)
argument_list|)
operator|.
name|assertStatus
argument_list|(
literal|200
argument_list|)
operator|.
name|assertContentType
argument_list|(
literal|"text/html"
argument_list|)
operator|.
name|assertContentContains
argument_list|(
literal|"http://xmlns.com/foaf/0.1/family_name"
argument_list|,
literal|"http://xmlns.com/foaf/0.1/depicts"
argument_list|,
literal|"http://xmlns.com/foaf/0.1/gender"
argument_list|,
literal|"http://purl.org/dc/elements/1.1/title"
argument_list|)
expr_stmt|;
block|}
comment|/**      * RDFS + ENRICH + text/n3      *       * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testServiceOnlineRdfsClassifyFoafN3
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|executor
operator|.
name|execute
argument_list|(
name|this
operator|.
name|builder
operator|.
name|buildGetRequest
argument_list|(
literal|"/reasoners/rdfs/classify"
argument_list|,
literal|"url"
argument_list|,
name|FOAF
argument_list|)
operator|.
name|withHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/n3"
argument_list|)
argument_list|)
operator|.
name|assertStatus
argument_list|(
literal|200
argument_list|)
operator|.
name|assertContentType
argument_list|(
literal|"text/n3"
argument_list|)
operator|.
name|assertContentContains
argument_list|(
literal|"http://xmlns.com/foaf/0.1/family_name"
argument_list|,
literal|"http://xmlns.com/foaf/0.1/depicts"
argument_list|,
literal|"http://xmlns.com/foaf/0.1/gender"
argument_list|,
literal|"http://purl.org/dc/elements/1.1/title"
argument_list|)
expr_stmt|;
block|}
comment|/**      * RDFS + ENRICH + application/rdf+xml      *       * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testServiceOnlineRdfsEnrichFoafRDFXML
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|executor
operator|.
name|execute
argument_list|(
name|this
operator|.
name|builder
operator|.
name|buildGetRequest
argument_list|(
literal|"/reasoners/rdfs/enrich"
argument_list|,
literal|"url"
argument_list|,
name|FOAF
argument_list|)
operator|.
name|withHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"application/rdf+xml"
argument_list|)
argument_list|)
operator|.
name|assertStatus
argument_list|(
literal|200
argument_list|)
operator|.
name|assertContentType
argument_list|(
literal|"application/rdf+xml"
argument_list|)
operator|.
name|assertContentContains
argument_list|(
literal|"rdf:RDF"
argument_list|,
literal|"rdf:about=\"http://purl.org/dc/elements/1.1/description"
argument_list|)
expr_stmt|;
block|}
comment|/**      * RDFS + CLASSIFY + application/turtle      *       * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testServiceOnlineRdfsClassifyFoafTurtle
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|executor
operator|.
name|execute
argument_list|(
name|this
operator|.
name|builder
operator|.
name|buildGetRequest
argument_list|(
literal|"/reasoners/rdfs/classify"
argument_list|,
literal|"url"
argument_list|,
name|FOAF
argument_list|)
operator|.
name|withHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"application/turtle"
argument_list|)
argument_list|)
operator|.
name|assertStatus
argument_list|(
literal|200
argument_list|)
operator|.
name|assertContentType
argument_list|(
literal|"application/turtle"
argument_list|)
operator|.
name|assertContentContains
argument_list|(
literal|"<http://xmlns.com/foaf/0.1/family_name>"
argument_list|,
literal|"<http://xmlns.com/foaf/0.1/depicts>"
argument_list|,
literal|"<http://xmlns.com/foaf/0.1/gender>"
argument_list|,
literal|"<http://purl.org/dc/elements/1.1/title>"
argument_list|,
literal|" a "
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

