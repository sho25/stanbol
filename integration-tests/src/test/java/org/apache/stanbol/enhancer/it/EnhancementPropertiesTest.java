begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements. See the NOTICE file distributed with this  * work for additional information regarding copyright ownership. The ASF  * licenses this file to You under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|it
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/** Test that the default chain is called by requesting the "/enhancer" endpoint. */
end_comment

begin_class
specifier|public
class|class
name|EnhancementPropertiesTest
extends|extends
name|EnhancerTestBase
block|{
specifier|private
specifier|static
specifier|final
name|Charset
name|UTF8
init|=
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF8"
argument_list|)
decl_stmt|;
specifier|public
name|EnhancementPropertiesTest
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|EnhancementPropertiesTest
parameter_list|(
name|String
name|endpoint
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|EnhancementPropertiesTest
parameter_list|(
name|String
name|endpoint
parameter_list|,
name|String
modifier|...
name|assertEngines
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|,
name|assertEngines
argument_list|)
expr_stmt|;
block|}
comment|/**      * This tests if request scoped enhancement properties are correctly processed      * by using the<code>enhancer.engines.dereference.languages</code> amd       *<code>enhancer.engines.dereference.fields</code> supported by the       * Dereference engine (<a href="https://issues.apache.org/jira/browse/STANBOL-1287">      * STANBOL-1287</a>)      * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testDereferenceEngineProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|StringBuilder
name|ehProps
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"?"
argument_list|)
decl_stmt|;
comment|//arabic and russian labels
name|ehProps
operator|.
name|append
argument_list|(
literal|"enhancer.engines.dereference.languages"
argument_list|)
operator|.
name|append
argument_list|(
literal|'='
argument_list|)
operator|.
name|append
argument_list|(
literal|"ar"
argument_list|)
operator|.
name|append
argument_list|(
literal|'&'
argument_list|)
expr_stmt|;
name|ehProps
operator|.
name|append
argument_list|(
literal|"enhancer.engines.dereference.languages"
argument_list|)
operator|.
name|append
argument_list|(
literal|'='
argument_list|)
operator|.
name|append
argument_list|(
literal|"ru"
argument_list|)
operator|.
name|append
argument_list|(
literal|'&'
argument_list|)
expr_stmt|;
comment|//only rdfs:label and foaf:depiction (also validates ns prefix support)
name|ehProps
operator|.
name|append
argument_list|(
literal|"enhancer.engines.dereference.fields"
argument_list|)
operator|.
name|append
argument_list|(
literal|'='
argument_list|)
operator|.
name|append
argument_list|(
literal|"rdfs:label"
argument_list|)
operator|.
name|append
argument_list|(
literal|'&'
argument_list|)
expr_stmt|;
name|ehProps
operator|.
name|append
argument_list|(
literal|"enhancer.engines.dereference.fields"
argument_list|)
operator|.
name|append
argument_list|(
literal|'='
argument_list|)
operator|.
name|append
argument_list|(
literal|"foaf:depiction"
argument_list|)
expr_stmt|;
name|executor
operator|.
name|execute
argument_list|(
name|builder
operator|.
name|buildPostRequest
argument_list|(
name|getEndpoint
argument_list|()
operator|+
name|ehProps
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|withHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/rdf+nt"
argument_list|)
operator|.
name|withContent
argument_list|(
literal|"The Stanbol enhancer can detect famous cities such as Paris and people such as Bob Marley."
argument_list|)
argument_list|)
operator|.
name|assertStatus
argument_list|(
literal|200
argument_list|)
operator|.
name|assertCharset
argument_list|(
name|UTF8
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|assertContentRegexp
argument_list|(
comment|//This expects Paris and Bob marley to be found
literal|"http://fise.iks-project.eu/ontology/entity-reference.*http://dbpedia.org/resource/Paris"
argument_list|,
literal|"http://fise.iks-project.eu/ontology/entity-reference.*http://dbpedia.org/resource/Bob_Marley"
argument_list|,
comment|//the Arabic and Russian label of paris
literal|"http://www.w3.org/2000/01/rdf-schema#label.*\"باريس\"@ar"
argument_list|,
literal|"http://www.w3.org/2000/01/rdf-schema#label.*\"Париж\"@ru"
argument_list|,
comment|//the Arabic and Russian label of Bob Marley
literal|"http://www.w3.org/2000/01/rdf-schema#label.*\"بوب مارلي\"@ar"
argument_list|,
literal|"http://www.w3.org/2000/01/rdf-schema#label.*\"Марли, Боб\"@ru"
argument_list|,
comment|//foaf:depiction triples for Paris and Bob_Marley
literal|"http://dbpedia.org/resource/Paris.*http://xmlns.com/foaf/0.1/depiction.*http://upload.wikimedia.org/wikipedia/.*"
argument_list|,
literal|"http://dbpedia.org/resource/Bob_Marley.*http://xmlns.com/foaf/0.1/depiction.*http://upload.wikimedia.org/wikipedia/.*"
argument_list|)
operator|.
name|assertContentRegexp
argument_list|(
literal|false
argument_list|,
comment|//we do not expect German nor Italian labels
literal|"http://www.w3.org/2000/01/rdf-schema#label.*\"Paris\"@de"
argument_list|,
literal|"http://www.w3.org/2000/01/rdf-schema#label.*\"Bob Marley\"@de"
argument_list|,
literal|"http://www.w3.org/2000/01/rdf-schema#label.*\"Parigi\"@it"
argument_list|,
literal|"http://www.w3.org/2000/01/rdf-schema#label.*\"Bob Marley\"@it"
argument_list|,
comment|//no rdf:type triples for Paris and Bob_Marley
literal|"http://dbpedia.org/resource/Paris.*http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
argument_list|,
literal|"http://dbpedia.org/resource/Bob_Marley.*http://www.w3.org/1999/02/22-rdf-syntax-ns#type"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

