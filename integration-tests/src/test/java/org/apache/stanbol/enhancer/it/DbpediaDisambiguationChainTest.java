begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements. See the NOTICE file distributed with this  * work for additional information regarding copyright ownership. The ASF  * licenses this file to You under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|it
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|testing
operator|.
name|http
operator|.
name|RequestExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/** https://issues.apache.org/jira/browse/STANBOL-943: Add integration-test for the disambiguation-mlt engine */
end_comment

begin_class
specifier|public
class|class
name|DbpediaDisambiguationChainTest
extends|extends
name|EnhancerTestBase
block|{
specifier|private
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|DbpediaDisambiguationChainTest
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/* This chains included for testing          - NLP processing           - EntityLinking configured for disambiguation           - Disambiguation MLT     */
specifier|public
name|DbpediaDisambiguationChainTest
parameter_list|()
block|{
name|super
argument_list|(
name|getChainEndpoint
argument_list|(
literal|"dbpedia-disambiguation"
argument_list|)
argument_list|,
literal|"langdetect"
argument_list|,
literal|" LanguageDetectionEnhancementEngine"
argument_list|,
literal|"opennlp-sentence"
argument_list|,
literal|" OpenNlpSentenceDetectionEngine"
argument_list|,
literal|"opennlp-token"
argument_list|,
literal|" OpenNlpTokenizerEngine"
argument_list|,
literal|"opennlp-pos"
argument_list|,
literal|"OpenNlpPosTaggingEngine"
argument_list|,
literal|"opennlp-chunker"
argument_list|,
literal|"OpenNlpChunkingEngine"
argument_list|,
literal|"dbpedia-disamb-linking"
argument_list|,
literal|"EntityLinkingEngine"
argument_list|,
literal|"disambiguation-mlt"
argument_list|,
literal|"DisambiguatorEngine"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSimpleEnhancement
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|content
init|=
literal|"The Stanbol enhancer can detect famous cities such as Paris and people such as Bob Marley."
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Testing Disambiguation-MLT with sentence: "
operator|+
name|content
argument_list|)
expr_stmt|;
name|executor
operator|.
name|execute
argument_list|(
name|builder
operator|.
name|buildPostRequest
argument_list|(
name|getEndpoint
argument_list|()
argument_list|)
operator|.
name|withHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/rdf+nt"
argument_list|)
operator|.
name|withContent
argument_list|(
name|content
argument_list|)
argument_list|)
operator|.
name|assertStatus
argument_list|(
literal|200
argument_list|)
operator|.
name|assertContentType
argument_list|(
literal|"text/rdf+nt"
argument_list|)
operator|.
name|assertContentRegexp
argument_list|(
comment|// Detect the language
literal|"http://purl.org/dc/terms/creator.*LanguageDetectionEnhancementEngine"
argument_list|,
literal|"http://purl.org/dc/terms/language.*en"
argument_list|,
comment|// EntityLinkingEngine
literal|"http://purl.org/dc/terms/creator.*EntityLinkingEngine"
argument_list|,
comment|// Suggestions for possible ambiguations
literal|"http://fise.iks-project.eu/ontology/entity-reference.*http://dbpedia.org/resource/Paris_M%C3%A9tro"
argument_list|,
literal|"http://fise.iks-project.eu/ontology/entity-reference.*http://dbpedia.org/resource/Bob_Marley_&_The_Wailers"
argument_list|,
literal|"http://fise.iks-project.eu/ontology/entity-reference.*http://dbpedia.org/resource/Salon_\\(Paris\\)"
argument_list|,
literal|"http://fise.iks-project.eu/ontology/entity-reference.*http://dbpedia.org/resource/Paris"
argument_list|,
literal|"http://fise.iks-project.eu/ontology/entity-reference.*http://dbpedia.org/resource/Bob_Marley"
argument_list|,
literal|"http://fise.iks-project.eu/ontology/entity-reference.*http://dbpedia.org/resource/Paris_Opera"
argument_list|,
literal|"http://fise.iks-project.eu/ontology/entity-reference.*http://dbpedia.org/resource/Paris_Commune"
argument_list|,
literal|"http://fise.iks-project.eu/ontology/entity-reference.*http://dbpedia.org/resource/Paris_Masters"
argument_list|,
literal|"http://fise.iks-project.eu/ontology/entity-reference.*http://dbpedia.org/resource/Paris_Hilton"
argument_list|,
comment|// Selected text by disambiguation-mlt engine
literal|"http://fise.iks-project.eu/ontology/selected-text.*Bob Marley"
argument_list|,
literal|"http://fise.iks-project.eu/ontology/selected-text.*Paris"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

