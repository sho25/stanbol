begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|engines
operator|.
name|lucenefstlinking
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|AtomicReaderContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|ReaderUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queries
operator|.
name|function
operator|.
name|FunctionValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queries
operator|.
name|function
operator|.
name|ValueSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import

begin_comment
comment|/** See LUCENE-4541 or {@link org.apache.solr.response.transform.ValueSourceAugmenter}. */
end_comment

begin_class
specifier|public
class|class
name|ValueSourceAccessor
block|{
comment|// implement FunctionValues ?
specifier|private
specifier|final
name|List
argument_list|<
name|AtomicReaderContext
argument_list|>
name|readerContexts
decl_stmt|;
specifier|private
specifier|final
name|FunctionValues
index|[]
name|docValuesArr
decl_stmt|;
specifier|private
specifier|final
name|ValueSource
name|valueSource
decl_stmt|;
specifier|private
specifier|final
name|Map
name|fContext
decl_stmt|;
specifier|private
name|int
name|localId
decl_stmt|;
specifier|private
name|FunctionValues
name|values
decl_stmt|;
specifier|public
name|ValueSourceAccessor
parameter_list|(
name|IndexSearcher
name|searcher
parameter_list|,
name|ValueSource
name|valueSource
parameter_list|)
block|{
name|readerContexts
operator|=
name|searcher
operator|.
name|getIndexReader
argument_list|()
operator|.
name|leaves
argument_list|()
expr_stmt|;
name|this
operator|.
name|valueSource
operator|=
name|valueSource
expr_stmt|;
name|docValuesArr
operator|=
operator|new
name|FunctionValues
index|[
name|readerContexts
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
name|fContext
operator|=
name|ValueSource
operator|.
name|newContext
argument_list|(
name|searcher
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setState
parameter_list|(
name|int
name|docid
parameter_list|)
block|{
name|int
name|idx
init|=
name|ReaderUtil
operator|.
name|subIndex
argument_list|(
name|docid
argument_list|,
name|readerContexts
argument_list|)
decl_stmt|;
name|AtomicReaderContext
name|rcontext
init|=
name|readerContexts
operator|.
name|get
argument_list|(
name|idx
argument_list|)
decl_stmt|;
name|values
operator|=
name|docValuesArr
index|[
name|idx
index|]
expr_stmt|;
if|if
condition|(
name|values
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|docValuesArr
index|[
name|idx
index|]
operator|=
name|values
operator|=
name|valueSource
operator|.
name|getValues
argument_list|(
name|fContext
argument_list|,
name|rcontext
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SolrException
argument_list|(
name|SolrException
operator|.
name|ErrorCode
operator|.
name|SERVER_ERROR
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
name|localId
operator|=
name|docid
operator|-
name|rcontext
operator|.
name|docBase
expr_stmt|;
block|}
specifier|public
name|Object
name|objectVal
parameter_list|(
name|int
name|docid
parameter_list|)
block|{
name|setState
argument_list|(
name|docid
argument_list|)
expr_stmt|;
return|return
name|values
operator|.
name|objectVal
argument_list|(
name|localId
argument_list|)
return|;
block|}
block|}
end_class

end_unit

