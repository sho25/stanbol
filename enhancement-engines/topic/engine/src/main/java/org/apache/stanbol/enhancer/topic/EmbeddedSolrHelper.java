begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|topic
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|EmbeddedSolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|CoreContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|CoreDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrCore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_comment
comment|/**  * Helper class to build an embedded Solr server with a configuration files looked-up from the classpath. This  * helper is both useful in real service usage (for Cross Validation) and in tests.  */
end_comment

begin_class
specifier|public
class|class
name|EmbeddedSolrHelper
block|{
comment|/**      * Create a single core Solr server with it's own folder hierarchy.      */
specifier|public
specifier|static
name|EmbeddedSolrServer
name|makeEmbeddedSolrServer
parameter_list|(
name|File
name|rootFolder
parameter_list|,
name|String
name|solrServerId
parameter_list|,
name|String
name|coreId
parameter_list|,
name|String
name|configName
parameter_list|)
throws|throws
name|IOException
throws|,
name|ParserConfigurationException
throws|,
name|SAXException
block|{
name|File
name|solrFolder
init|=
operator|new
name|File
argument_list|(
name|rootFolder
argument_list|,
name|solrServerId
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|solrFolder
argument_list|)
expr_stmt|;
name|solrFolder
operator|.
name|mkdir
argument_list|()
expr_stmt|;
comment|// solr conf file
name|File
name|solrFile
init|=
operator|new
name|File
argument_list|(
name|solrFolder
argument_list|,
literal|"solr.xml"
argument_list|)
decl_stmt|;
name|InputStream
name|is
init|=
name|EmbeddedSolrHelper
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/solr.xml"
argument_list|)
decl_stmt|;
if|if
condition|(
name|is
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"missing test solr.xml file"
argument_list|)
throw|;
block|}
name|IOUtils
operator|.
name|copy
argument_list|(
name|is
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|solrFile
argument_list|)
argument_list|)
expr_stmt|;
comment|// solr conf folder with schema
name|File
name|solrCoreFolder
init|=
operator|new
name|File
argument_list|(
name|solrFolder
argument_list|,
name|coreId
argument_list|)
decl_stmt|;
name|solrCoreFolder
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|File
name|solrConfFolder
init|=
operator|new
name|File
argument_list|(
name|solrCoreFolder
argument_list|,
literal|"conf"
argument_list|)
decl_stmt|;
name|solrConfFolder
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|File
name|schemaFile
init|=
operator|new
name|File
argument_list|(
name|solrConfFolder
argument_list|,
literal|"schema.xml"
argument_list|)
decl_stmt|;
name|is
operator|=
name|EmbeddedSolrHelper
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/"
operator|+
name|configName
operator|+
literal|"/conf/schema.xml"
argument_list|)
expr_stmt|;
if|if
condition|(
name|is
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"missing test schema.xml file"
argument_list|)
throw|;
block|}
name|IOUtils
operator|.
name|copy
argument_list|(
name|is
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|schemaFile
argument_list|)
argument_list|)
expr_stmt|;
name|File
name|solrConfigFile
init|=
operator|new
name|File
argument_list|(
name|solrConfFolder
argument_list|,
literal|"solrconfig.xml"
argument_list|)
decl_stmt|;
name|is
operator|=
name|EmbeddedSolrHelper
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/"
operator|+
name|configName
operator|+
literal|"/conf/solrconfig.xml"
argument_list|)
expr_stmt|;
if|if
condition|(
name|is
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"missing test solrconfig.xml file"
argument_list|)
throw|;
block|}
name|IOUtils
operator|.
name|copy
argument_list|(
name|is
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|solrConfigFile
argument_list|)
argument_list|)
expr_stmt|;
comment|// create the embedded server
name|CoreContainer
name|coreContainer
init|=
operator|new
name|CoreContainer
argument_list|(
name|solrFolder
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|solrFile
argument_list|)
decl_stmt|;
name|CoreDescriptor
name|coreDescriptor
init|=
operator|new
name|CoreDescriptor
argument_list|(
name|coreContainer
argument_list|,
name|coreId
argument_list|,
name|solrCoreFolder
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
decl_stmt|;
name|SolrCore
name|core
init|=
name|coreContainer
operator|.
name|create
argument_list|(
name|coreDescriptor
argument_list|)
decl_stmt|;
name|coreContainer
operator|.
name|register
argument_list|(
name|coreId
argument_list|,
name|core
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
operator|new
name|EmbeddedSolrServer
argument_list|(
name|coreContainer
argument_list|,
name|coreId
argument_list|)
return|;
block|}
block|}
end_class

end_unit

