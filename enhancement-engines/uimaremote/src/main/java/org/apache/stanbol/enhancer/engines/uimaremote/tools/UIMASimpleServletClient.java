begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|engines
operator|.
name|uimaremote
operator|.
name|tools
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|caslight
operator|.
name|FeatureStructure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * This class provides a client for an UIMA Simple Servlet, accessed trough HTTP Rest.  *  * @author Mihály Héder<mihaly.heder@sztaki.hu>  */
end_comment

begin_class
specifier|public
class|class
name|UIMASimpleServletClient
block|{
name|UIMAServletClient
name|usc
decl_stmt|;
name|String
name|uri
decl_stmt|;
name|String
name|sourceName
decl_stmt|;
specifier|final
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|public
name|UIMASimpleServletClient
parameter_list|()
block|{
name|this
operator|.
name|usc
operator|=
operator|new
name|UIMAServletClient
argument_list|()
expr_stmt|;
block|}
specifier|public
name|String
name|getUri
parameter_list|()
block|{
return|return
name|uri
return|;
block|}
specifier|public
name|void
name|setUri
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
block|}
comment|/**      * Processes an String      * @param xec      */
specifier|public
name|List
argument_list|<
name|FeatureStructure
argument_list|>
name|process
parameter_list|(
name|String
name|sofaString
parameter_list|)
block|{
name|List
argument_list|<
name|FeatureStructure
argument_list|>
name|fsList
init|=
name|usc
operator|.
name|getFSList
argument_list|(
name|uri
argument_list|,
name|sourceName
argument_list|,
name|sofaString
argument_list|)
decl_stmt|;
comment|//the FeatureSetLists is a Map so this move simply deletes the old list:
return|return
name|fsList
return|;
block|}
comment|/**      * Sets the source name of this processor      * @param sourceName      */
specifier|public
name|void
name|setSourceName
parameter_list|(
name|String
name|sourceName
parameter_list|)
block|{
name|this
operator|.
name|sourceName
operator|=
name|sourceName
expr_stmt|;
block|}
comment|/**      * Returns the source name of this processor      * @return      */
specifier|public
name|String
name|getSourceName
parameter_list|()
block|{
return|return
name|sourceName
return|;
block|}
block|}
end_class

end_unit

