begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|engines
operator|.
name|entitycoreference
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|Properties
operator|.
name|RDFS_LABEL
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|servicesapi
operator|.
name|rdf
operator|.
name|Properties
operator|.
name|RDF_TYPE
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|core
operator|.
name|model
operator|.
name|EntityImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|core
operator|.
name|model
operator|.
name|InMemoryValueFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|core
operator|.
name|query
operator|.
name|DefaultQueryFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|core
operator|.
name|query
operator|.
name|QueryResultListImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|mapping
operator|.
name|FieldMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|Representation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|query
operator|.
name|FieldQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|query
operator|.
name|FieldQueryFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|query
operator|.
name|QueryResultList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|query
operator|.
name|TextConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|site
operator|.
name|Site
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|site
operator|.
name|SiteConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|entityhub
operator|.
name|servicesapi
operator|.
name|site
operator|.
name|SiteException
import|;
end_import

begin_comment
comment|/**  *   * @author Cristian Petroaca  *  */
end_comment

begin_class
specifier|public
class|class
name|MockEntityCorefDbpediaSite
implements|implements
name|Site
block|{
specifier|public
specifier|static
specifier|final
name|String
name|SITE_ID
init|=
literal|"entity-coref-dbpedia"
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
name|entities
decl_stmt|;
specifier|public
name|MockEntityCorefDbpediaSite
parameter_list|()
block|{
name|entities
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|InMemoryValueFactory
name|valueFactory
init|=
name|InMemoryValueFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|Representation
name|merkelRep
init|=
name|valueFactory
operator|.
name|createRepresentation
argument_list|(
literal|"http://dbpedia.org/page/Angela_Merkel"
argument_list|)
decl_stmt|;
name|merkelRep
operator|.
name|set
argument_list|(
literal|"http://dbpedia.org/ontology/country"
argument_list|,
literal|"http://dbpedia.org/resource/Germany"
argument_list|)
expr_stmt|;
name|merkelRep
operator|.
name|set
argument_list|(
name|RDF_TYPE
operator|.
name|getUnicodeString
argument_list|()
argument_list|,
literal|"http://dbpedia.org/class/yago/Politician110451263"
argument_list|)
expr_stmt|;
name|merkelRep
operator|.
name|set
argument_list|(
name|RDFS_LABEL
operator|.
name|getUnicodeString
argument_list|()
argument_list|,
name|valueFactory
operator|.
name|createText
argument_list|(
literal|"Angela Merkel"
argument_list|,
literal|"en"
argument_list|)
argument_list|)
expr_stmt|;
name|entities
operator|.
name|put
argument_list|(
literal|"http://dbpedia.org/page/Angela_Merkel"
argument_list|,
operator|new
name|EntityImpl
argument_list|(
name|SITE_ID
argument_list|,
name|merkelRep
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Representation
name|politicianRep
init|=
name|valueFactory
operator|.
name|createRepresentation
argument_list|(
literal|"http://dbpedia.org/class/yago/Politician110451263"
argument_list|)
decl_stmt|;
name|politicianRep
operator|.
name|set
argument_list|(
name|RDFS_LABEL
operator|.
name|getUnicodeString
argument_list|()
argument_list|,
name|valueFactory
operator|.
name|createText
argument_list|(
literal|"politician"
argument_list|,
literal|"en"
argument_list|)
argument_list|)
expr_stmt|;
name|entities
operator|.
name|put
argument_list|(
literal|"http://dbpedia.org/class/yago/Politician110451263"
argument_list|,
operator|new
name|EntityImpl
argument_list|(
name|SITE_ID
argument_list|,
name|politicianRep
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|QueryResultList
argument_list|<
name|String
argument_list|>
name|findReferences
parameter_list|(
name|FieldQuery
name|query
parameter_list|)
throws|throws
name|SiteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|QueryResultList
argument_list|<
name|Representation
argument_list|>
name|find
parameter_list|(
name|FieldQuery
name|query
parameter_list|)
throws|throws
name|SiteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
specifier|public
name|QueryResultList
argument_list|<
name|Entity
argument_list|>
name|findEntities
parameter_list|(
name|FieldQuery
name|query
parameter_list|)
throws|throws
name|SiteException
block|{
name|TextConstraint
name|labelConstraint
init|=
operator|(
name|TextConstraint
operator|)
name|query
operator|.
name|getConstraint
argument_list|(
name|RDFS_LABEL
operator|.
name|getUnicodeString
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Entity
name|entity
range|:
name|entities
operator|.
name|values
argument_list|()
control|)
block|{
name|Iterator
argument_list|<
name|Object
argument_list|>
name|entityAttributes
init|=
name|entity
operator|.
name|getRepresentation
argument_list|()
operator|.
name|get
argument_list|(
name|RDFS_LABEL
operator|.
name|getUnicodeString
argument_list|()
argument_list|)
decl_stmt|;
while|while
condition|(
name|entityAttributes
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Text
name|entityAttribute
init|=
operator|(
name|Text
operator|)
name|entityAttributes
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|entityAttribute
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|labelConstraint
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
block|{
name|Collection
argument_list|<
name|Entity
argument_list|>
name|retEntities
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|retEntities
operator|.
name|add
argument_list|(
name|entity
argument_list|)
expr_stmt|;
return|return
operator|new
name|QueryResultListImpl
argument_list|<
name|Entity
argument_list|>
argument_list|(
literal|null
argument_list|,
name|retEntities
argument_list|,
name|Entity
operator|.
name|class
argument_list|)
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Entity
name|getEntity
parameter_list|(
name|String
name|id
parameter_list|)
throws|throws
name|SiteException
block|{
return|return
name|entities
operator|.
name|get
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|InputStream
name|getContent
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|contentType
parameter_list|)
throws|throws
name|SiteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|FieldMapper
name|getFieldMapper
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|FieldQueryFactory
name|getQueryFactory
parameter_list|()
block|{
return|return
name|DefaultQueryFactory
operator|.
name|getInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|SiteConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|supportsLocalMode
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|supportsSearch
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

