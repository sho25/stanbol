begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|engines
operator|.
name|tika
operator|.
name|metadata
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|commons
operator|.
name|rdf
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|ontologies
operator|.
name|RDF
import|;
end_import

begin_comment
comment|/**  * A {@link ConstantMapping} for the property {@link RDF#type}  * @author Rupert Westenthaler  *  */
end_comment

begin_class
specifier|public
class|class
name|TypeMapping
extends|extends
name|ConstantMapping
block|{
specifier|public
name|TypeMapping
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|this
argument_list|(
operator|new
name|IRI
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TypeMapping
parameter_list|(
name|IRI
modifier|...
name|types
parameter_list|)
block|{
name|super
argument_list|(
name|RDF
operator|.
name|type
argument_list|,
name|types
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

