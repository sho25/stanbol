begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|engines
operator|.
name|dbpspotlight
operator|.
name|model
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|enhancer
operator|.
name|engines
operator|.
name|dbpspotlight
operator|.
name|utils
operator|.
name|XMLParser
operator|.
name|getElementsByTagName
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|clerezza
operator|.
name|rdf
operator|.
name|core
operator|.
name|UriRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_comment
comment|//import org.apache.clerezza.rdf.core.Resource;
end_comment

begin_comment
comment|/**  * Stores the candidate ressources given by DBPedia Spotlight Candidates.  *   * @author<a href="mailto:iavor.jelev@babelmonkeys.com">Iavor Jelev</a>  */
end_comment

begin_class
specifier|public
class|class
name|CandidateResource
block|{
specifier|public
name|String
name|label
decl_stmt|;
specifier|public
name|String
name|localName
decl_stmt|;
specifier|public
name|double
name|contextualScore
decl_stmt|;
specifier|public
name|double
name|percentageOfSecondRank
decl_stmt|;
specifier|public
name|double
name|support
decl_stmt|;
specifier|public
name|double
name|priorScore
decl_stmt|;
specifier|public
name|double
name|finalScore
decl_stmt|;
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"[label=%s, uri=%s, contextualScore=%d, percentageOfSecondRank=%d, contextualScore=%d, "
operator|+
literal|"percentageOfSecondRank=%d, contextualScore=%d]"
argument_list|,
name|label
argument_list|,
name|localName
argument_list|,
name|contextualScore
argument_list|,
name|percentageOfSecondRank
argument_list|,
name|support
argument_list|,
name|priorScore
argument_list|,
name|finalScore
argument_list|)
return|;
block|}
specifier|public
name|UriRef
name|getUri
parameter_list|()
block|{
return|return
operator|new
name|UriRef
argument_list|(
operator|new
name|StringBuilder
argument_list|(
literal|"http://dbpedia.org/resource/"
argument_list|)
operator|.
name|append
argument_list|(
name|localName
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
comment|/** 	 * This method creates the Collection of surface forms, which the method 	 *<code>createEnhancement</code> adds to the meta data of the content item 	 * as TextAnnotations. 	 *  	 * @param nList 	 *            NodeList of all Resources contained in the XML response from 	 *            DBpedia Spotlight 	 * @return a Collection<DBPSLSurfaceForm> with all annotations 	 */
specifier|public
specifier|static
name|Collection
argument_list|<
name|SurfaceForm
argument_list|>
name|parseCandidates
parameter_list|(
name|Document
name|xmlDoc
parameter_list|)
block|{
name|NodeList
name|nList
init|=
name|getElementsByTagName
argument_list|(
name|xmlDoc
argument_list|,
literal|"surfaceForm"
argument_list|)
decl_stmt|;
name|Collection
argument_list|<
name|SurfaceForm
argument_list|>
name|dbpslAnnos
init|=
operator|new
name|HashSet
argument_list|<
name|SurfaceForm
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|temp
init|=
literal|0
init|;
name|temp
operator|<
name|nList
operator|.
name|getLength
argument_list|()
condition|;
name|temp
operator|++
control|)
block|{
name|Element
name|node
init|=
operator|(
name|Element
operator|)
name|nList
operator|.
name|item
argument_list|(
name|temp
argument_list|)
decl_stmt|;
name|SurfaceForm
name|dbpslann
init|=
name|SurfaceForm
operator|.
name|parseSerfaceForm
argument_list|(
name|node
argument_list|)
decl_stmt|;
name|NodeList
name|resources
init|=
name|node
operator|.
name|getChildNodes
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|count
init|=
literal|0
init|;
name|count
operator|<
name|resources
operator|.
name|getLength
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|Node
name|n
init|=
name|resources
operator|.
name|item
argument_list|(
name|count
argument_list|)
decl_stmt|;
if|if
condition|(
name|n
operator|instanceof
name|Element
condition|)
block|{
name|Element
name|r
init|=
operator|(
name|Element
operator|)
name|n
decl_stmt|;
name|CandidateResource
name|resource
init|=
operator|new
name|CandidateResource
argument_list|()
decl_stmt|;
name|resource
operator|.
name|label
operator|=
name|r
operator|.
name|getAttribute
argument_list|(
literal|"label"
argument_list|)
expr_stmt|;
name|resource
operator|.
name|localName
operator|=
name|r
operator|.
name|getAttribute
argument_list|(
literal|"uri"
argument_list|)
expr_stmt|;
name|resource
operator|.
name|contextualScore
operator|=
operator|(
operator|new
name|Double
argument_list|(
name|r
operator|.
name|getAttribute
argument_list|(
literal|"contextualScore"
argument_list|)
argument_list|)
operator|)
operator|.
name|doubleValue
argument_list|()
expr_stmt|;
name|resource
operator|.
name|percentageOfSecondRank
operator|=
operator|(
operator|new
name|Double
argument_list|(
name|r
operator|.
name|getAttribute
argument_list|(
literal|"percentageOfSecondRank"
argument_list|)
argument_list|)
operator|)
operator|.
name|doubleValue
argument_list|()
expr_stmt|;
name|resource
operator|.
name|support
operator|=
operator|(
operator|new
name|Double
argument_list|(
name|r
operator|.
name|getAttribute
argument_list|(
literal|"support"
argument_list|)
argument_list|)
operator|)
operator|.
name|doubleValue
argument_list|()
expr_stmt|;
name|resource
operator|.
name|priorScore
operator|=
operator|(
operator|new
name|Double
argument_list|(
name|r
operator|.
name|getAttribute
argument_list|(
literal|"priorScore"
argument_list|)
argument_list|)
operator|)
operator|.
name|doubleValue
argument_list|()
expr_stmt|;
name|resource
operator|.
name|finalScore
operator|=
operator|(
operator|new
name|Double
argument_list|(
name|r
operator|.
name|getAttribute
argument_list|(
literal|"finalScore"
argument_list|)
argument_list|)
operator|)
operator|.
name|doubleValue
argument_list|()
expr_stmt|;
name|dbpslann
operator|.
name|resources
operator|.
name|add
argument_list|(
name|resource
argument_list|)
expr_stmt|;
block|}
comment|// Element r = (Element) resources.item(count);
block|}
name|dbpslAnnos
operator|.
name|add
argument_list|(
name|dbpslann
argument_list|)
expr_stmt|;
block|}
return|return
name|dbpslAnnos
return|;
block|}
block|}
end_class

end_unit

