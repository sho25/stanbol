begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|factstore
operator|.
name|model
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|jsonld
operator|.
name|JsonLd
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|jsonld
operator|.
name|JsonLdIRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|jsonld
operator|.
name|JsonLdResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|QueryTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testToQueryFromJsonLd
parameter_list|()
throws|throws
name|Exception
block|{
name|JsonLd
name|jldq
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jldq
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://iks-project.eu/ont/"
argument_list|,
literal|"iks"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|subject
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|select
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|select
operator|.
name|add
argument_list|(
literal|"person"
argument_list|)
expr_stmt|;
name|subject
operator|.
name|putProperty
argument_list|(
literal|"select"
argument_list|,
name|select
argument_list|)
expr_stmt|;
name|subject
operator|.
name|putProperty
argument_list|(
literal|"from"
argument_list|,
literal|"iks:employeeOf"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|orga
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|orga
operator|.
name|put
argument_list|(
literal|"organization"
argument_list|,
operator|new
name|JsonLdIRI
argument_list|(
literal|"http://upb.de"
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|eq
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|eq
operator|.
name|put
argument_list|(
literal|"="
argument_list|,
name|orga
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|where
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|where
operator|.
name|add
argument_list|(
name|eq
argument_list|)
expr_stmt|;
name|subject
operator|.
name|putProperty
argument_list|(
literal|"where"
argument_list|,
name|where
argument_list|)
expr_stmt|;
name|jldq
operator|.
name|put
argument_list|(
name|subject
argument_list|)
expr_stmt|;
name|Query
name|query
init|=
name|Query
operator|.
name|toQueryFromJsonLd
argument_list|(
name|jldq
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|query
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|query
operator|.
name|getFromSchemaURN
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://iks-project.eu/ont/employeeOf"
argument_list|,
name|query
operator|.
name|getFromSchemaURN
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|query
operator|.
name|getRoles
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|query
operator|.
name|getRoles
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"person"
argument_list|,
name|query
operator|.
name|getRoles
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|query
operator|.
name|getWhereClauses
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|query
operator|.
name|getWhereClauses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|WhereClause
name|wc
init|=
name|query
operator|.
name|getWhereClauses
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|wc
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CompareOperator
operator|.
name|EQ
argument_list|,
name|wc
operator|.
name|getCompareOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"organization"
argument_list|,
name|wc
operator|.
name|getComparedRole
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://upb.de"
argument_list|,
name|wc
operator|.
name|getSearchedValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testToQueryFromJsonLd2
parameter_list|()
throws|throws
name|Exception
block|{
name|JsonLd
name|jldq
init|=
operator|new
name|JsonLd
argument_list|()
decl_stmt|;
name|jldq
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://iks-project.eu/ont/"
argument_list|,
literal|"iks"
argument_list|)
expr_stmt|;
name|jldq
operator|.
name|addNamespacePrefix
argument_list|(
literal|"http://upd.de/persons/"
argument_list|,
literal|"upb"
argument_list|)
expr_stmt|;
name|JsonLdResource
name|subject
init|=
operator|new
name|JsonLdResource
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|select
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|select
operator|.
name|add
argument_list|(
literal|"person"
argument_list|)
expr_stmt|;
name|subject
operator|.
name|putProperty
argument_list|(
literal|"select"
argument_list|,
name|select
argument_list|)
expr_stmt|;
name|subject
operator|.
name|putProperty
argument_list|(
literal|"from"
argument_list|,
literal|"iks:employeeOf"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|orga
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|orga
operator|.
name|put
argument_list|(
literal|"person"
argument_list|,
operator|new
name|JsonLdIRI
argument_list|(
literal|"upb:fchrist"
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|eq
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|eq
operator|.
name|put
argument_list|(
literal|"="
argument_list|,
name|orga
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|where
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|where
operator|.
name|add
argument_list|(
name|eq
argument_list|)
expr_stmt|;
name|subject
operator|.
name|putProperty
argument_list|(
literal|"where"
argument_list|,
name|where
argument_list|)
expr_stmt|;
name|jldq
operator|.
name|put
argument_list|(
name|subject
argument_list|)
expr_stmt|;
name|Query
name|query
init|=
name|Query
operator|.
name|toQueryFromJsonLd
argument_list|(
name|jldq
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|query
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|query
operator|.
name|getFromSchemaURN
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://iks-project.eu/ont/employeeOf"
argument_list|,
name|query
operator|.
name|getFromSchemaURN
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|query
operator|.
name|getRoles
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|query
operator|.
name|getRoles
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"person"
argument_list|,
name|query
operator|.
name|getRoles
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|query
operator|.
name|getWhereClauses
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|query
operator|.
name|getWhereClauses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|WhereClause
name|wc
init|=
name|query
operator|.
name|getWhereClauses
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|wc
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CompareOperator
operator|.
name|EQ
argument_list|,
name|wc
operator|.
name|getCompareOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"person"
argument_list|,
name|wc
operator|.
name|getComparedRole
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://upd.de/persons/fchrist"
argument_list|,
name|wc
operator|.
name|getSearchedValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

