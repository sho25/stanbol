begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|factstore
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|jsonld
operator|.
name|JsonLd
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|jsonld
operator|.
name|JsonLdIRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|jsonld
operator|.
name|JsonLdResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONObject
import|;
end_import

begin_class
specifier|public
class|class
name|Query
block|{
specifier|public
specifier|static
specifier|final
name|String
name|SELECT
init|=
literal|"SELECT"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|FROM
init|=
literal|"FROM"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|WHERE
init|=
literal|"WHERE"
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|roles
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|fromSchemaURN
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|WhereClause
argument_list|>
name|whereClauses
init|=
operator|new
name|HashSet
argument_list|<
name|WhereClause
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getRoles
parameter_list|()
block|{
return|return
name|roles
return|;
block|}
specifier|public
name|String
name|getFromSchemaURN
parameter_list|()
block|{
return|return
name|fromSchemaURN
return|;
block|}
specifier|public
name|Set
argument_list|<
name|WhereClause
argument_list|>
name|getWhereClauses
parameter_list|()
block|{
return|return
name|whereClauses
return|;
block|}
specifier|public
specifier|static
name|Query
name|toQueryFromJsonLd
parameter_list|(
name|JsonLd
name|jsonLdQuery
parameter_list|)
throws|throws
name|Exception
block|{
name|Query
name|query
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|jsonLdQuery
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|jsonLdQuery
operator|.
name|getResourceSubjects
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|jsonLdQuery
operator|.
name|getResourceSubjects
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|JsonLdResource
name|subject
init|=
name|jsonLdQuery
operator|.
name|getResource
argument_list|(
name|jsonLdQuery
operator|.
name|getResourceSubjects
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|subject
operator|.
name|hasPropertyIgnorecase
argument_list|(
name|SELECT
argument_list|)
condition|)
block|{
if|if
condition|(
name|subject
operator|.
name|hasPropertyIgnorecase
argument_list|(
name|FROM
argument_list|)
condition|)
block|{
if|if
condition|(
name|subject
operator|.
name|hasPropertyIgnorecase
argument_list|(
name|WHERE
argument_list|)
condition|)
block|{
name|query
operator|=
operator|new
name|Query
argument_list|()
expr_stmt|;
name|handleSelect
argument_list|(
name|subject
argument_list|,
name|query
argument_list|)
expr_stmt|;
name|handleFrom
argument_list|(
name|jsonLdQuery
argument_list|,
name|subject
argument_list|,
name|query
argument_list|)
expr_stmt|;
name|handleWhere
argument_list|(
name|jsonLdQuery
argument_list|,
name|subject
argument_list|,
name|query
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Query does not define a WHERE"
argument_list|)
throw|;
block|}
block|}
else|else
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Query does not define a FROM"
argument_list|)
throw|;
block|}
block|}
else|else
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Query does not define a SELECT"
argument_list|)
throw|;
block|}
block|}
else|else
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Query does not consist of exactly 1 JSON-LD subject"
argument_list|)
throw|;
block|}
block|}
block|}
return|return
name|query
return|;
block|}
specifier|private
specifier|static
name|void
name|handleSelect
parameter_list|(
name|JsonLdResource
name|subject
parameter_list|,
name|Query
name|query
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONArray
name|selects
init|=
operator|(
name|JSONArray
operator|)
name|subject
operator|.
name|getPropertyValueIgnoreCase
argument_list|(
name|SELECT
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selects
operator|.
name|length
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|role
init|=
name|selects
operator|.
name|getString
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|query
operator|.
name|roles
operator|.
name|add
argument_list|(
name|role
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|handleFrom
parameter_list|(
name|JsonLd
name|jsonLd
parameter_list|,
name|JsonLdResource
name|subject
parameter_list|,
name|Query
name|query
parameter_list|)
block|{
name|query
operator|.
name|fromSchemaURN
operator|=
operator|(
name|String
operator|)
name|subject
operator|.
name|getPropertyValueIgnoreCase
argument_list|(
name|FROM
argument_list|)
expr_stmt|;
name|query
operator|.
name|fromSchemaURN
operator|=
name|jsonLd
operator|.
name|unCURIE
argument_list|(
name|query
operator|.
name|fromSchemaURN
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|handleWhere
parameter_list|(
name|JsonLd
name|jsonLd
parameter_list|,
name|JsonLdResource
name|subject
parameter_list|,
name|Query
name|query
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONArray
name|wheres
init|=
operator|(
name|JSONArray
operator|)
name|subject
operator|.
name|getPropertyValueIgnoreCase
argument_list|(
name|WHERE
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|wheres
operator|.
name|length
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|JSONObject
name|whereObj
init|=
name|wheres
operator|.
name|getJSONObject
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|Iterator
argument_list|<
name|?
argument_list|>
name|whereIt
init|=
name|whereObj
operator|.
name|keys
argument_list|()
decl_stmt|;
while|while
condition|(
name|whereIt
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|String
name|operator
init|=
operator|(
name|String
operator|)
name|whereIt
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|operator
operator|.
name|equalsIgnoreCase
argument_list|(
name|CompareOperator
operator|.
name|EQ
operator|.
name|getLiteral
argument_list|()
argument_list|)
condition|)
block|{
name|JSONObject
name|compareValues
init|=
name|whereObj
operator|.
name|getJSONObject
argument_list|(
name|operator
argument_list|)
decl_stmt|;
name|Iterator
argument_list|<
name|?
argument_list|>
name|compareIt
init|=
name|compareValues
operator|.
name|keys
argument_list|()
decl_stmt|;
if|if
condition|(
name|compareIt
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|String
name|comparedRole
init|=
operator|(
name|String
operator|)
name|compareIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|searchedValue
init|=
literal|null
decl_stmt|;
name|Object
name|searchedValueObj
init|=
name|compareValues
operator|.
name|get
argument_list|(
name|comparedRole
argument_list|)
decl_stmt|;
if|if
condition|(
name|searchedValueObj
operator|instanceof
name|JsonLdIRI
condition|)
block|{
name|JsonLdIRI
name|iri
init|=
operator|(
name|JsonLdIRI
operator|)
name|searchedValueObj
decl_stmt|;
name|searchedValue
operator|=
name|jsonLd
operator|.
name|unCURIE
argument_list|(
name|iri
operator|.
name|getIRI
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|searchedValue
operator|=
name|searchedValueObj
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|WhereClause
name|wc
init|=
operator|new
name|WhereClause
argument_list|()
decl_stmt|;
name|wc
operator|.
name|setCompareOperator
argument_list|(
name|CompareOperator
operator|.
name|EQ
argument_list|)
expr_stmt|;
name|wc
operator|.
name|setComparedRole
argument_list|(
name|comparedRole
argument_list|)
expr_stmt|;
name|wc
operator|.
name|setSearchedValue
argument_list|(
name|searchedValue
argument_list|)
expr_stmt|;
name|query
operator|.
name|whereClauses
operator|.
name|add
argument_list|(
name|wc
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Unknown compare operator '"
operator|+
name|operator
operator|+
literal|"' in WHERE clause"
argument_list|)
throw|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

