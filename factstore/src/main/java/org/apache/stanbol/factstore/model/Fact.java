begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|factstore
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|jsonld
operator|.
name|JsonLd
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|jsonld
operator|.
name|JsonLdIRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|commons
operator|.
name|jsonld
operator|.
name|JsonLdResource
import|;
end_import

begin_class
specifier|public
class|class
name|Fact
block|{
specifier|private
name|String
name|factSchemaURN
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|roleMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|String
name|getFactSchemaURN
parameter_list|()
block|{
return|return
name|factSchemaURN
return|;
block|}
specifier|public
name|void
name|setFactSchemaURN
parameter_list|(
name|String
name|factSchemaURN
parameter_list|)
block|{
name|this
operator|.
name|factSchemaURN
operator|=
name|factSchemaURN
expr_stmt|;
block|}
specifier|public
name|void
name|addRole
parameter_list|(
name|String
name|role
parameter_list|,
name|String
name|type
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|roleMap
operator|.
name|get
argument_list|(
name|role
argument_list|)
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|roleMap
operator|.
name|put
argument_list|(
name|role
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|String
argument_list|>
name|types
init|=
name|this
operator|.
name|roleMap
operator|.
name|get
argument_list|(
name|role
argument_list|)
decl_stmt|;
name|types
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getRoles
parameter_list|()
block|{
return|return
name|this
operator|.
name|roleMap
operator|.
name|keySet
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getTypesOfRole
parameter_list|(
name|String
name|role
parameter_list|)
block|{
return|return
name|this
operator|.
name|roleMap
operator|.
name|get
argument_list|(
name|role
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Fact
name|factFromJsonLd
parameter_list|(
name|JsonLd
name|jsonLd
parameter_list|)
block|{
name|Fact
name|fact
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|jsonLd
operator|.
name|getResourceSubjects
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|String
name|subject
init|=
name|jsonLd
operator|.
name|getResourceSubjects
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|fact
operator|=
name|resourceToFact
argument_list|(
name|jsonLd
argument_list|,
name|jsonLd
operator|.
name|getResource
argument_list|(
name|subject
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|fact
return|;
block|}
specifier|public
specifier|static
name|Set
argument_list|<
name|Fact
argument_list|>
name|factsFromJsonLd
parameter_list|(
name|JsonLd
name|jsonLd
parameter_list|)
block|{
name|Set
argument_list|<
name|Fact
argument_list|>
name|facts
init|=
operator|new
name|HashSet
argument_list|<
name|Fact
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|jsonLd
operator|.
name|getResourceSubjects
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|1
condition|)
block|{
for|for
control|(
name|String
name|subject
range|:
name|jsonLd
operator|.
name|getResourceSubjects
argument_list|()
control|)
block|{
name|Fact
name|fact
init|=
name|resourceToFact
argument_list|(
name|jsonLd
argument_list|,
name|jsonLd
operator|.
name|getResource
argument_list|(
name|subject
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|fact
operator|!=
literal|null
condition|)
block|{
name|facts
operator|.
name|add
argument_list|(
name|fact
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|facts
return|;
block|}
specifier|private
specifier|static
name|Fact
name|resourceToFact
parameter_list|(
name|JsonLd
name|jsonLd
parameter_list|,
name|JsonLdResource
name|resource
parameter_list|)
block|{
name|Fact
name|fact
init|=
literal|null
decl_stmt|;
name|String
name|schemaURN
init|=
name|jsonLd
operator|.
name|unCURIE
argument_list|(
name|resource
operator|.
name|getProfile
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|schemaURN
operator|!=
literal|null
operator|&&
operator|!
name|schemaURN
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|propMap
init|=
name|resource
operator|.
name|getPropertyMap
argument_list|()
decl_stmt|;
if|if
condition|(
name|propMap
operator|.
name|size
argument_list|()
operator|>
literal|1
condition|)
block|{
name|fact
operator|=
operator|new
name|Fact
argument_list|()
expr_stmt|;
name|fact
operator|.
name|setFactSchemaURN
argument_list|(
name|schemaURN
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|role
range|:
name|propMap
operator|.
name|keySet
argument_list|()
control|)
block|{
if|if
condition|(
name|propMap
operator|.
name|get
argument_list|(
name|role
argument_list|)
operator|instanceof
name|String
condition|)
block|{
name|String
name|strType
init|=
operator|(
name|String
operator|)
name|propMap
operator|.
name|get
argument_list|(
name|role
argument_list|)
decl_stmt|;
name|fact
operator|.
name|addRole
argument_list|(
name|role
argument_list|,
name|strType
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|propMap
operator|.
name|get
argument_list|(
name|role
argument_list|)
operator|instanceof
name|JsonLdIRI
condition|)
block|{
name|JsonLdIRI
name|iriType
init|=
operator|(
name|JsonLdIRI
operator|)
name|propMap
operator|.
name|get
argument_list|(
name|role
argument_list|)
decl_stmt|;
name|fact
operator|.
name|addRole
argument_list|(
name|role
argument_list|,
name|jsonLd
operator|.
name|unCURIE
argument_list|(
name|iriType
operator|.
name|getIRI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|fact
operator|.
name|addRole
argument_list|(
name|role
argument_list|,
name|propMap
operator|.
name|get
argument_list|(
name|role
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
return|return
name|fact
return|;
block|}
block|}
end_class

end_unit

