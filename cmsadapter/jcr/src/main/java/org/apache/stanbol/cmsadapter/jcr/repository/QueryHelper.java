begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|jcr
operator|.
name|repository
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_class
specifier|public
class|class
name|QueryHelper
block|{
specifier|public
specifier|static
specifier|final
name|String
name|JCR_ITEM_BY_PATH
init|=
literal|"SELECT * from nt:base WHERE jcr:path = '%s'"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|JCR_ITEM_BY_ID
init|=
literal|"SELECT * from nt:base WHERE jcr:id = '%s'"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|JCR_ITEM_BY_NAME
init|=
literal|"//element(%s ,nt:base)"
decl_stmt|;
specifier|public
specifier|static
name|List
argument_list|<
name|JCRQueryRepresentation
argument_list|>
name|getJCRItemByPathQuery
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|List
argument_list|<
name|JCRQueryRepresentation
argument_list|>
name|queries
init|=
operator|new
name|ArrayList
argument_list|<
name|JCRQueryRepresentation
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|queryString
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|endsWith
argument_list|(
literal|"/%"
argument_list|)
condition|)
block|{
comment|// Assumed that the root node is wanted to be included in the query result
name|queryString
operator|=
name|String
operator|.
name|format
argument_list|(
name|JCR_ITEM_BY_PATH
argument_list|,
name|path
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|path
operator|.
name|length
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|queries
operator|.
name|add
argument_list|(
operator|new
name|JCRQueryRepresentation
argument_list|(
name|queryString
argument_list|,
name|Query
operator|.
name|SQL
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|queryString
operator|=
name|String
operator|.
name|format
argument_list|(
name|JCR_ITEM_BY_PATH
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|queries
operator|.
name|add
argument_list|(
operator|new
name|JCRQueryRepresentation
argument_list|(
name|queryString
argument_list|,
name|Query
operator|.
name|SQL
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|queries
return|;
block|}
specifier|public
specifier|static
name|JCRQueryRepresentation
name|getJCRItemByIDQuery
parameter_list|(
name|String
name|ID
parameter_list|)
block|{
name|String
name|queryString
init|=
name|String
operator|.
name|format
argument_list|(
name|JCR_ITEM_BY_ID
argument_list|,
name|ID
argument_list|)
decl_stmt|;
return|return
operator|new
name|JCRQueryRepresentation
argument_list|(
name|queryString
argument_list|,
name|Query
operator|.
name|SQL
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|JCRQueryRepresentation
name|getJCRItemByNameQuery
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|String
name|queryString
init|=
name|String
operator|.
name|format
argument_list|(
name|JCR_ITEM_BY_NAME
argument_list|,
name|name
argument_list|)
decl_stmt|;
return|return
operator|new
name|JCRQueryRepresentation
argument_list|(
name|queryString
argument_list|,
name|Query
operator|.
name|XPATH
argument_list|)
return|;
block|}
block|}
end_class

end_unit

