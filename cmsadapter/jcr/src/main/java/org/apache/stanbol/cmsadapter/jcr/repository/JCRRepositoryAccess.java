begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|jcr
operator|.
name|repository
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|LoginException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|NamespaceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|NodeIterator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|SimpleCredentials
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|NodeType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|query
operator|.
name|InvalidQueryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|query
operator|.
name|QueryManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|query
operator|.
name|QueryResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|annotations
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|rmi
operator|.
name|repository
operator|.
name|RMIRemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|CMSObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|ConnectionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|ObjectTypeDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|PropertyDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|repository
operator|.
name|RepositoryAccess
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|repository
operator|.
name|RepositoryAccessException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|//TODO Implement session management. Currently for each operation a new Session is retrieved.
end_comment

begin_class
annotation|@
name|Component
argument_list|(
name|immediate
operator|=
literal|true
argument_list|)
annotation|@
name|Service
specifier|public
class|class
name|JCRRepositoryAccess
implements|implements
name|RepositoryAccess
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|JCRRepositoryAccess
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|Session
name|getSession
parameter_list|(
name|ConnectionInfo
name|connectionInfo
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|Repository
name|repository
init|=
operator|new
name|RMIRemoteRepository
argument_list|(
name|connectionInfo
operator|.
name|getRepositoryURL
argument_list|()
argument_list|)
decl_stmt|;
name|Session
name|session
init|=
literal|null
decl_stmt|;
name|ClassLoader
name|cl
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
try|try
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setContextClassLoader
argument_list|(
name|JCRRepositoryAccess
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|workspaceName
init|=
name|connectionInfo
operator|.
name|getWorkspaceName
argument_list|()
decl_stmt|;
name|String
name|username
init|=
name|connectionInfo
operator|.
name|getPassword
argument_list|()
decl_stmt|;
name|String
name|password
init|=
name|connectionInfo
operator|.
name|getPassword
argument_list|()
decl_stmt|;
if|if
condition|(
name|workspaceName
operator|==
literal|null
operator|||
name|workspaceName
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|||
name|workspaceName
operator|.
name|equals
argument_list|(
literal|"default"
argument_list|)
condition|)
block|{
name|session
operator|=
name|repository
operator|.
name|login
argument_list|(
operator|new
name|SimpleCredentials
argument_list|(
name|username
argument_list|,
name|password
operator|.
name|toCharArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|session
operator|=
name|repository
operator|.
name|login
argument_list|(
operator|new
name|SimpleCredentials
argument_list|(
name|username
argument_list|,
name|password
operator|.
name|toCharArray
argument_list|()
argument_list|)
argument_list|,
name|workspaceName
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|LoginException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
literal|"Error at login:"
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
literal|"Error at obtaining session"
argument_list|,
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setContextClassLoader
argument_list|(
name|cl
argument_list|)
expr_stmt|;
block|}
return|return
name|session
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|CMSObject
argument_list|>
name|getNodeByPath
parameter_list|(
name|String
name|path
parameter_list|,
name|ConnectionInfo
name|connectionInfo
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|List
argument_list|<
name|JCRQueryRepresentation
argument_list|>
name|queries
init|=
name|QueryHelper
operator|.
name|getJCRItemByPathQuery
argument_list|(
name|path
argument_list|)
decl_stmt|;
return|return
name|processQuery
argument_list|(
name|connectionInfo
argument_list|,
name|queries
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|CMSObject
argument_list|>
name|getNodeById
parameter_list|(
name|String
name|id
parameter_list|,
name|ConnectionInfo
name|connectionInfo
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|JCRQueryRepresentation
name|query
init|=
name|QueryHelper
operator|.
name|getJCRItemByIDQuery
argument_list|(
name|id
argument_list|)
decl_stmt|;
return|return
name|processQuery
argument_list|(
name|connectionInfo
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|JCRQueryRepresentation
index|[]
block|{
name|query
block|}
argument_list|)
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|canRetrieve
parameter_list|(
name|ConnectionInfo
name|connectionInfo
parameter_list|)
block|{
return|return
name|connectionInfo
operator|.
name|getConnectionType
argument_list|()
operator|.
name|equals
argument_list|(
literal|"JCR"
argument_list|)
return|;
block|}
specifier|private
name|QueryResult
name|executeQuery
parameter_list|(
name|JCRQueryRepresentation
name|queryRep
parameter_list|,
name|ConnectionInfo
name|connectionInfo
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|Session
name|session
init|=
name|getSession
argument_list|(
name|connectionInfo
argument_list|)
decl_stmt|;
return|return
name|executeQuery
argument_list|(
name|queryRep
argument_list|,
name|session
argument_list|)
return|;
block|}
specifier|private
name|QueryResult
name|executeQuery
parameter_list|(
name|JCRQueryRepresentation
name|queryRep
parameter_list|,
name|Session
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
try|try
block|{
name|QueryManager
name|qm
decl_stmt|;
name|qm
operator|=
name|session
operator|.
name|getWorkspace
argument_list|()
operator|.
name|getQueryManager
argument_list|()
expr_stmt|;
name|Query
name|query
init|=
name|qm
operator|.
name|createQuery
argument_list|(
name|queryRep
operator|.
name|getQueryString
argument_list|()
argument_list|,
name|queryRep
operator|.
name|getQueryType
argument_list|()
argument_list|)
decl_stmt|;
name|QueryResult
name|queryResult
init|=
name|query
operator|.
name|execute
argument_list|()
decl_stmt|;
return|return
name|queryResult
return|;
block|}
catch|catch
parameter_list|(
name|InvalidQueryException
name|e1
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
literal|"Invalid Query"
argument_list|,
name|e1
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
literal|"Error at query execution"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|List
argument_list|<
name|CMSObject
argument_list|>
name|processQuery
parameter_list|(
name|ConnectionInfo
name|connInfo
parameter_list|,
name|List
argument_list|<
name|JCRQueryRepresentation
argument_list|>
name|queryReps
parameter_list|,
name|int
name|max
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|List
argument_list|<
name|CMSObject
argument_list|>
name|results
init|=
operator|new
name|ArrayList
argument_list|<
name|CMSObject
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|JCRQueryRepresentation
name|queryRep
range|:
name|queryReps
control|)
block|{
name|QueryResult
name|queryResult
init|=
name|executeQuery
argument_list|(
name|queryRep
argument_list|,
name|connInfo
argument_list|)
decl_stmt|;
name|processResult
argument_list|(
name|results
argument_list|,
name|queryResult
argument_list|,
name|max
argument_list|)
expr_stmt|;
block|}
return|return
name|results
return|;
block|}
specifier|private
name|List
argument_list|<
name|CMSObject
argument_list|>
name|processQuery
parameter_list|(
name|Session
name|session
parameter_list|,
name|List
argument_list|<
name|JCRQueryRepresentation
argument_list|>
name|queryReps
parameter_list|,
name|int
name|max
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|List
argument_list|<
name|CMSObject
argument_list|>
name|results
init|=
operator|new
name|ArrayList
argument_list|<
name|CMSObject
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|JCRQueryRepresentation
name|queryRep
range|:
name|queryReps
control|)
block|{
name|QueryResult
name|queryResult
init|=
name|executeQuery
argument_list|(
name|queryRep
argument_list|,
name|session
argument_list|)
decl_stmt|;
name|processResult
argument_list|(
name|results
argument_list|,
name|queryResult
argument_list|,
name|max
argument_list|)
expr_stmt|;
block|}
return|return
name|results
return|;
block|}
specifier|private
name|void
name|processResult
parameter_list|(
name|List
argument_list|<
name|CMSObject
argument_list|>
name|cmsObjects
parameter_list|,
name|QueryResult
name|queryResult
parameter_list|,
name|int
name|max
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
try|try
block|{
name|NodeIterator
name|nodes
init|=
name|queryResult
operator|.
name|getNodes
argument_list|()
decl_stmt|;
while|while
condition|(
name|nodes
operator|.
name|hasNext
argument_list|()
operator|&&
name|max
operator|>
literal|0
condition|)
block|{
name|Node
name|current
init|=
name|nodes
operator|.
name|nextNode
argument_list|()
decl_stmt|;
try|try
block|{
name|cmsObjects
operator|.
name|add
argument_list|(
name|JCRModelMapper
operator|.
name|getCMSObject
argument_list|(
name|current
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Can not create ObjectType for node {}"
argument_list|,
name|current
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|max
operator|--
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
literal|"Error accesing result nodes"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|CMSObject
argument_list|>
name|getNodeByPath
parameter_list|(
name|String
name|path
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|List
argument_list|<
name|JCRQueryRepresentation
argument_list|>
name|queries
init|=
name|QueryHelper
operator|.
name|getJCRItemByPathQuery
argument_list|(
name|path
argument_list|)
decl_stmt|;
return|return
name|processQuery
argument_list|(
operator|(
name|Session
operator|)
name|session
argument_list|,
name|queries
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|CMSObject
argument_list|>
name|getNodeById
parameter_list|(
name|String
name|id
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|JCRQueryRepresentation
name|query
init|=
name|QueryHelper
operator|.
name|getJCRItemByIDQuery
argument_list|(
name|id
argument_list|)
decl_stmt|;
return|return
name|processQuery
argument_list|(
operator|(
name|Session
operator|)
name|session
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|JCRQueryRepresentation
index|[]
block|{
name|query
block|}
argument_list|)
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|canRetrieve
parameter_list|(
name|Object
name|session
parameter_list|)
block|{
return|return
name|session
operator|instanceof
name|Session
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|CMSObject
argument_list|>
name|getNodeByName
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|JCRQueryRepresentation
name|query
init|=
name|QueryHelper
operator|.
name|getJCRItemByNameQuery
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|processQuery
argument_list|(
operator|(
name|Session
operator|)
name|session
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|JCRQueryRepresentation
index|[]
block|{
name|query
block|}
argument_list|)
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|CMSObject
argument_list|>
name|getNodeByName
parameter_list|(
name|String
name|name
parameter_list|,
name|ConnectionInfo
name|connectionInfo
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|JCRQueryRepresentation
name|query
init|=
name|QueryHelper
operator|.
name|getJCRItemByNameQuery
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|processQuery
argument_list|(
name|connectionInfo
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|JCRQueryRepresentation
index|[]
block|{
name|query
block|}
argument_list|)
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|CMSObject
name|getFirstNodeByPath
parameter_list|(
name|String
name|path
parameter_list|,
name|ConnectionInfo
name|connectionInfo
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|JCRQueryRepresentation
name|query
init|=
name|QueryHelper
operator|.
name|getJCRItemByPathQuery
argument_list|(
name|path
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
return|return
name|selectFirst
argument_list|(
name|processQuery
argument_list|(
name|connectionInfo
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|JCRQueryRepresentation
index|[]
block|{
name|query
block|}
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|CMSObject
name|getFirstNodeById
parameter_list|(
name|String
name|id
parameter_list|,
name|ConnectionInfo
name|connectionInfo
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|JCRQueryRepresentation
name|query
init|=
name|QueryHelper
operator|.
name|getJCRItemByIDQuery
argument_list|(
name|id
argument_list|)
decl_stmt|;
return|return
name|selectFirst
argument_list|(
name|processQuery
argument_list|(
name|connectionInfo
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|JCRQueryRepresentation
index|[]
block|{
name|query
block|}
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|CMSObject
name|getFirstNodeByPath
parameter_list|(
name|String
name|path
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|JCRQueryRepresentation
name|query
init|=
name|QueryHelper
operator|.
name|getJCRItemByPathQuery
argument_list|(
name|path
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
return|return
name|selectFirst
argument_list|(
name|processQuery
argument_list|(
operator|(
name|Session
operator|)
name|session
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|JCRQueryRepresentation
index|[]
block|{
name|query
block|}
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|CMSObject
name|getFirstNodeById
parameter_list|(
name|String
name|id
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|JCRQueryRepresentation
name|query
init|=
name|QueryHelper
operator|.
name|getJCRItemByIDQuery
argument_list|(
name|id
argument_list|)
decl_stmt|;
return|return
name|selectFirst
argument_list|(
name|processQuery
argument_list|(
operator|(
name|Session
operator|)
name|session
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|JCRQueryRepresentation
index|[]
block|{
name|query
block|}
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|CMSObject
name|getFirstNodeByName
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|JCRQueryRepresentation
name|query
init|=
name|QueryHelper
operator|.
name|getJCRItemByNameQuery
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|selectFirst
argument_list|(
name|processQuery
argument_list|(
operator|(
name|Session
operator|)
name|session
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|JCRQueryRepresentation
index|[]
block|{
name|query
block|}
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|CMSObject
name|getFirstNodeByName
parameter_list|(
name|String
name|name
parameter_list|,
name|ConnectionInfo
name|connectionInfo
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|JCRQueryRepresentation
name|query
init|=
name|QueryHelper
operator|.
name|getJCRItemByNameQuery
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|selectFirst
argument_list|(
name|processQuery
argument_list|(
name|connectionInfo
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|JCRQueryRepresentation
index|[]
block|{
name|query
block|}
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|CMSObject
name|selectFirst
parameter_list|(
name|List
argument_list|<
name|CMSObject
argument_list|>
name|nodes
parameter_list|)
block|{
if|if
condition|(
name|nodes
operator|.
name|size
argument_list|()
operator|!=
literal|1
condition|)
block|{
return|return
literal|null
return|;
block|}
else|else
block|{
return|return
name|nodes
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|CMSObject
argument_list|>
name|getChildren
parameter_list|(
name|CMSObject
name|node
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
try|try
block|{
name|Node
name|jcrNode
init|=
operator|(
operator|(
name|Session
operator|)
name|session
operator|)
operator|.
name|getNodeByIdentifier
argument_list|(
name|node
operator|.
name|getUniqueRef
argument_list|()
argument_list|)
decl_stmt|;
name|JCRModelMapper
operator|.
name|fillCMSObjectChildren
argument_list|(
name|node
argument_list|,
name|jcrNode
argument_list|)
expr_stmt|;
return|return
name|node
operator|.
name|getChildren
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|ObjectTypeDefinition
name|getObjectTypeDefinition
parameter_list|(
name|String
name|typeRef
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
try|try
block|{
name|NodeType
name|nodeType
init|=
operator|(
operator|(
name|Session
operator|)
name|session
operator|)
operator|.
name|getWorkspace
argument_list|()
operator|.
name|getNodeTypeManager
argument_list|()
operator|.
name|getNodeType
argument_list|(
name|typeRef
argument_list|)
decl_stmt|;
return|return
name|JCRModelMapper
operator|.
name|getObjectTypeDefinition
argument_list|(
name|nodeType
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|Property
argument_list|>
name|getProperties
parameter_list|(
name|CMSObject
name|node
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
try|try
block|{
name|Node
name|jcrNode
init|=
operator|(
operator|(
name|Session
operator|)
name|session
operator|)
operator|.
name|getNodeByIdentifier
argument_list|(
name|node
operator|.
name|getUniqueRef
argument_list|()
argument_list|)
decl_stmt|;
name|JCRModelMapper
operator|.
name|fillProperties
argument_list|(
name|node
argument_list|,
name|jcrNode
argument_list|)
expr_stmt|;
return|return
name|node
operator|.
name|getProperty
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|PropertyDefinition
argument_list|>
name|getPropertyDefinitions
parameter_list|(
name|ObjectTypeDefinition
name|instance
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
try|try
block|{
name|NodeType
name|nodeType
init|=
operator|(
operator|(
name|Session
operator|)
name|session
operator|)
operator|.
name|getWorkspace
argument_list|()
operator|.
name|getNodeTypeManager
argument_list|()
operator|.
name|getNodeType
argument_list|(
name|instance
operator|.
name|getUniqueRef
argument_list|()
argument_list|)
decl_stmt|;
name|JCRModelMapper
operator|.
name|fillPropertyDefinitions
argument_list|(
name|instance
argument_list|,
name|nodeType
argument_list|)
expr_stmt|;
return|return
name|instance
operator|.
name|getPropertyDefinition
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ObjectTypeDefinition
argument_list|>
name|getParentTypeDefinitions
parameter_list|(
name|ObjectTypeDefinition
name|instance
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
try|try
block|{
name|List
argument_list|<
name|ObjectTypeDefinition
argument_list|>
name|parentsResolved
init|=
operator|new
name|ArrayList
argument_list|<
name|ObjectTypeDefinition
argument_list|>
argument_list|(
name|instance
operator|.
name|getParentRef
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|parentRef
range|:
name|instance
operator|.
name|getParentRef
argument_list|()
control|)
block|{
name|NodeType
name|nodeType
init|=
operator|(
operator|(
name|Session
operator|)
name|session
operator|)
operator|.
name|getWorkspace
argument_list|()
operator|.
name|getNodeTypeManager
argument_list|()
operator|.
name|getNodeType
argument_list|(
name|parentRef
argument_list|)
decl_stmt|;
name|parentsResolved
operator|.
name|add
argument_list|(
name|JCRModelMapper
operator|.
name|getObjectTypeDefinition
argument_list|(
name|nodeType
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|parentsResolved
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ObjectTypeDefinition
argument_list|>
name|getChildObjectTypeDefinitions
parameter_list|(
name|ObjectTypeDefinition
name|instance
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
try|try
block|{
name|NodeType
name|nodeType
init|=
operator|(
operator|(
name|Session
operator|)
name|session
operator|)
operator|.
name|getWorkspace
argument_list|()
operator|.
name|getNodeTypeManager
argument_list|()
operator|.
name|getNodeType
argument_list|(
name|instance
operator|.
name|getUniqueRef
argument_list|()
argument_list|)
decl_stmt|;
name|JCRModelMapper
operator|.
name|fillChildObjectDefinitions
argument_list|(
name|instance
argument_list|,
name|nodeType
argument_list|)
expr_stmt|;
return|return
name|instance
operator|.
name|getObjectTypeDefinition
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|CMSObject
name|getContainerObject
parameter_list|(
name|Property
name|instance
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
try|try
block|{
name|Node
name|jcrNode
init|=
operator|(
operator|(
name|Session
operator|)
name|session
operator|)
operator|.
name|getNodeByIdentifier
argument_list|(
name|instance
operator|.
name|getContainerObjectRef
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|JCRModelMapper
operator|.
name|getCMSObject
argument_list|(
name|jcrNode
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|PropertyDefinition
name|getPropertyDefinition
parameter_list|(
name|Property
name|instance
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
try|try
block|{
name|NodeType
name|sourceObjectType
init|=
operator|(
operator|(
name|Session
operator|)
name|session
operator|)
operator|.
name|getWorkspace
argument_list|()
operator|.
name|getNodeTypeManager
argument_list|()
operator|.
name|getNodeType
argument_list|(
name|instance
operator|.
name|getSourceObjectTypeRef
argument_list|()
argument_list|)
decl_stmt|;
name|JCRModelMapper
operator|.
name|fillPropertyDefinition
argument_list|(
name|instance
argument_list|,
name|sourceObjectType
argument_list|)
expr_stmt|;
return|return
name|instance
operator|.
name|getPropertyDefinition
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|getNamespaceURI
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
try|try
block|{
return|return
operator|(
operator|(
name|Session
operator|)
name|session
operator|)
operator|.
name|getNamespaceURI
argument_list|(
name|prefix
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|NamespaceException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|CMSObject
name|getParentByNode
parameter_list|(
name|CMSObject
name|instance
parameter_list|,
name|Object
name|session
parameter_list|)
throws|throws
name|RepositoryAccessException
block|{
name|Node
name|parent
decl_stmt|;
try|try
block|{
if|if
condition|(
name|instance
operator|.
name|getParentRef
argument_list|()
operator|==
literal|null
condition|)
block|{
name|Node
name|jcrNode
init|=
operator|(
operator|(
name|Session
operator|)
name|session
operator|)
operator|.
name|getNodeByIdentifier
argument_list|(
name|instance
operator|.
name|getUniqueRef
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|parent
operator|=
name|jcrNode
operator|.
name|getParent
argument_list|()
expr_stmt|;
name|instance
operator|.
name|setParentRef
argument_list|(
name|parent
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// No parent
name|parent
operator|=
literal|null
expr_stmt|;
block|}
block|}
else|else
block|{
name|parent
operator|=
operator|(
operator|(
name|Session
operator|)
name|session
operator|)
operator|.
name|getNodeByIdentifier
argument_list|(
name|instance
operator|.
name|getParentRef
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|JCRModelMapper
operator|.
name|getCMSObject
argument_list|(
name|parent
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAccessException
argument_list|(
literal|"Error at accessing parent"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

