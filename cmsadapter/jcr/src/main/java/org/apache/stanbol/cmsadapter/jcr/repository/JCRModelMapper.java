begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|jcr
operator|.
name|repository
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|AccessDeniedException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|ItemNotFoundException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|NodeIterator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|PropertyIterator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|PropertyType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|Value
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|NodeDefinition
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|NodeType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|PropertyDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|CMSObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|ObjectTypeDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|PropType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|JCRModelMapper
block|{
specifier|private
specifier|static
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|JCRModelMapper
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**      * Gets a {@link Node} and transforms it to {@link CMSObject}      *       * @param jcrNode      *            JCR node to be transformed      * @return transformed {@link CMSObject}      * @throws RepositoryException      */
specifier|public
specifier|static
name|CMSObject
name|getCMSObject
parameter_list|(
name|Node
name|jcrNode
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|CMSObject
name|cmsObject
init|=
operator|new
name|CMSObject
argument_list|()
decl_stmt|;
name|cmsObject
operator|.
name|setUniqueRef
argument_list|(
name|jcrNode
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|cmsObject
operator|.
name|setLocalname
argument_list|(
name|jcrNode
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|cmsObject
operator|.
name|setPath
argument_list|(
name|jcrNode
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|cmsObject
operator|.
name|setObjectTypeRef
argument_list|(
name|jcrNode
operator|.
name|getPrimaryNodeType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
comment|// TODO For a quick fix parent ref is used for parent path
name|cmsObject
operator|.
name|setParentRef
argument_list|(
name|jcrNode
operator|.
name|getParent
argument_list|()
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ItemNotFoundException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"Item has no parent. Can not set parent ref"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AccessDeniedException
name|e1
parameter_list|)
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"Item does not have permission to access parent. Can not set parent ref"
argument_list|)
expr_stmt|;
block|}
return|return
name|cmsObject
return|;
block|}
comment|/**      * Gets a {@link NodeType} and transforms it to {@link ObjectTypeDefinition}      *       * @param jcrNodeType      *            JCR node type to be transformed      * @return transformed {@link ObjectTypeDefinition}      */
specifier|public
specifier|static
name|ObjectTypeDefinition
name|getObjectTypeDefinition
parameter_list|(
name|NodeType
name|jcrNodeType
parameter_list|)
block|{
name|ObjectTypeDefinition
name|objectTypeDefinition
init|=
operator|new
name|ObjectTypeDefinition
argument_list|()
decl_stmt|;
name|objectTypeDefinition
operator|.
name|setLocalname
argument_list|(
name|jcrNodeType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|objectTypeDefinition
operator|.
name|setUniqueRef
argument_list|(
name|jcrNodeType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|NodeType
name|superType
range|:
name|jcrNodeType
operator|.
name|getSupertypes
argument_list|()
control|)
block|{
name|objectTypeDefinition
operator|.
name|getParentRef
argument_list|()
operator|.
name|add
argument_list|(
name|superType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|objectTypeDefinition
return|;
block|}
comment|/**      * Gets a {@link Property} and transforms it to      * {@link org.apache.stanbol.cmsadapter.servicesapi.model.web.Property}      *       * @param jcrProperty      *            JCR property to be transformed      * @return transformed {@link org.apache.stanbol.cmsadapter.servicesapi.model.web.Property}      * @throws RepositoryException      */
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|Property
name|getProperty
parameter_list|(
name|Property
name|jcrProperty
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|Property
name|property
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|Property
argument_list|()
decl_stmt|;
name|String
name|sourceObjectType
init|=
name|jcrProperty
operator|.
name|getDefinition
argument_list|()
operator|.
name|getDeclaringNodeType
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
name|String
name|localName
init|=
name|jcrProperty
operator|.
name|getName
argument_list|()
decl_stmt|;
name|property
operator|.
name|setSourceObjectTypeRef
argument_list|(
name|sourceObjectType
argument_list|)
expr_stmt|;
name|property
operator|.
name|setLocalname
argument_list|(
name|localName
argument_list|)
expr_stmt|;
name|property
operator|.
name|setPropertyDefinition
argument_list|(
name|getPropertyDefinition
argument_list|(
name|jcrProperty
operator|.
name|getDefinition
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|property
operator|.
name|setContainerObjectRef
argument_list|(
name|jcrProperty
operator|.
name|getParent
argument_list|()
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO Consider value types
if|if
condition|(
name|jcrProperty
operator|.
name|isMultiple
argument_list|()
condition|)
block|{
for|for
control|(
name|Value
name|value
range|:
name|jcrProperty
operator|.
name|getValues
argument_list|()
control|)
block|{
name|property
operator|.
name|getValue
argument_list|()
operator|.
name|add
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|property
operator|.
name|getValue
argument_list|()
operator|.
name|add
argument_list|(
name|jcrProperty
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|property
return|;
block|}
comment|/**      * Gets a {@link PropertyDefinition} and transforms it to      * {@link org.apache.stanbol.cmsadapter.servicesapi.model.web.PropertyDefinition}      *       * @param jcrPropertyDefinition      *            JCR property definition to be transformed      * @return transformed {@link org.apache.stanbol.cmsadapter.servicesapi.model.web.PropertyDefinition}      */
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|PropertyDefinition
name|getPropertyDefinition
parameter_list|(
name|PropertyDefinition
name|jcrPropertyDefinition
parameter_list|)
block|{
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|PropertyDefinition
name|propertyDefinition
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|PropertyDefinition
argument_list|()
decl_stmt|;
name|propertyDefinition
operator|.
name|setLocalname
argument_list|(
name|jcrPropertyDefinition
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|propertyDefinition
operator|.
name|setPropertyType
argument_list|(
name|mapPropertyType
argument_list|(
name|jcrPropertyDefinition
operator|.
name|getRequiredType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|propertyDefinition
operator|.
name|setRequired
argument_list|(
name|jcrPropertyDefinition
operator|.
name|isMandatory
argument_list|()
argument_list|)
expr_stmt|;
name|propertyDefinition
operator|.
name|setSourceObjectTypeRef
argument_list|(
name|jcrPropertyDefinition
operator|.
name|getDeclaringNodeType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|propertyDefinition
operator|.
name|setUniqueRef
argument_list|(
name|getPropertyName
argument_list|(
name|jcrPropertyDefinition
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|valueConstraints
init|=
name|jcrPropertyDefinition
operator|.
name|getValueConstraints
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|constraint
range|:
name|valueConstraints
control|)
block|{
name|propertyDefinition
operator|.
name|getValueConstraint
argument_list|()
operator|.
name|add
argument_list|(
name|constraint
argument_list|)
expr_stmt|;
block|}
return|return
name|propertyDefinition
return|;
block|}
comment|/**      * Gets a JCR property type as integer value and transforms it to {@link PropType}      *       * @param jcrPropType      *            JCR property to be transformed      * @return transformed {@link PropType}      * @throws IllegalStateException      */
specifier|private
specifier|static
name|PropType
name|mapPropertyType
parameter_list|(
name|int
name|jcrPropType
parameter_list|)
throws|throws
name|IllegalStateException
block|{
name|String
name|upperCasePropType
init|=
name|PropertyType
operator|.
name|nameFromValue
argument_list|(
name|jcrPropType
argument_list|)
operator|.
name|toUpperCase
argument_list|()
decl_stmt|;
return|return
name|PropType
operator|.
name|fromValue
argument_list|(
name|upperCasePropType
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|String
name|getPropertyName
parameter_list|(
name|String
name|declaringNodeTypeRef
parameter_list|,
name|String
name|localName
parameter_list|)
block|{
return|return
name|declaringNodeTypeRef
operator|+
literal|"/"
operator|+
name|localName
return|;
block|}
specifier|private
specifier|static
name|String
name|getPropertyName
parameter_list|(
name|PropertyDefinition
name|jcrPropertyDefinition
parameter_list|)
block|{
return|return
name|getPropertyName
argument_list|(
name|jcrPropertyDefinition
operator|.
name|getDeclaringNodeType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|jcrPropertyDefinition
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|fillCMSObjectChildren
parameter_list|(
name|CMSObject
name|cmsObject
parameter_list|,
name|Node
name|jcrNode
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|NodeIterator
name|nit
init|=
name|jcrNode
operator|.
name|getNodes
argument_list|()
decl_stmt|;
while|while
condition|(
name|nit
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Node
name|childNode
init|=
name|nit
operator|.
name|nextNode
argument_list|()
decl_stmt|;
name|CMSObject
name|child
init|=
name|getCMSObject
argument_list|(
name|childNode
argument_list|)
decl_stmt|;
name|cmsObject
operator|.
name|getChildren
argument_list|()
operator|.
name|add
argument_list|(
name|child
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|fillProperties
parameter_list|(
name|CMSObject
name|node
parameter_list|,
name|Node
name|jcrNode
parameter_list|)
throws|throws
name|RepositoryException
block|{
name|PropertyIterator
name|pit
init|=
name|jcrNode
operator|.
name|getProperties
argument_list|()
decl_stmt|;
while|while
condition|(
name|pit
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Property
name|jcrProperty
init|=
name|pit
operator|.
name|nextProperty
argument_list|()
decl_stmt|;
name|node
operator|.
name|getProperty
argument_list|()
operator|.
name|add
argument_list|(
name|getProperty
argument_list|(
name|jcrProperty
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|fillChildObjectDefinitions
parameter_list|(
name|ObjectTypeDefinition
name|instance
parameter_list|,
name|NodeType
name|nodeType
parameter_list|)
block|{
name|NodeDefinition
index|[]
name|childNodeDefinitions
init|=
name|nodeType
operator|.
name|getChildNodeDefinitions
argument_list|()
decl_stmt|;
for|for
control|(
name|NodeDefinition
name|childNodeDefinition
range|:
name|childNodeDefinitions
control|)
block|{
name|instance
operator|.
name|getObjectTypeDefinition
argument_list|()
operator|.
name|add
argument_list|(
name|getObjectTypeDefinition
argument_list|(
name|childNodeDefinition
operator|.
name|getDeclaringNodeType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|fillPropertyDefinition
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|Property
name|instance
parameter_list|,
name|NodeType
name|sourceObjectType
parameter_list|)
throws|throws
name|RepositoryException
block|{
for|for
control|(
name|javax
operator|.
name|jcr
operator|.
name|nodetype
operator|.
name|PropertyDefinition
name|propDef
range|:
name|sourceObjectType
operator|.
name|getPropertyDefinitions
argument_list|()
control|)
block|{
if|if
condition|(
name|instance
operator|.
name|getLocalname
argument_list|()
operator|.
name|contentEquals
argument_list|(
name|propDef
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|instance
operator|.
name|setPropertyDefinition
argument_list|(
name|getPropertyDefinition
argument_list|(
name|propDef
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
specifier|public
specifier|static
name|void
name|fillPropertyDefinitions
parameter_list|(
name|ObjectTypeDefinition
name|instance
parameter_list|,
name|NodeType
name|nodeType
parameter_list|)
block|{
for|for
control|(
name|PropertyDefinition
name|propertyDefinition
range|:
name|nodeType
operator|.
name|getPropertyDefinitions
argument_list|()
control|)
block|{
name|instance
operator|.
name|getPropertyDefinition
argument_list|()
operator|.
name|add
argument_list|(
name|getPropertyDefinition
argument_list|(
name|propertyDefinition
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

