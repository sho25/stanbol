begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|core
operator|.
name|decorated
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|ChildObjectDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|ObjectTypeDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|decorated
operator|.
name|DChildObjectType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|decorated
operator|.
name|DObjectAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|decorated
operator|.
name|DObjectType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|repository
operator|.
name|RepositoryAccess
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|repository
operator|.
name|RepositoryAccessException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|DChildObjectTypeImp
implements|implements
name|DChildObjectType
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|DChildObjectTypeImp
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|ChildObjectDefinition
name|instance
decl_stmt|;
specifier|private
name|DObjectAdapter
name|factory
decl_stmt|;
specifier|private
name|RepositoryAccess
name|access
decl_stmt|;
specifier|private
name|DObjectType
name|allowedObjectDefinition
init|=
literal|null
decl_stmt|;
specifier|public
name|DChildObjectTypeImp
parameter_list|(
name|ChildObjectDefinition
name|instance
parameter_list|,
name|DObjectAdapter
name|factory
parameter_list|,
name|RepositoryAccess
name|access
parameter_list|)
block|{
name|this
operator|.
name|instance
operator|=
name|instance
expr_stmt|;
name|this
operator|.
name|factory
operator|=
name|factory
expr_stmt|;
name|this
operator|.
name|access
operator|=
name|access
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isRequired
parameter_list|()
block|{
return|return
name|instance
operator|.
name|isRequired
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|DObjectType
name|getAllowedObjectDefinitions
parameter_list|()
throws|throws
name|RepositoryAccessException
block|{
if|if
condition|(
name|allowedObjectDefinition
operator|==
literal|null
condition|)
block|{
switch|switch
condition|(
name|factory
operator|.
name|getMode
argument_list|()
condition|)
block|{
case|case
name|ONLINE
case|:
name|allowedObjectDefinition
operator|=
name|getAllowedOnline
argument_list|()
expr_stmt|;
break|break;
case|case
name|TOLERATED_OFFLINE
case|:
try|try
block|{
name|allowedObjectDefinition
operator|=
name|getAllowedOnline
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryAccessException
name|e
parameter_list|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Can not access repository at fetching allowed object type d"
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|STRICT_OFFLINE
case|:
break|break;
block|}
block|}
return|return
name|allowedObjectDefinition
return|;
block|}
specifier|private
name|DObjectType
name|getAllowedOnline
parameter_list|()
throws|throws
name|RepositoryAccessException
block|{
name|ObjectTypeDefinition
name|allowedDefinition
init|=
name|access
operator|.
name|getAllowableTypeDef
argument_list|(
name|instance
argument_list|,
name|factory
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|factory
operator|.
name|wrapAsDObjectType
argument_list|(
name|allowedDefinition
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ChildObjectDefinition
name|getInstance
parameter_list|()
block|{
return|return
name|instance
return|;
block|}
block|}
end_class

end_unit

