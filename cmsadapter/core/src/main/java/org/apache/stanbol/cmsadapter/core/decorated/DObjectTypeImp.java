begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|core
operator|.
name|decorated
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|ObjectTypeDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|PropertyDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|decorated
operator|.
name|DObjectAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|decorated
operator|.
name|DObjectType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|web
operator|.
name|decorated
operator|.
name|DPropertyDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|repository
operator|.
name|RepositoryAccess
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|repository
operator|.
name|RepositoryAccessException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|DObjectTypeImp
implements|implements
name|DObjectType
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|DObjectTypeImp
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|ObjectTypeDefinition
name|instance
decl_stmt|;
specifier|private
name|DObjectAdapter
name|factory
decl_stmt|;
specifier|private
name|RepositoryAccess
name|access
decl_stmt|;
specifier|private
name|List
argument_list|<
name|DPropertyDefinition
argument_list|>
name|propertyDefinitions
decl_stmt|;
specifier|private
name|List
argument_list|<
name|DObjectType
argument_list|>
name|parentDefinitions
decl_stmt|;
specifier|private
name|List
argument_list|<
name|DObjectType
argument_list|>
name|childDefinitions
decl_stmt|;
specifier|public
name|DObjectTypeImp
parameter_list|(
name|ObjectTypeDefinition
name|instance
parameter_list|,
name|DObjectAdapter
name|factory
parameter_list|,
name|RepositoryAccess
name|access
parameter_list|)
block|{
name|this
operator|.
name|instance
operator|=
name|instance
expr_stmt|;
name|this
operator|.
name|factory
operator|=
name|factory
expr_stmt|;
name|this
operator|.
name|access
operator|=
name|access
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getID
parameter_list|()
block|{
return|return
name|instance
operator|.
name|getUniqueRef
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|instance
operator|.
name|getLocalname
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getNamespace
parameter_list|()
block|{
return|return
name|instance
operator|.
name|getNamespace
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|DPropertyDefinition
argument_list|>
name|getPropertyDefinitions
parameter_list|()
throws|throws
name|RepositoryAccessException
block|{
if|if
condition|(
name|propertyDefinitions
operator|!=
literal|null
condition|)
block|{
return|return
name|propertyDefinitions
return|;
block|}
else|else
block|{
name|List
argument_list|<
name|PropertyDefinition
argument_list|>
name|propDefinitions
init|=
name|access
operator|.
name|getPropertyDefinitions
argument_list|(
name|instance
argument_list|,
name|factory
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
name|propertyDefinitions
operator|=
operator|new
name|ArrayList
argument_list|<
name|DPropertyDefinition
argument_list|>
argument_list|(
name|propDefinitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|PropertyDefinition
name|propDefinition
range|:
name|propDefinitions
control|)
block|{
name|propertyDefinitions
operator|.
name|add
argument_list|(
name|factory
operator|.
name|wrapAsDPropertyDefinition
argument_list|(
name|propDefinition
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|propertyDefinitions
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|DObjectType
argument_list|>
name|getParentDefinitions
parameter_list|()
throws|throws
name|RepositoryAccessException
block|{
if|if
condition|(
name|parentDefinitions
operator|!=
literal|null
condition|)
block|{
return|return
name|parentDefinitions
return|;
block|}
name|List
argument_list|<
name|ObjectTypeDefinition
argument_list|>
name|parDefinitions
init|=
name|access
operator|.
name|getParentTypeDefinitions
argument_list|(
name|instance
argument_list|,
name|factory
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
name|propertyDefinitions
operator|=
operator|new
name|ArrayList
argument_list|<
name|DPropertyDefinition
argument_list|>
argument_list|(
name|parDefinitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|ObjectTypeDefinition
name|parentTypeRef
range|:
name|parDefinitions
control|)
block|{
name|parentDefinitions
operator|.
name|add
argument_list|(
name|factory
operator|.
name|wrapAsDObjectType
argument_list|(
name|parentTypeRef
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|parentDefinitions
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|DObjectType
argument_list|>
name|getChildDefinitions
parameter_list|()
throws|throws
name|RepositoryAccessException
block|{
if|if
condition|(
name|childDefinitions
operator|==
literal|null
condition|)
block|{
switch|switch
condition|(
name|factory
operator|.
name|getMode
argument_list|()
condition|)
block|{
case|case
name|ONLINE
case|:
name|childDefinitions
operator|=
name|getChildDefinitionsOnline
argument_list|()
expr_stmt|;
break|break;
case|case
name|TOLERATED_OFFLINE
case|:
try|try
block|{
name|childDefinitions
operator|=
name|getChildDefinitionsOnline
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryAccessException
name|e
parameter_list|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Can not access repository while fetching childs definitions of type {}"
argument_list|,
name|instance
operator|.
name|getUniqueRef
argument_list|()
argument_list|)
expr_stmt|;
name|childDefinitions
operator|=
name|getChildDefinitionsOffline
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|STRICT_OFFLINE
case|:
name|childDefinitions
operator|=
name|getChildDefinitionsOffline
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
return|return
name|childDefinitions
return|;
block|}
specifier|private
name|List
argument_list|<
name|DObjectType
argument_list|>
name|getChildDefinitionsOnline
parameter_list|()
throws|throws
name|RepositoryAccessException
block|{
name|List
argument_list|<
name|ObjectTypeDefinition
argument_list|>
name|childDefs
init|=
name|access
operator|.
name|getChildObjectTypeDefinitions
argument_list|(
name|instance
argument_list|,
name|factory
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|wrapChildObjectDefinitions
argument_list|(
name|childDefs
argument_list|)
return|;
block|}
specifier|private
name|List
argument_list|<
name|DObjectType
argument_list|>
name|getChildDefinitionsOffline
parameter_list|()
block|{
return|return
name|wrapChildObjectDefinitions
argument_list|(
name|instance
operator|.
name|getObjectTypeDefinition
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|List
argument_list|<
name|DObjectType
argument_list|>
name|wrapChildObjectDefinitions
parameter_list|(
name|List
argument_list|<
name|ObjectTypeDefinition
argument_list|>
name|childDefs
parameter_list|)
block|{
name|List
argument_list|<
name|DObjectType
argument_list|>
name|childDefinitions
init|=
operator|new
name|ArrayList
argument_list|<
name|DObjectType
argument_list|>
argument_list|(
name|childDefs
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|ObjectTypeDefinition
name|childDef
range|:
name|childDefs
control|)
block|{
name|childDefinitions
operator|.
name|add
argument_list|(
name|factory
operator|.
name|wrapAsDObjectType
argument_list|(
name|childDef
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|childDefinitions
return|;
block|}
annotation|@
name|Override
specifier|public
name|ObjectTypeDefinition
name|getInstance
parameter_list|()
block|{
return|return
name|instance
return|;
block|}
block|}
end_class

end_unit

