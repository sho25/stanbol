begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.3-hudson-jaxb-ri-2.2.3-3-
end_comment

begin_comment
comment|// See<a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
end_comment

begin_comment
comment|// Any modifications to this file will be lost upon recompilation of the source schema.
end_comment

begin_comment
comment|// Generated on: 2011.05.09 at 02:52:53 PM EEST
end_comment

begin_comment
comment|//
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|stanbol
operator|.
name|cmsadapter
operator|.
name|servicesapi
operator|.
name|model
operator|.
name|mapping
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRegistry
import|;
end_import

begin_comment
comment|/**  * This object contains factory methods for each   * Java content interface and Java element interface   * generated in the org.apache.stanbol.cmsadapter.servicesapi.model.mapping package.   *<p>An ObjectFactory allows you to programatically   * construct new instances of the Java representation   * for XML content. The Java representation of XML   * content can consist of schema derived interfaces   * and classes representing the binding of schema   * type definitions, element declarations and model   * groups.  Factory methods for each of these are   * provided in this class.  *   */
end_comment

begin_class
annotation|@
name|XmlRegistry
specifier|public
class|class
name|ObjectFactory
block|{
comment|/**      * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.apache.stanbol.cmsadapter.servicesapi.model.mapping      *       */
specifier|public
name|ObjectFactory
parameter_list|()
block|{     }
comment|/**      * Create an instance of {@link InstanceBridge }      *       */
specifier|public
name|InstanceBridge
name|createInstanceBridge
parameter_list|()
block|{
return|return
operator|new
name|InstanceBridge
argument_list|()
return|;
block|}
comment|/**      * Create an instance of {@link PropertyBridge }      *       */
specifier|public
name|PropertyBridge
name|createPropertyBridge
parameter_list|()
block|{
return|return
operator|new
name|PropertyBridge
argument_list|()
return|;
block|}
comment|/**      * Create an instance of {@link PropertyAnnotation }      *       */
specifier|public
name|PropertyAnnotation
name|createPropertyAnnotation
parameter_list|()
block|{
return|return
operator|new
name|PropertyAnnotation
argument_list|()
return|;
block|}
comment|/**      * Create an instance of {@link ConceptBridge }      *       */
specifier|public
name|ConceptBridge
name|createConceptBridge
parameter_list|()
block|{
return|return
operator|new
name|ConceptBridge
argument_list|()
return|;
block|}
comment|/**      * Create an instance of {@link SubsumptionBridge }      *       */
specifier|public
name|SubsumptionBridge
name|createSubsumptionBridge
parameter_list|()
block|{
return|return
operator|new
name|SubsumptionBridge
argument_list|()
return|;
block|}
comment|/**      * Create an instance of {@link BridgeDefinitions }      *       */
specifier|public
name|BridgeDefinitions
name|createBridgeDefinitions
parameter_list|()
block|{
return|return
operator|new
name|BridgeDefinitions
argument_list|()
return|;
block|}
comment|/**      * Create an instance of {@link NameType }      *       */
specifier|public
name|NameType
name|createNameType
parameter_list|()
block|{
return|return
operator|new
name|NameType
argument_list|()
return|;
block|}
block|}
end_class

end_unit

